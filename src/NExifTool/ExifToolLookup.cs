// -------------------------------------------------------------------
// generated from: exiftool.xml
// generated on: 3/16/2016 2:56:35 PM
// -------------------------------------------------------------------
using System;
using System.Collections.Generic;


namespace NExifTool
{
    public class ExifToolLookup
    {
        public static readonly Dictionary<string, TagInfo> Details = new Dictionary<string, TagInfo>();


        static void InitTable1()
        {
            AddInfo("afcp:afcp:other::name", "Thumbnail Image", "?");
            AddInfo("afcp:afcp:other::name", "Preview Image", "?");
            AddInfo("afcp:afcp:other::name", "Text", "?");
        }


        static void InitTable2()
        {
            AddInfo("aiff:aiff:audio::name", "Comment Time", "?");
            AddInfo("aiff:aiff:audio::name", "Marker ID", "?");
            AddInfo("aiff:aiff:audio::name", "Comment", "?");
        }


        static void InitTable3()
        {
            AddInfo("aiff:aiff:audio::name", "Num Channels", "int16u");
            AddInfo("aiff:aiff:audio::name", "Num Sample Frames", "int32u");
            AddInfo("aiff:aiff:audio::name", "Sample Size", "int16u");
            AddInfo("aiff:aiff:audio::name", "Sample Rate", "extended");
            AddInfo("aiff:aiff:audio::name", "Compression Type", "string");
            AddInfo("aiff:aiff:audio::name", "Compressor Name", "pstring");
        }


        static void InitTable4()
        {
            AddInfo("aiff:aiff:other::name", "Format Version Time", "int32u");
        }


        static void InitTable5()
        {
            AddInfo("aiff:aiff:audio::name", "Copyright", "?");
            AddInfo("aiff:aiff:audio::name", "Annotation", "?");
            AddInfo("aiff:aiff:audio::name", "Author", "?");
            AddInfo("aiff:aiff:audio::name", "Name", "?");
        }


        static void InitTable6()
        {
            AddInfo("ape:ape:audio::name", "Album", "?");
            AddInfo("ape:ape:audio::name", "Artist", "?");
            AddInfo("ape:ape:audio::name", "Genre", "?");
            AddInfo("ape:ape:audio::name", "Title", "?");
            AddInfo("ape:ape:audio::name", "Tool Name", "?");
            AddInfo("ape:ape:audio::name", "Tool Version", "?");
            AddInfo("ape:ape:audio::name", "Track", "?");
            AddInfo("ape:ape:audio::name", "Year", "?");
        }


        static void InitTable7()
        {
            AddInfo("ape:mac:audio::name", "Compression Level", "int16u");
            AddInfo("ape:mac:audio::name", "Blocks Per Frame", "int32u");
            AddInfo("ape:mac:audio::name", "Final Frame Blocks", "int32u");
            AddInfo("ape:mac:audio::name", "Total Frames", "int32u");
            AddInfo("ape:mac:audio::name", "Bits Per Sample", "int16u");
            AddInfo("ape:mac:audio::name", "Channels", "int16u");
            AddInfo("ape:mac:audio::name", "Sample Rate", "int32u");
        }


        static void InitTable8()
        {
            AddInfo("ape:mac:audio::name", "APE Version", "int16u");
            AddInfo("ape:mac:audio::name", "Compression Level", "int16u");
            AddInfo("ape:mac:audio::name", "Channels", "int16u");
            AddInfo("ape:mac:audio::name", "Sample Rate", "int32u");
            AddInfo("ape:mac:audio::name", "Total Frames", "int32u");
            AddInfo("ape:mac:audio::name", "Final Frame Blocks", "int32u");
        }


        static void InitTable9()
        {
            AddInfo("ducky:ducky:image::name", "Quality", "int32u");
            AddInfo("ducky:ducky:image::name", "Comment", "string");
            AddInfo("ducky:ducky:image::name", "Copyright", "string");
        }


        static void InitTable10()
        {
            AddInfo("app12:pictureinfo:image::name", "Aperture", "?");
            AddInfo("app12:pictureinfo:image::name", "Color Mode", "?");
            AddInfo("app12:pictureinfo:image::name", "Con Take", "?");
            AddInfo("app12:pictureinfo:image::name", "Exposure Compensation", "?");
            AddInfo("app12:pictureinfo:image::name", "F Number", "?");
            AddInfo("app12:pictureinfo:image::name", "Firmware Version", "?");
            AddInfo("app12:pictureinfo:image::name", "Flash", "?");
            AddInfo("app12:pictureinfo:image::name", "Focus Mode", "?");
            AddInfo("app12:pictureinfo:image::name", "Focus Pos", "?");
            AddInfo("app12:pictureinfo:image::name", "ID", "?");
            AddInfo("app12:pictureinfo:image::name", "Image Size", "?");
            AddInfo("app12:pictureinfo:image::name", "Light S", "?");
            AddInfo("app12:pictureinfo:image::name", "Macro", "?");
            AddInfo("app12:pictureinfo:image::name", "Protect", "?");
            AddInfo("app12:pictureinfo:image::name", "Quality", "?");
            AddInfo("app12:pictureinfo:image::name", "Resolution", "?");
            AddInfo("app12:pictureinfo:image::name", "Serial Number", "?");
            AddInfo("app12:pictureinfo:image::name", "Exposure Time", "?");
            AddInfo("app12:pictureinfo:image::name", "Strobe Time", "?");
            AddInfo("app12:pictureinfo:image::name", "Date/Time Original", "?");
            AddInfo("app12:pictureinfo:image::name", "Camera Type", "?");
            AddInfo("app12:pictureinfo:image::name", "Version", "?");
            AddInfo("app12:pictureinfo:image::name", "Y Target", "?");
            AddInfo("app12:pictureinfo:image::name", "Zoom", "?");
            AddInfo("app12:pictureinfo:image::name", "Zoom Pos", "?");
            AddInfo("app12:pictureinfo:image::name", "Exposure Time", "?");
            AddInfo("app12:pictureinfo:image::name", "Y Level", "?");
        }


        static void InitTable11()
        {
            AddInfo("asf:asf:other::name", "Audio Codec Description", "?");
            AddInfo("asf:asf:other::name", "Audio Codec Name", "?");
            AddInfo("asf:asf:other::name", "Other Codec Description", "?");
            AddInfo("asf:asf:other::name", "Other Codec Name", "?");
            AddInfo("asf:asf:other::name", "Video Codec Description", "?");
            AddInfo("asf:asf:other::name", "Video Codec Name", "?");
        }


        static void InitTable12()
        {
            AddInfo("asf:asf:author::name", "Banner Image Type", "?");
            AddInfo("asf:asf:author::name", "Banner Image", "?");
            AddInfo("asf:asf:author::name", "Banner Image URL", "?");
            AddInfo("asf:asf:author::name", "Copyright URL", "?");
        }


        static void InitTable13()
        {
            AddInfo("asf:asf:video::name", "Title", "?");
            AddInfo("asf:asf:video::name", "Author", "?");
            AddInfo("asf:asf:video::name", "Copyright", "?");
            AddInfo("asf:asf:video::name", "Description", "?");
            AddInfo("asf:asf:video::name", "Rating", "?");
        }


        static void InitTable14()
        {
            AddInfo("asf:asf:video::name", "ASF Leaky Bucket Pairs", "?");
            AddInfo("asf:asf:video::name", "ASF Packet Count", "?");
            AddInfo("asf:asf:video::name", "ASF Security Objects Size", "?");
            AddInfo("asf:asf:video::name", "Album Artist", "?");
            AddInfo("asf:asf:video::name", "Album Cover URL", "?");
            AddInfo("asf:asf:video::name", "Album Title", "?");
            AddInfo("asf:asf:video::name", "Aspect Ratio X", "?");
            AddInfo("asf:asf:video::name", "Aspect Ratio Y", "?");
            AddInfo("asf:asf:video::name", "Audio File URL", "?");
            AddInfo("asf:asf:video::name", "Audio Source URL", "?");
            AddInfo("asf:asf:video::name", "Author", "?");
            AddInfo("asf:asf:video::name", "Author URL", "?");
            AddInfo("asf:asf:video::name", "Average Level", "?");
            AddInfo("asf:asf:video::name", "Banner Image Data", "?");
            AddInfo("asf:asf:video::name", "Banner Image Type", "?");
            AddInfo("asf:asf:video::name", "Banner Image URL", "?");
            AddInfo("asf:asf:video::name", "Beats Per Minute", "?");
            AddInfo("asf:asf:video::name", "Bitrate", "?");
            AddInfo("asf:asf:video::name", "Broadcast", "?");
            AddInfo("asf:asf:video::name", "Buffer Average", "?");
            AddInfo("asf:asf:video::name", "Can Skip Backward", "?");
            AddInfo("asf:asf:video::name", "Can Skip Forward", "?");
            AddInfo("asf:asf:video::name", "Category", "?");
            AddInfo("asf:asf:video::name", "Codec", "?");
            AddInfo("asf:asf:video::name", "Composer", "?");
            AddInfo("asf:asf:video::name", "Conductor", "?");
            AddInfo("asf:asf:video::name", "Container Format", "?");
            AddInfo("asf:asf:video::name", "Content Distributor", "?");
            AddInfo("asf:asf:video::name", "Content Group Description", "?");
            AddInfo("asf:asf:video::name", "Copyright", "?");
            AddInfo("asf:asf:video::name", "Copyright URL", "?");
            AddInfo("asf:asf:video::name", "Current Bitrate", "?");
            AddInfo("asf:asf:video::name", "DRM", "?");
            AddInfo("asf:asf:video::name", "DRM Content ID", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header Content Distributor", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header Content ID", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header Individualized Version", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header Key ID", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header License Acq URL", "?");
            AddInfo("asf:asf:video::name", "DRM DRM Header Subscription Content ID", "?");
            AddInfo("asf:asf:video::name", "DRM Individualized Version", "?");
            AddInfo("asf:asf:video::name", "DRM Key ID", "?");
            AddInfo("asf:asf:video::name", "DRM LA Signature Cert", "?");
            AddInfo("asf:asf:video::name", "DRM LA Signature Lic Srv Cert", "?");
            AddInfo("asf:asf:video::name", "DRM LA Signature Priv Key", "?");
            AddInfo("asf:asf:video::name", "DRM LA Signature Root Cert", "?");
            AddInfo("asf:asf:video::name", "DRM License Acq URL", "?");
            AddInfo("asf:asf:video::name", "DRM V1 License Acq URL", "?");
            AddInfo("asf:asf:video::name", "DVDID", "?");
            AddInfo("asf:asf:video::name", "Description", "?");
            AddInfo("asf:asf:video::name", "Director", "?");
            AddInfo("asf:asf:video::name", "Duration", "?");
            AddInfo("asf:asf:video::name", "Encoded By", "?");
            AddInfo("asf:asf:video::name", "Encoding Settings", "?");
            AddInfo("asf:asf:video::name", "Encoding Time", "?");
            AddInfo("asf:asf:video::name", "File Size", "?");
            AddInfo("asf:asf:video::name", "Genre", "?");
            AddInfo("asf:asf:video::name", "Genre ID", "?");
            AddInfo("asf:asf:video::name", "Has Arbitrary Data Stream", "?");
            AddInfo("asf:asf:video::name", "Has Attached Images", "?");
            AddInfo("asf:asf:video::name", "Has Audio", "?");
            AddInfo("asf:asf:video::name", "Has File Transfer Stream", "?");
            AddInfo("asf:asf:video::name", "Has Image", "?");
            AddInfo("asf:asf:video::name", "Has Script", "?");
            AddInfo("asf:asf:video::name", "Has Video", "?");
            AddInfo("asf:asf:video::name", "ISRC", "?");
            AddInfo("asf:asf:video::name", "Initial Key", "?");
            AddInfo("asf:asf:video::name", "Is VBR", "?");
            AddInfo("asf:asf:video::name", "Is Protected", "?");
            AddInfo("asf:asf:video::name", "Is Trusted", "?");
            AddInfo("asf:asf:video::name", "Language", "?");
            AddInfo("asf:asf:video::name", "Lyrics", "?");
            AddInfo("asf:asf:video::name", "Lyrics Synchronised", "?");
            AddInfo("asf:asf:video::name", "MCDI", "?");
            AddInfo("asf:asf:video::name", "Media Class Primary ID", "?");
            AddInfo("asf:asf:video::name", "Media Class Secondary ID", "?");
            AddInfo("asf:asf:video::name", "Media Credits", "?");
            AddInfo("asf:asf:video::name", "Media Is Delay", "?");
            AddInfo("asf:asf:video::name", "Media Is Finale", "?");
            AddInfo("asf:asf:video::name", "Media Is Live", "?");
            AddInfo("asf:asf:video::name", "Media Is Premiere", "?");
            AddInfo("asf:asf:video::name", "Media Is Repeat", "?");
            AddInfo("asf:asf:video::name", "Media Is SAP", "?");
            AddInfo("asf:asf:video::name", "Media Is Stereo", "?");
            AddInfo("asf:asf:video::name", "Media Is Subtitled", "?");
            AddInfo("asf:asf:video::name", "Media Is Tape", "?");
            AddInfo("asf:asf:video::name", "Media Network Affiliation", "?");
            AddInfo("asf:asf:video::name", "Media Original Broadcast Date Time", "?");
            AddInfo("asf:asf:video::name", "Media Original Channel", "?");
            AddInfo("asf:asf:video::name", "Media Station Call Sign", "?");
            AddInfo("asf:asf:video::name", "Media Station Name", "?");
            AddInfo("asf:asf:video::name", "Modified By", "?");
            AddInfo("asf:asf:video::name", "Mood", "?");
            AddInfo("asf:asf:video::name", "NSC Address", "?");
            AddInfo("asf:asf:video::name", "NSC Description", "?");
            AddInfo("asf:asf:video::name", "NSC Email", "?");
            AddInfo("asf:asf:video::name", "NSC Name", "?");
            AddInfo("asf:asf:video::name", "NSC Phone", "?");
            AddInfo("asf:asf:video::name", "Number Of Frames", "?");
            AddInfo("asf:asf:video::name", "Optimal Bitrate", "?");
            AddInfo("asf:asf:video::name", "Original Album Title", "?");
            AddInfo("asf:asf:video::name", "Original Artist", "?");
            AddInfo("asf:asf:video::name", "Original File Name", "?");
            AddInfo("asf:asf:video::name", "Original Lyricist", "?");
            AddInfo("asf:asf:video::name", "Original Release Time", "?");
            AddInfo("asf:asf:video::name", "Original Release Year", "?");
            AddInfo("asf:asf:video::name", "Parental Rating", "?");
            AddInfo("asf:asf:video::name", "Parental Rating Reason", "?");
            AddInfo("asf:asf:video::name", "Part Of Set", "?");
            AddInfo("asf:asf:video::name", "Peak Bitrate", "?");
            AddInfo("asf:asf:video::name", "Peak Value", "?");
            AddInfo("asf:asf:video::name", "Period", "?");
            AddInfo("asf:asf:video::name", "Playlist Delay", "?");
            AddInfo("asf:asf:video::name", "Producer", "?");
            AddInfo("asf:asf:video::name", "Promotion URL", "?");
            AddInfo("asf:asf:video::name", "Protection Type", "?");
            AddInfo("asf:asf:video::name", "Provider", "?");
            AddInfo("asf:asf:video::name", "Provider Copyright", "?");
            AddInfo("asf:asf:video::name", "Provider Rating", "?");
            AddInfo("asf:asf:video::name", "Provider Style", "?");
            AddInfo("asf:asf:video::name", "Publisher", "?");
            AddInfo("asf:asf:video::name", "Radio Station Name", "?");
            AddInfo("asf:asf:video::name", "Radio Station Owner", "?");
            AddInfo("asf:asf:video::name", "Rating", "?");
            AddInfo("asf:asf:video::name", "Seekable", "?");
            AddInfo("asf:asf:video::name", "Shared User Rating", "?");
            AddInfo("asf:asf:video::name", "Signature Name", "?");
            AddInfo("asf:asf:video::name", "Stream Type Info", "?");
            AddInfo("asf:asf:video::name", "Stridable", "?");
            AddInfo("asf:asf:video::name", "Subtitle", "?");
            AddInfo("asf:asf:video::name", "Subtitle Description", "?");
            AddInfo("asf:asf:video::name", "Subscription Content ID", "?");
            AddInfo("asf:asf:video::name", "Text", "?");
            AddInfo("asf:asf:video::name", "Title", "?");
            AddInfo("asf:asf:video::name", "Tool Name", "?");
            AddInfo("asf:asf:video::name", "Tool Version", "?");
            AddInfo("asf:asf:video::name", "Track", "?");
            AddInfo("asf:asf:video::name", "Track Number", "?");
            AddInfo("asf:asf:video::name", "Unique File Identifier", "?");
            AddInfo("asf:asf:video::name", "User Web URL", "?");
            AddInfo("asf:asf:video::name", "VBR Peak", "?");
            AddInfo("asf:asf:video::name", "Video Closed Captioning", "?");
            AddInfo("asf:asf:video::name", "Video Frame Rate", "?");
            AddInfo("asf:asf:video::name", "Video Height", "?");
            AddInfo("asf:asf:video::name", "Video Width", "?");
            AddInfo("asf:asf:video::name", "WMADRC Average Reference", "?");
            AddInfo("asf:asf:video::name", "WMADRC Average Target", "?");
            AddInfo("asf:asf:video::name", "WMADRC Peak Reference", "?");
            AddInfo("asf:asf:video::name", "WMADRC Peak Target", "?");
            AddInfo("asf:asf:video::name", "WM Collection Group ID", "?");
            AddInfo("asf:asf:video::name", "WM Collection ID", "?");
            AddInfo("asf:asf:video::name", "WM Content ID", "?");
            AddInfo("asf:asf:video::name", "Writer", "?");
            AddInfo("asf:asf:video::name", "Year", "?");
        }


        static void InitTable15()
        {
            AddInfo("asf:asf:video::name", "File ID", "binary");
            AddInfo("asf:asf:video::name", "File Length", "int64u");
            AddInfo("asf:asf:video::name", "Creation Date", "int64u");
            AddInfo("asf:asf:video::name", "Data Packets", "int64u");
            AddInfo("asf:asf:video::name", "Play Duration", "int64u");
            AddInfo("asf:asf:video::name", "Send Duration", "int64u");
            AddInfo("asf:asf:video::name", "Preroll", "int64u");
            AddInfo("asf:asf:video::name", "Flags", "int32u");
            AddInfo("asf:asf:video::name", "Min Packet Size", "int32u");
            AddInfo("asf:asf:video::name", "Max Packet Size", "int32u");
            AddInfo("asf:asf:video::name", "Max Bitrate", "int32u");
        }


        static void InitTable16()
        {
            AddInfo("asf:asf:other::name", "Padding", "?");
            AddInfo("asf:asf:other::name", "Script Command", "?");
            AddInfo("asf:asf:other::name", "Content Encryption", "?");
            AddInfo("asf:asf:other::name", "Digital Signature", "?");
            AddInfo("asf:asf:other::name", "Extended Content Encryption", "?");
            AddInfo("asf:asf:other::name", "Error Correction", "?");
            AddInfo("asf:asf:other::name", "Stream Bitrate Props", "?");
            AddInfo("asf:asf:other::name", "Bitrate Mutual Exclusion", "?");
            AddInfo("asf:asf:other::name", "Marker", "?");
        }


        static void InitTable17()
        {
            AddInfo("asf:asf:other::name", "Extended Stream Props", "?");
            AddInfo("asf:asf:other::name", "Advanced Content Encryption", "?");
            AddInfo("asf:asf:other::name", "Timecode Index Parms", "?");
            AddInfo("asf:asf:other::name", "Compatibility", "?");
            AddInfo("asf:asf:other::name", "Language List", "?");
            AddInfo("asf:asf:other::name", "Advanced Mutual Excl", "?");
            AddInfo("asf:asf:other::name", "Bandwidth Sharing", "?");
            AddInfo("asf:asf:other::name", "Reserved 1", "?");
            AddInfo("asf:asf:other::name", "Group Mutual Exclusion", "?");
            AddInfo("asf:asf:other::name", "Stream Prioritization", "?");
            AddInfo("asf:asf:other::name", "Index Parameters", "?");
        }


        static void InitTable18()
        {
            AddInfo("asf:asf:other::name", "Simple Index", "?");
            AddInfo("asf:asf:other::name", "Timecode Index", "?");
            AddInfo("asf:asf:other::name", "Data", "?");
            AddInfo("asf:asf:other::name", "Index", "?");
            AddInfo("asf:asf:other::name", "Media Index", "?");
        }


        static void InitTable19()
        {
            AddInfo("asf:asf:image::name", "Picture Type", "?");
            AddInfo("asf:asf:image::name", "Picture MIME Type", "?");
            AddInfo("asf:asf:image::name", "Picture Description", "?");
            AddInfo("asf:asf:image::name", "Picture", "?");
        }


        static void InitTable20()
        {
            AddInfo("asf:asf:video::name", "Stream Type", "binary");
            AddInfo("asf:asf:video::name", "Error Correction Type", "binary");
            AddInfo("asf:asf:video::name", "Time Offset", "int64u");
            AddInfo("asf:asf:video::name", "Stream Number", "int16u");
            AddInfo("asf:asf:video::name", "Audio Codec ID", "int16u");
            AddInfo("asf:asf:video::name", "Image Width", "int32u");
            AddInfo("asf:asf:video::name", "Audio Channels", "int16u");
            AddInfo("asf:asf:video::name", "Audio Sample Rate", "int32u");
            AddInfo("asf:asf:video::name", "Image Height", "int32u");
        }


        static void InitTable21()
        {
            AddInfo("makernotes:apple:image::name", "HDR Image Type", "int32s");
            AddInfo("makernotes:apple:image::name", "Burst UUID", "string");
        }


        static void InitTable22()
        {
            AddInfo("makernotes:apple:image::name", "Run Time Epoch", "?");
            AddInfo("makernotes:apple:image::name", "Run Time Flags", "?");
            AddInfo("makernotes:apple:image::name", "Run Time Scale", "?");
            AddInfo("makernotes:apple:image::name", "Run Time Value", "?");
        }


        static void InitTable23()
        {
            AddInfo("audible:audible:audio::name", "Chapter Count", "?");
            AddInfo("audible:audible:audio::name", "Cover Art", "?");
            AddInfo("audible:audible:audio::name", "Author", "?");
            AddInfo("audible:audible:audio::name", "Copyright", "?");
            AddInfo("audible:audible:audio::name", "Publish Date Start", "?");
            AddInfo("audible:audible:audio::name", "Publish Date", "?");
        }


        static void InitTable24()
        {
            AddInfo("quicktime:audible:audio::name", "Cover Art", "?");
            AddInfo("quicktime:audible:audio::name", "Cover Art Type", "?");
        }


        static void InitTable25()
        {
            AddInfo("quicktime:audible:audio::name", "Album Artist", "?");
            AddInfo("quicktime:audible:audio::name", "Album", "?");
            AddInfo("quicktime:audible:audio::name", "Artist", "?");
            AddInfo("quicktime:audible:audio::name", "Comment", "?");
            AddInfo("quicktime:audible:audio::name", "Genre", "?");
            AddInfo("quicktime:audible:audio::name", "Subtitle", "?");
            AddInfo("quicktime:audible:audio::name", "Creator Tool", "?");
            AddInfo("quicktime:audible:audio::name", "Title", "?");
            AddInfo("quicktime:audible:audio::name", "Year", "?");
            AddInfo("quicktime:audible:audio::name", "iTunes Media Type", "?");
            AddInfo("quicktime:audible:audio::name", "Chapter Name", "?");
        }


        static void InitTable26()
        {
            AddInfo("quicktime:audible:audio::name", "Chapter Number", "int32u");
        }


        static void InitTable27()
        {
            AddInfo("file:file:image::name", "Image Width", "int32u");
            AddInfo("file:file:image::name", "Image Height", "int32s");
            AddInfo("file:file:image::name", "Planes", "int16u");
            AddInfo("file:file:image::name", "Bit Depth", "int16u");
            AddInfo("file:file:image::name", "Compression", "int32u");
            AddInfo("file:file:image::name", "Image Length", "int32u");
            AddInfo("file:file:image::name", "Pixels Per Meter X", "int32u");
            AddInfo("file:file:image::name", "Pixels Per Meter Y", "int32u");
            AddInfo("file:file:image::name", "Num Colors", "int32u");
            AddInfo("file:file:image::name", "Num Important Colors", "int32u");
        }


        static void InitTable28()
        {
            AddInfo("file:file:image::name", "Image Width", "int16u");
            AddInfo("file:file:image::name", "Image Height", "int16u");
            AddInfo("file:file:image::name", "Planes", "int16u");
            AddInfo("file:file:image::name", "Bit Depth", "int16u");
        }


        static void InitTable29()
        {
            AddInfo("makernotes:canon:camera::name", "AF Config Tool", "int32s");
            AddInfo("makernotes:canon:camera::name", "AF Tracking Sensitivity", "int32s");
            AddInfo("makernotes:canon:camera::name", "AF Accel/Decel Tracking", "int32s");
            AddInfo("makernotes:canon:camera::name", "AF Point Switching", "int32s");
        }


        static void InitTable30()
        {
            AddInfo("makernotes:canon:camera::name", "Num AF Points", "int16u");
            AddInfo("makernotes:canon:camera::name", "Valid AF Points", "int16u");
            AddInfo("makernotes:canon:camera::name", "Canon Image Width", "int16u");
            AddInfo("makernotes:canon:camera::name", "Canon Image Height", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Image Width", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Image Height", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Area Width", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Area Height", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Area X Positions", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Area Y Positions", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Points In Focus", "int16s");
            AddInfo("makernotes:canon:camera::name", "Primary AF Point", "int16u");
            AddInfo("makernotes:canon:camera::name", "Canon AF Info 0x000b", "int16u");
            AddInfo("makernotes:canon:camera::name", "Primary AF Point", "int16u");
        }


        static void InitTable31()
        {
            AddInfo("makernotes:canon:camera::name", "AF Info Size", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:canon:camera::name", "Num AF Points", "int16u");
            AddInfo("makernotes:canon:camera::name", "Valid AF Points", "int16u");
            AddInfo("makernotes:canon:camera::name", "Canon Image Width", "int16u");
            AddInfo("makernotes:canon:camera::name", "Canon Image Height", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Image Width", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Image Height", "int16u");
            AddInfo("makernotes:canon:camera::name", "AF Area Widths", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Area Heights", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Area X Positions", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Area Y Positions", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Points In Focus", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Points Selected", "int16s");
            AddInfo("makernotes:canon:camera::name", "Canon AF Info 2 0x000d", "int16s");
            AddInfo("makernotes:canon:camera::name", "Primary AF Point", "int16u");
        }


        static void InitTable32()
        {
            AddInfo("makernotes:canon:camera::name", "AF Micro Adj Mode", "int32s");
            AddInfo("makernotes:canon:camera::name", "AF Micro Adj Value", "rational64s");
        }


        static void InitTable33()
        {
            AddInfo("makernotes:canon:camera::name", "Ambience Selection", "int32s");
        }


        static void InitTable34()
        {
            AddInfo("makernotes:canon:camera::name", "Aspect Ratio", "int32u");
            AddInfo("makernotes:canon:camera::name", "Cropped Image Width", "int32u");
            AddInfo("makernotes:canon:camera::name", "Cropped Image Height", "int32u");
            AddInfo("makernotes:canon:camera::name", "Cropped Image Left", "int32u");
            AddInfo("makernotes:canon:camera::name", "Cropped Image Top", "int32u");
        }


        static void InitTable35()
        {
            AddInfo("makernotes:canon:video::name", "Thumbnail Image", "undef");
        }


        static void InitTable36()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Lens Model", "string");
        }


        static void InitTable37()
        {
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:canon:camera::name", "Sharpness Frequency", "int8u");
            AddInfo("makernotes:canon:camera::name", "Sharpness", "int8s");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:canon:camera::name", "Sharpness Frequency", "int8u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Sharpness", "int8s");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
        }


        static void InitTable38()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable39()
        {
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focal Type", "int8u");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Canon Image Size", "int16u");
            AddInfo("makernotes:canon:camera::name", "JPEG Quality", "int8u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Saturation", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast", "int8s");
            AddInfo("makernotes:canon:camera::name", "ISO", "string");
        }


        static void InitTable40()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Time Stamp 1", "int32u");
            AddInfo("makernotes:canon:camera::name", "Time Stamp", "int32u");
        }


        static void InitTable41()
        {
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Sharpness", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone", "int8s");
            AddInfo("makernotes:canon:camera::name", "ISO", "string");
        }


        static void InitTable42()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Measured EV 2", "int8u");
            AddInfo("makernotes:canon:camera::name", "Measured EV 3", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable43()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Lens Model", "string");
        }


        static void InitTable44()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "Owner Name", "string");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Lens Model", "string");
        }


        static void InitTable45()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:canon:camera::name", "Auto Lighting Optimizer", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable46()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:canon:camera::name", "Auto Lighting Optimizer", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable47()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable48()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8s");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8s");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "AF Points In Focus 5D", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Revision", "string");
            AddInfo("makernotes:canon:camera::name", "Short Owner Name", "string");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "File Index", "int16u");
            AddInfo("makernotes:canon:camera::name", "Contrast Standard", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast Portrait", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast Landscape", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast Neutral", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast Faithful", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast Monochrome", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 1", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 2", "int8s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 3", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Standard", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Portrait", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Landscape", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Neutral", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Faithful", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Monochrome", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 1", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 2", "int8s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 3", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation Standard", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation Portrait", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation Landscape", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation Neutral", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation Faithful", "int8s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Monochrome", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 1", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 2", "int8s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 3", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Standard", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Portrait", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Landscape", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Neutral", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Faithful", "int8s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Monochrome", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 1", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 2", "int8s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 3", "int8s");
            AddInfo("makernotes:canon:camera::name", "User Def 1 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 2 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 3 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "Time Stamp", "int32u");
        }


        static void InitTable49()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Macro Magnification", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:canon:camera::name", "Auto Lighting Optimizer", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable50()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "File Index 2", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index 2", "int32u");
        }


        static void InitTable51()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable52()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable53()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable54()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Picture Style", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable55()
        {
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable56()
        {
            AddInfo("makernotes:canon:camera::name", "Firmware Version Look Ahead", "undef");
            AddInfo("makernotes:canon:camera::name", "F Number", "int8u");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:canon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int8u");
            AddInfo("makernotes:canon:camera::name", "Measured EV 2", "int8u");
            AddInfo("makernotes:canon:camera::name", "Measured EV", "int8u");
            AddInfo("makernotes:canon:camera::name", "Flash Metering Mode", "int8u");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Upper", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Focus Distance Lower", "int16urev");
            AddInfo("makernotes:canon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16urev");
            AddInfo("makernotes:canon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Index", "int32u");
            AddInfo("makernotes:canon:camera::name", "Directory Index", "int32u");
        }


        static void InitTable57()
        {
            AddInfo("makernotes:canon:camera::name", "ISO", "int32s");
            AddInfo("makernotes:canon:camera::name", "F Number", "int32s");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int32s");
            AddInfo("makernotes:canon:camera::name", "Rotation", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
        }


        static void InitTable58()
        {
            AddInfo("makernotes:canon:camera::name", "ISO", "int32s");
            AddInfo("makernotes:canon:camera::name", "F Number", "int32s");
            AddInfo("makernotes:canon:camera::name", "Exposure Time", "int32s");
            AddInfo("makernotes:canon:camera::name", "Rotation", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
        }


        static void InitTable59()
        {
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:canon:camera::name", "Camera Temperature", "int32s");
        }


        static void InitTable60()
        {
            AddInfo("makernotes:canon:camera::name", "Macro Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Self Timer", "int16s");
            AddInfo("makernotes:canon:camera::name", "Quality", "int16s");
            AddInfo("makernotes:canon:camera::name", "Canon Flash Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Continuous Drive", "int16s");
            AddInfo("makernotes:canon:camera::name", "Focus Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Record Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Canon Image Size", "int16s");
            AddInfo("makernotes:canon:camera::name", "Easy Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Digital Zoom", "int16s");
            AddInfo("makernotes:canon:camera::name", "Contrast", "int16s");
            AddInfo("makernotes:canon:camera::name", "Saturation", "int16s");
            AddInfo("makernotes:canon:camera::name", "Sharpness", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera ISO", "int16s");
            AddInfo("makernotes:canon:camera::name", "Metering Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Focus Range", "int16s");
            AddInfo("makernotes:canon:camera::name", "AF Point", "int16s");
            AddInfo("makernotes:canon:camera::name", "Canon Exposure Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Lens Type", "int16s");
            AddInfo("makernotes:canon:camera::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:canon:camera::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:canon:camera::name", "Focal Units", "int16s");
            AddInfo("makernotes:canon:camera::name", "Max Aperture", "int16s");
            AddInfo("makernotes:canon:camera::name", "Min Aperture", "int16s");
            AddInfo("makernotes:canon:camera::name", "Flash Activity", "int16s");
            AddInfo("makernotes:canon:camera::name", "Flash Bits", "int16s");
            AddInfo("makernotes:canon:camera::name", "Focus Continuous", "int16s");
            AddInfo("makernotes:canon:camera::name", "AE Setting", "int16s");
            AddInfo("makernotes:canon:camera::name", "Image Stabilization", "int16s");
            AddInfo("makernotes:canon:camera::name", "Display Aperture", "int16s");
            AddInfo("makernotes:canon:camera::name", "Zoom Source Width", "int16s");
            AddInfo("makernotes:canon:camera::name", "Zoom Target Width", "int16s");
            AddInfo("makernotes:canon:camera::name", "Spot Metering Mode", "int16s");
            AddInfo("makernotes:canon:camera::name", "Photo Effect", "int16s");
            AddInfo("makernotes:canon:camera::name", "Manual Flash Output", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Tone", "int16s");
            AddInfo("makernotes:canon:camera::name", "SRAW Quality", "int16s");
        }


        static void InitTable61()
        {
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Custom", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Black Levels", "int16s");
        }


        static void InitTable62()
        {
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 01", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 02", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 03", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 04", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 05", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 06", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 07", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 08", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 09", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 15", "int16s");
        }


        static void InitTable63()
        {
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 13", "int16s");
        }


        static void InitTable64()
        {
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Custom 1", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Custom 1", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Custom 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Custom 2", "int16s");
        }


        static void InitTable65()
        {
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC1", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC1", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "Raw Measured RGGB", "int32u");
        }


        static void InitTable66()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC1", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC1", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels PC3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp PC3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Custom", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Custom", "int16s");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Flash Output", "int16s");
            AddInfo("makernotes:canon:camera::name", "Flash Battery Level", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash Data", "int16s");
            AddInfo("makernotes:canon:camera::name", "Measured RGGB Data", "int32u");
        }


        static void InitTable67()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
            AddInfo("makernotes:canon:camera::name", "Average Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Raw Measured RGGB", "int32u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
        }


        static void InitTable68()
        {
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 01", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 02", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 03", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 04", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 05", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 06", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 07", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 08", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 09", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Camera Color Calibration 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16s");
        }


        static void InitTable69()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Average Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Raw Measured RGGB", "int32u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
        }


        static void InitTable70()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 17", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 17", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 18", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 18", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 19", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 19", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 20", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 20", "int16s");
            AddInfo("makernotes:canon:camera::name", "Average Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Raw Measured RGGB", "int32u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Raw Measured RGGB", "int32u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
        }


        static void InitTable71()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp As Shot", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Auto", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Measured", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 2", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 3", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 4", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 5", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 6", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 7", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 8", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 9", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 10", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 11", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Daylight", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Shade", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Cloudy", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Tungsten", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Fluorescent", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Kelvin", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Flash", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 12", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 13", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 14", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 15", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 16", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 17", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 17", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 18", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 18", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 19", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 19", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 20", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 20", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 21", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 21", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 22", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 22", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 23", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 23", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 24", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 24", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 25", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 25", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 26", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 26", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 27", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 27", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 28", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 28", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 29", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 29", "int16s");
            AddInfo("makernotes:canon:camera::name", "WB RGGB Levels Unknown 30", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Temp Unknown 30", "int16s");
            AddInfo("makernotes:canon:camera::name", "Average Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Per Channel Black Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Normal White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Specular White Level", "int16u");
            AddInfo("makernotes:canon:camera::name", "Linearity Upper Margin", "int16u");
        }


        static void InitTable72()
        {
            AddInfo("makernotes:canon:camera::name", "Color Data Version", "int16s");
        }


        static void InitTable73()
        {
            AddInfo("makernotes:canon:camera::name", "Saturation", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Tone", "int16s");
            AddInfo("makernotes:canon:camera::name", "Color Space", "int16s");
        }


        static void InitTable74()
        {
            AddInfo("makernotes:canon:camera::name", "Intelligent Contrast", "int16u");
        }


        static void InitTable75()
        {
            AddInfo("makernotes:canon:camera::name", "Crop Left Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Crop Right Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Crop Top Margin", "int16u");
            AddInfo("makernotes:canon:camera::name", "Crop Bottom Margin", "int16u");
        }


        static void InitTable76()
        {
            AddInfo("makernotes:canon:image::name", "Faces Detected", "int16u");
            AddInfo("makernotes:canon:image::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:canon:image::name", "Face 1 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 2 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 3 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 4 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 5 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 6 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 7 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 8 Position", "int16s");
            AddInfo("makernotes:canon:image::name", "Face 9 Position", "int16s");
        }


        static void InitTable77()
        {
            AddInfo("makernotes:canon:image::name", "Face Width", "int8u");
            AddInfo("makernotes:canon:image::name", "Faces Detected", "int8u");
        }


        static void InitTable78()
        {
            AddInfo("makernotes:canon:image::name", "Faces Detected", "int16u");
        }


        static void InitTable79()
        {
            AddInfo("makernotes:canon:image::name", "File Number", "int32u");
            AddInfo("makernotes:canon:image::name", "File Number", "int32u");
            AddInfo("makernotes:canon:image::name", "Shutter Count", "int32u");
            AddInfo("makernotes:canon:image::name", "Shutter Count", "int32u");
            AddInfo("makernotes:canon:image::name", "Bracket Mode", "int16s");
            AddInfo("makernotes:canon:image::name", "Bracket Value", "int16s");
            AddInfo("makernotes:canon:image::name", "Bracket Shot Number", "int16s");
            AddInfo("makernotes:canon:image::name", "Raw Jpg Quality", "int16s");
            AddInfo("makernotes:canon:image::name", "Raw Jpg Size", "int16s");
            AddInfo("makernotes:canon:image::name", "Long Exposure Noise Reduction 2", "int16s");
            AddInfo("makernotes:canon:image::name", "WB Bracket Mode", "int16s");
            AddInfo("makernotes:canon:image::name", "WB Bracket Value AB", "int16s");
            AddInfo("makernotes:canon:image::name", "WB Bracket Value GM", "int16s");
            AddInfo("makernotes:canon:image::name", "Filter Effect", "int16s");
            AddInfo("makernotes:canon:image::name", "Toning Effect", "int16s");
            AddInfo("makernotes:canon:image::name", "Macro Magnification", "int16s");
            AddInfo("makernotes:canon:image::name", "Live View Shooting", "int16s");
            AddInfo("makernotes:canon:image::name", "Focus Distance Upper", "int16u");
            AddInfo("makernotes:canon:image::name", "Focus Distance Lower", "int16u");
            AddInfo("makernotes:canon:image::name", "Flash Exposure Lock", "int16s");
        }


        static void InitTable80()
        {
            AddInfo("makernotes:canon:camera::name", "Grainy B/W Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Soft Focus Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Toy Camera Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Miniature Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Miniature Filter Orientation", "?");
            AddInfo("makernotes:canon:camera::name", "Miniature Filter Position", "?");
            AddInfo("makernotes:canon:camera::name", "Miniature Filter Parameter", "?");
            AddInfo("makernotes:canon:camera::name", "Fisheye Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Painting Filter", "?");
            AddInfo("makernotes:canon:camera::name", "Watercolor Filter", "?");
        }


        static void InitTable81()
        {
            AddInfo("makernotes:canon:camera::name", "Modified Param Flag", "int16s");
        }


        static void InitTable82()
        {
            AddInfo("makernotes:canon:image::name", "Focal Type", "int16u");
            AddInfo("makernotes:canon:image::name", "Focal Length", "int16u");
            AddInfo("makernotes:canon:image::name", "Focal Plane X Size", "int16u");
            AddInfo("makernotes:canon:image::name", "Focal Plane X Unknown", "int16u");
            AddInfo("makernotes:canon:image::name", "Focal Plane Y Size", "int16u");
            AddInfo("makernotes:canon:image::name", "Focal Plane Y Unknown", "int16u");
        }


        static void InitTable83()
        {
            AddInfo("makernotes:canon:image::name", "HDR", "int32s");
            AddInfo("makernotes:canon:image::name", "HDR Effect", "int32s");
        }


        static void InitTable84()
        {
            AddInfo("makernotes:canon:camera::name", "Lens Serial Number", "undef");
        }


        static void InitTable85()
        {
            AddInfo("makernotes:canon:camera::name", "Peripheral Illumination Corr", "int32s");
            AddInfo("makernotes:canon:camera::name", "Auto Lighting Optimizer", "int32s");
            AddInfo("makernotes:canon:camera::name", "Highlight Tone Priority", "int32s");
            AddInfo("makernotes:canon:camera::name", "Long Exposure Noise Reduction", "int32s");
            AddInfo("makernotes:canon:camera::name", "High ISO Noise Reduction", "int32s");
        }


        static void InitTable86()
        {
            AddInfo("makernotes:canon:camera::name", "Canon Flash Info", "?");
            AddInfo("makernotes:canon:camera::name", "Canon Image Type", "string");
            AddInfo("makernotes:canon:camera::name", "Canon Firmware Version", "string");
            AddInfo("makernotes:canon:camera::name", "File Number", "int32u");
            AddInfo("makernotes:canon:camera::name", "Owner Name", "string");
            AddInfo("makernotes:canon:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:canon:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:canon:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:canon:camera::name", "Canon File Length", "int32u");
            AddInfo("makernotes:canon:camera::name", "Canon Model ID", "int32u");
            AddInfo("makernotes:canon:camera::name", "Thumbnail Image Valid Area", "int16u");
            AddInfo("makernotes:canon:camera::name", "Serial Number Format", "int32u");
            AddInfo("makernotes:canon:camera::name", "Super Macro", "int16u");
            AddInfo("makernotes:canon:camera::name", "Date Stamp Mode", "int16u");
            AddInfo("makernotes:canon:camera::name", "Firmware Revision", "int32u");
            AddInfo("makernotes:canon:camera::name", "Categories", "int32u");
            AddInfo("makernotes:canon:camera::name", "Image Unique ID", "int8u");
            AddInfo("makernotes:canon:camera::name", "Raw Data Offset", "?");
            AddInfo("makernotes:canon:camera::name", "Original Decision Data Offset", "int32u");
            AddInfo("makernotes:canon:camera::name", "AF Points In Focus 1D", "?");
            AddInfo("makernotes:canon:camera::name", "Lens Model", "string");
            AddInfo("makernotes:canon:camera::name", "Internal Serial Number", "string");
            AddInfo("makernotes:canon:camera::name", "Dust Removal Data", "undef");
            AddInfo("makernotes:canon:camera::name", "Tone Curve Table", "?");
            AddInfo("makernotes:canon:camera::name", "Sharpness Table", "?");
            AddInfo("makernotes:canon:camera::name", "Sharpness Freq Table", "?");
            AddInfo("makernotes:canon:camera::name", "White Balance Table", "?");
            AddInfo("makernotes:canon:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canon:camera::name", "Tone Curve Matching", "?");
            AddInfo("makernotes:canon:camera::name", "White Balance Matching", "?");
            AddInfo("makernotes:canon:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:canon:camera::name", "VRD Offset", "int32u");
            AddInfo("makernotes:canon:camera::name", "CRW Param", "undef");
            AddInfo("makernotes:canon:camera::name", "Flavor", "?");
            AddInfo("makernotes:canon:camera::name", "Black Level", "?");
            AddInfo("makernotes:canon:camera::name", "Custom Picture Style File Name", "string");
        }


        static void InitTable87()
        {
            AddInfo("makernotes:canon:camera::name", "Measured RGGB", "int16u");
        }


        static void InitTable88()
        {
            AddInfo("makernotes:canon:camera::name", "Modified Tone Curve", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Sharpness", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Sharpness Freq", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Sensor Red Level", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Sensor Blue Level", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified White Balance Red", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified White Balance Blue", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified White Balance", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Color Temp", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Picture Style", "int16s");
            AddInfo("makernotes:canon:camera::name", "Modified Digital Gain", "int16s");
        }


        static void InitTable89()
        {
            AddInfo("makernotes:canon:video::name", "Frame Rate", "int16u");
            AddInfo("makernotes:canon:video::name", "Frame Count", "int16u");
            AddInfo("makernotes:canon:video::name", "Frame Count", "int32u");
            AddInfo("makernotes:canon:video::name", "Frame Rate", "rational32u");
            AddInfo("makernotes:canon:video::name", "Duration", "int32u");
            AddInfo("makernotes:canon:video::name", "Audio Bitrate", "int32u");
            AddInfo("makernotes:canon:video::name", "Audio Sample Rate", "int32u");
            AddInfo("makernotes:canon:video::name", "Audio Channels", "int32u");
            AddInfo("makernotes:canon:video::name", "Video Codec", "undef");
        }


        static void InitTable90()
        {
            AddInfo("makernotes:canon:image::name", "Multi Exposure", "int32s");
            AddInfo("makernotes:canon:image::name", "Multi Exposure Control", "int32s");
            AddInfo("makernotes:canon:image::name", "Multi Exposure Shots", "int32s");
        }


        static void InitTable91()
        {
            AddInfo("makernotes:canon:image::name", "My Color Mode", "int16u");
        }


        static void InitTable92()
        {
            AddInfo("makernotes:canon:camera::name", "Contrast Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "User Def 1 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 2 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 3 Picture Style", "int16u");
        }


        static void InitTable93()
        {
            AddInfo("makernotes:canon:camera::name", "Contrast Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Standard", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Portrait", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Landscape", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Neutral", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Faithful", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Monochrome", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect Auto", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 1", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 2", "int32s");
            AddInfo("makernotes:canon:camera::name", "Contrast User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Sharpness User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Saturation User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Color Tone User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Filter Effect User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "Toning Effect User Def 3", "int32s");
            AddInfo("makernotes:canon:camera::name", "User Def 1 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 2 Picture Style", "int16u");
            AddInfo("makernotes:canon:camera::name", "User Def 3 Picture Style", "int16u");
        }


        static void InitTable94()
        {
            AddInfo("makernotes:canon:image::name", "Panorama Frame Number", "int16s");
            AddInfo("makernotes:canon:image::name", "Panorama Direction", "int16s");
        }


        static void InitTable95()
        {
            AddInfo("makernotes:canon:image::name", "Preview Quality", "int32u");
            AddInfo("makernotes:canon:image::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:canon:image::name", "Preview Image Width", "int32u");
            AddInfo("makernotes:canon:image::name", "Preview Image Height", "int32u");
            AddInfo("makernotes:canon:image::name", "Preview Image Start", "int32u");
        }


        static void InitTable96()
        {
            AddInfo("makernotes:canon:image::name", "Tone Curve", "int16s");
            AddInfo("makernotes:canon:image::name", "Sharpness", "int16s");
            AddInfo("makernotes:canon:image::name", "Sharpness Frequency", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Red Level", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Blue Level", "int16s");
            AddInfo("makernotes:canon:image::name", "White Balance Red", "int16s");
            AddInfo("makernotes:canon:image::name", "White Balance Blue", "int16s");
            AddInfo("makernotes:canon:image::name", "White Balance", "int16s");
            AddInfo("makernotes:canon:image::name", "Color Temperature", "int16s");
            AddInfo("makernotes:canon:image::name", "Picture Style", "int16s");
            AddInfo("makernotes:canon:image::name", "Digital Gain", "int16s");
            AddInfo("makernotes:canon:image::name", "WB Shift AB", "int16s");
            AddInfo("makernotes:canon:image::name", "WB Shift GM", "int16s");
        }


        static void InitTable97()
        {
            AddInfo("makernotes:canon:image::name", "Sensor Width", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Height", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Left Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Top Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Right Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Sensor Bottom Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Black Mask Left Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Black Mask Top Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Black Mask Right Border", "int16s");
            AddInfo("makernotes:canon:image::name", "Black Mask Bottom Border", "int16s");
        }


        static void InitTable98()
        {
            AddInfo("makernotes:canon:camera::name", "Internal Serial Number", "string");
        }


        static void InitTable99()
        {
            AddInfo("makernotes:canon:image::name", "Auto ISO", "int16s");
            AddInfo("makernotes:canon:image::name", "Base ISO", "int16s");
            AddInfo("makernotes:canon:image::name", "Measured EV", "int16s");
            AddInfo("makernotes:canon:image::name", "Target Aperture", "int16s");
            AddInfo("makernotes:canon:image::name", "Target Exposure Time", "int16s");
            AddInfo("makernotes:canon:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:canon:image::name", "White Balance", "int16s");
            AddInfo("makernotes:canon:image::name", "Slow Shutter", "int16s");
            AddInfo("makernotes:canon:image::name", "Shot Number In Continuous Burst", "int16s");
            AddInfo("makernotes:canon:image::name", "Optical Zoom Code", "int16s");
            AddInfo("makernotes:canon:image::name", "Camera Temperature", "int16s");
            AddInfo("makernotes:canon:image::name", "Flash Guide Number", "int16s");
            AddInfo("makernotes:canon:image::name", "AF Points In Focus", "int16s");
            AddInfo("makernotes:canon:image::name", "Flash Exposure Compensation", "int16s");
            AddInfo("makernotes:canon:image::name", "Auto Exposure Bracketing", "int16s");
            AddInfo("makernotes:canon:image::name", "AEB Bracket Value", "int16s");
            AddInfo("makernotes:canon:image::name", "Control Mode", "int16s");
            AddInfo("makernotes:canon:image::name", "Focus Distance Upper", "int16u");
            AddInfo("makernotes:canon:image::name", "Focus Distance Lower", "int16u");
            AddInfo("makernotes:canon:image::name", "F Number", "int16s");
            AddInfo("makernotes:canon:image::name", "Exposure Time", "int16s");
            AddInfo("makernotes:canon:image::name", "Exposure Time", "int16s");
            AddInfo("makernotes:canon:image::name", "Measured EV 2", "int16s");
            AddInfo("makernotes:canon:image::name", "Bulb Duration", "int16s");
            AddInfo("makernotes:canon:image::name", "Camera Type", "int16s");
            AddInfo("makernotes:canon:image::name", "Auto Rotate", "int16s");
            AddInfo("makernotes:canon:image::name", "ND Filter", "int16s");
            AddInfo("makernotes:canon:image::name", "Self Timer 2", "int16s");
            AddInfo("makernotes:canon:image::name", "Flash Output", "int16s");
        }


        static void InitTable100()
        {
            AddInfo("makernotes:canon:video::name", "Unknown CNDB", "?");
        }


        static void InitTable101()
        {
            AddInfo("makernotes:canon:time::name", "Time Zone", "int32s");
            AddInfo("makernotes:canon:time::name", "Time Zone City", "int32s");
            AddInfo("makernotes:canon:time::name", "Daylight Savings", "int32s");
        }


        static void InitTable102()
        {
            AddInfo("makernotes:canon:camera::name", "Vignetting Corr Version", "int8u");
            AddInfo("makernotes:canon:camera::name", "Peripheral Lighting", "int16s");
            AddInfo("makernotes:canon:camera::name", "Chromatic Aberration Corr", "int16s");
            AddInfo("makernotes:canon:camera::name", "Chromatic Aberration Corr", "int16s");
            AddInfo("makernotes:canon:camera::name", "Peripheral Lighting Value", "int16s");
            AddInfo("makernotes:canon:camera::name", "Original Image Width", "int16s");
            AddInfo("makernotes:canon:camera::name", "Original Image Height", "int16s");
        }


        static void InitTable103()
        {
            AddInfo("makernotes:canon:camera::name", "Peripheral Lighting Setting", "int32s");
            AddInfo("makernotes:canon:camera::name", "Chromatic Aberration Setting", "int32s");
        }


        static void InitTable104()
        {
            AddInfo("makernotes:canon:camera::name", "Vignetting Corr Version", "int8u");
        }


        static void InitTable105()
        {
            AddInfo("makernotes:canon:video::name", "Compressor Version", "?");
        }


        static void InitTable106()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Release W/O CF Card", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist/Flash Firing", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Registration", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Raw And Jpg Recording", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Menu Button Display Position", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Assist Button Function", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Fill Flash Auto Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift In Av Or Tv", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
        }


        static void InitTable107()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Finder Display During Exposure", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Release W/O CF Card", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Speed Expansion", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Button/AEL Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Manual Tv/Av For M", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "USM Lens Electronic MF", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Top/Back LCD Panels", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "No. AF Points/Spot Metering", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Fill Flash Auto Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift In Av Or Tv", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Activation Area", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Switch To Registered AF Point", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Tracking Sensitivity", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Continuous Shooting", "int8u");
        }


        static void InitTable108()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Speed Increments", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Speed Range", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Expansion", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Auto Cancel", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Shot Count", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Shot Count", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Spot Meter Link To AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Usable Shooting Modes", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Usable Metering Modes", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Mode In Manual", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Speed Range", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Aperture Range", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Apply Shooting Metering Mode", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AE Microadjustment", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "FE Microadjustment", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "High ISO Noise Reduction", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "High ISO Noise Reduction", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Highlight Tone Priority", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Auto Lighting Optimizer", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Auto Lighting Optimizer", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Firing", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "View Info During Exposure", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "LCD Illumination During Bulb", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Info Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Info Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Viewfinder Warnings", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "LV Shooting Area Display", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "USM Lens Electronic MF", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Tracking Sensitivity", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Image Priority", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Tracking Method", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Lens Drive No AF", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Microadjustment", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Area Expansion", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Area Expansion", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Selectable AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Selectable AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Switch To Registered AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Switch To Registered AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Auto Selection", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Display During Focus", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Brightness", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection Method", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection Method", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "VF Display Illumination", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF During Live View", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF During Live View", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Select AF Area Select Mode", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Manual AF Point Select Pattern", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Display All AF Points", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focus Display AI Servo And MF", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Orientation Linked AF Point", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Multi Controller While Metering", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Acceleration Tracking", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo First Image Priority", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AI Servo Second Image Priority", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF Area Select Method", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Continuous Shooting Speed", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Continuous Shot Limit", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Restrict Drive Modes", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF And Metering Buttons", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Button AF On Button", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "AF On AE Lock Button Switch", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Quick Control Dial In Meter", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Manual Tv/Av For M", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Dial Direction Tv Av", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Av Setting Without Lens", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "WB Media Image Size Setting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Lock Microphone Button", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Button Function Control Off", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Assign Func Button", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Custom Controls", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Start Movie Shooting", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Button Function", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Multi Function Lock", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Trash Button Function", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Release Without Lens", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Timer Length", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Short Release Time Lag", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Add Aspect Ratio Info", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Add Original Decision Data", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Live View Exposure Simulation", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "LCD Display At Power On", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Memo Audio Quality", "int32s");
            AddInfo("makernotes:canoncustom:camera::name", "Default Erase Option", "int32s");
        }


        static void InitTable109()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Set Function When Shooting", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Firing", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Expansion", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Menu Button Display Position", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection Method", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift In Av Or Tv", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Add Original Decision Data", "int8u");
        }


        static void InitTable110()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Set Function When Shooting", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Firing", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Expansion", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Menu Button Display Position", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection Method", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift In Av Or Tv", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Magnified View", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Add Original Decision Data", "int8u");
        }


        static void InitTable111()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Set Button Cross Keys Func", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
        }


        static void InitTable112()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Set Button Cross Keys Func", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Magnified View", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "LCD Display At Power On", "int8u");
        }


        static void InitTable113()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Focusing Screen", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Set Function When Shooting", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist Beam", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Firing", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "ISO Expansion", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Menu Button Display Position", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Selection Method", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "E-TTL II", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Safety Shift In Av Or Tv", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Point Activation Area", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "LCD Display Return To Shoot", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Add Original Decision Data", "int8u");
        }


        static void InitTable114()
        {
            AddInfo("makernotes:canoncustom:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter-AE Lock", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Mirror Lockup", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Exposure Level Increments", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Flash Sync Speed Av", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "AEB Sequence/Auto Cancel", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Curtain Sync", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Lens AF Stop Button", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Fill Flash Auto Reduction", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Menu Button Return", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Set Button When Shooting", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Sensor Cleaning", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Superimposed Display", "int8u");
            AddInfo("makernotes:canoncustom:camera::name", "Shutter Release W/O CF Card", "int8u");
        }


        static void InitTable115()
        {
            AddInfo("makernotes:canoncustom:camera::name", "PF1 Value", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF2 Value", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF3 Value", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF4 Exposure Time Min", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF4 Exposure Time Max", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF5 Aperture Min", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF5 Aperture Max", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF8 Bracket Shots", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF19 Shooting Speed Low", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF19 Shooting Speed High", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF20 Max Continous Shots", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF23 Shutter Button Time", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF23 FE Lock Time", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF23 Post Release Time", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 AE Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Metering Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Drive Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 AF Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 AF Point Sel", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Image Size", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 WB Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Parameters", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Color Matrix", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF27 Value", "int16u");
        }


        static void InitTable116()
        {
            AddInfo("makernotes:canoncustom:camera::name", "PF0 Custom Func Registration", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF1 Disable Shooting Modes", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF2 Disable Metering Modes", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF3 Manual Exposure Metering", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF4 Exposure Time Limits", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF5 Aperture Limits", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF6 Preset Shooting Modes", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF7 Bracket Continuous Shoot", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF8 Set Bracket Shots", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF9 Change Bracket Sequence", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF10 Retain Program Shift", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF13 Drive Priority", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF14 Disable Focus Search", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF15 Disable AF Assist Beam", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF16 Auto Focus Point Shoot", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF17 Disable AF Point Sel", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF18 Enable Auto AF Point Sel", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF19 Continuous Shoot Speed", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF20 Limit Continous Shots", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF21 Enable Quiet Operation", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF23 Set Timer Lengths", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF24 Light LCD During Bulb", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF25 Default Clear Settings", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF26 Shorten Release Lag", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF27 Reverse Dial Rotation", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF28 No Quick Dial Exp Comp", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF29 Quick Dial Switch Off", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF30 Enlargement Mode", "int16u");
            AddInfo("makernotes:canoncustom:camera::name", "PF31 Original Decision Data", "int16u");
        }


        static void InitTable117()
        {
            AddInfo("makernotes:canonraw:camera::name", "Decoder Table Number", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Compressed Data Offset", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Compressed Data Length", "int32u");
        }


        static void InitTable118()
        {
            AddInfo("makernotes:canonraw:image::name", "Exposure Compensation", "float");
            AddInfo("makernotes:canonraw:image::name", "Shutter Speed Value", "float");
            AddInfo("makernotes:canonraw:image::name", "Aperture Value", "float");
        }


        static void InitTable119()
        {
            AddInfo("makernotes:canonraw:image::name", "Flash Guide Number", "float");
            AddInfo("makernotes:canonraw:image::name", "Flash Threshold", "float");
        }


        static void InitTable120()
        {
            AddInfo("makernotes:canonraw:image::name", "File Format", "int32u");
            AddInfo("makernotes:canonraw:image::name", "Target Compression Ratio", "float");
        }


        static void InitTable121()
        {
            AddInfo("makernotes:canonraw:image::name", "Image Width", "int32u");
            AddInfo("makernotes:canonraw:image::name", "Image Height", "int32u");
            AddInfo("makernotes:canonraw:image::name", "Pixel Aspect Ratio", "float");
            AddInfo("makernotes:canonraw:image::name", "Rotation", "int32s");
            AddInfo("makernotes:canonraw:image::name", "Component Bit Depth", "int32u");
            AddInfo("makernotes:canonraw:image::name", "Color Bit Depth", "int32u");
            AddInfo("makernotes:canonraw:image::name", "Color BW", "int32u");
        }


        static void InitTable122()
        {
            AddInfo("makernotes:canonraw:camera::name", "Null Record", "undef");
            AddInfo("makernotes:canonraw:camera::name", "Free Bytes", "undef");
            AddInfo("makernotes:canonraw:camera::name", "Canon Color Info 1", "?");
            AddInfo("makernotes:canonraw:camera::name", "Canon File Description", "string");
            AddInfo("makernotes:canonraw:camera::name", "User Comment", "string");
            AddInfo("makernotes:canonraw:camera::name", "Canon Firmware Version", "string");
            AddInfo("makernotes:canonraw:camera::name", "Component Version", "string");
            AddInfo("makernotes:canonraw:camera::name", "ROM Operation Mode", "string");
            AddInfo("makernotes:canonraw:camera::name", "Owner Name", "string");
            AddInfo("makernotes:canonraw:camera::name", "Canon Image Type", "string");
            AddInfo("makernotes:canonraw:camera::name", "Original File Name", "string");
            AddInfo("makernotes:canonraw:camera::name", "Thumbnail File Name", "string");
            AddInfo("makernotes:canonraw:camera::name", "Target Image Type", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Shutter Release Method", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Shutter Release Timing", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Release Setting", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Base ISO", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Canon Flash Info", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Canon Color Info 2", "?");
            AddInfo("makernotes:canonraw:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "Record ID", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Self Timer Time", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Target Distance Setting", "float");
            AddInfo("makernotes:canonraw:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Unknown Number", "?");
            AddInfo("makernotes:canonraw:camera::name", "Measured EV", "float");
            AddInfo("makernotes:canonraw:camera::name", "File Number", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Canon Model ID", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Serial Number Format", "int32u");
            AddInfo("makernotes:canonraw:camera::name", "Raw Data", "?");
            AddInfo("makernotes:canonraw:camera::name", "Jpg From Raw", "resize");
            AddInfo("makernotes:canonraw:camera::name", "Thumbnail Image", "resize");
        }


        static void InitTable123()
        {
            AddInfo("makernotes:canonraw:camera::name", "Make", "string");
            AddInfo("makernotes:canonraw:camera::name", "Camera Model Name", "string");
        }


        static void InitTable124()
        {
            AddInfo("makernotes:canonraw:image::name", "Raw Jpg Quality", "int16u");
            AddInfo("makernotes:canonraw:image::name", "Raw Jpg Size", "int16u");
            AddInfo("makernotes:canonraw:image::name", "Raw Jpg Width", "int16u");
            AddInfo("makernotes:canonraw:image::name", "Raw Jpg Height", "int16u");
        }


        static void InitTable125()
        {
            AddInfo("makernotes:canonraw:time::name", "Date/Time Original", "int32u");
            AddInfo("makernotes:canonraw:time::name", "Time Zone Code", "int32s");
            AddInfo("makernotes:canonraw:time::name", "Time Zone Info", "int32u");
        }


        static void InitTable126()
        {
            AddInfo("makernotes:canonraw:camera::name", "White Sample Width", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "White Sample Height", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "White Sample Left Border", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "White Sample Top Border", "int16u");
            AddInfo("makernotes:canonraw:camera::name", "White Sample Bits", "int16u");
        }


        static void InitTable127()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Crop Active", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Rotated Original Width", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Rotated Original Height", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop X", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Y", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Width", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Height", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Rotation", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Original Width", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Original Height", "int32s");
        }


        static void InitTable128()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Rotation", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Angle Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Picture Style", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Check Mark", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Work Color Space", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Brightness Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "White Balance Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj Color Temp", "?");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj Magenta Green", "?");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj Blue Amber", "?");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj RGGB Levels", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Linear", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Picture Style", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Contrast Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Color Tone Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Color Saturation Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Toning Effect", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Filter Effect", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Unsharp Mask Strength", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Unsharp Mask Fineness", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Unsharp Mask Threshold", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Shadow Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Highlight Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Sharpness Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Sharpness Strength", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Brightness", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Contrast", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Auto Lighting Optimizer", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance Noise Reduction", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Chrominance Noise Reduction", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Shooting Distance", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Peripheral Illumination", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Color Blur On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Distortion Correction", "?");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Setting", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration Red", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration Blue", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Distortion Effect", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Color Hue", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Saturation Adj", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Red HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Orange HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Green HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Aqua HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Blue HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Blue HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Purple HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Magenta HSL", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Aspect Ratio", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Aspect Ratio Custom", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Picture Style Data", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Lens Focal Length", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Sharpness Adj On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Original", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Auto Lighting Optimizer On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Peripheral Illumination On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Distortion Correction On", "?");
            AddInfo("canonvrd:canonvrd:image::name", "DLO On", "?");
        }


        static void InitTable129()
        {
            AddInfo("canonvrd:canonvrd:image::name", "DR4 Camera Model", "int32u");
        }


        static void InitTable130()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Dust Delete Applied", "int32u");
        }


        static void InitTable131()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Contrast", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Color Tone", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Saturation", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Unsharp Mask Strength", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Unsharp Mask Fineness", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Unsharp Mask Threshold", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Sharpness Strength", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Shadow", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Highlight", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Black Point", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamme White Point", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Mid Point", "double");
            AddInfo("canonvrd:canonvrd:image::name", "Gamma Curve Output Range", "double");
        }


        static void InitTable132()
        {
            AddInfo("canonvrd:canonvrd:image::name", "IHL EXIF", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Thumbnail Image", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Preview Image", "?");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Codec Version", "?");
            AddInfo("canonvrd:canonvrd:image::name", "CRC Devel Params", "?");
        }


        static void InitTable133()
        {
            AddInfo("canonvrd:canonvrd:other::name", "XMP", "undef");
        }


        static void InitTable134()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Stamp Tool Count", "int32u");
        }


        static void InitTable135()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Stamp Tool Count", "int32u");
        }


        static void InitTable136()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Color Space", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Shape", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Input Range", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Output Range", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "RGB Curve Points", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve X", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Y", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Red Curve Points", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Green Curve Points", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "Blue Curve Points", "int32u");
        }


        static void InitTable137()
        {
            AddInfo("canonvrd:canonvrd:image::name", "VRD Version", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj RGGB Levels", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "White Balance Adj", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "WB Adj Color Temp", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "WB Fine Tune Active", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "WB Fine Tune Saturation", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "WB Fine Tune Tone", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Color Adj", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Custom Saturation", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Custom Tone", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Raw Brightness Adj", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Property", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Dynamic Range Min", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Dynamic Range Max", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Active", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Mode", "int8u");
            AddInfo("canonvrd:canonvrd:image::name", "Brightness Adj", "int8s");
            AddInfo("canonvrd:canonvrd:image::name", "Contrast Adj", "int8s");
            AddInfo("canonvrd:canonvrd:image::name", "Saturation Adj", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Color Tone Adj", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance Curve Points", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance Curve Limits", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Tone Curve Interpolation", "int8u");
            AddInfo("canonvrd:canonvrd:image::name", "Red Curve Points", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Red Curve Limits", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Green Curve Points", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Green Curve Limits", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Blue Curve Points", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Blue Curve Limits", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "RGB Curve Points", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "RGB Curve Limits", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Active", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Left", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Top", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Width", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Height", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Sharpness Adj", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Aspect Ratio", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Constrained Crop Width", "float");
            AddInfo("canonvrd:canonvrd:image::name", "Constrained Crop Height", "float");
            AddInfo("canonvrd:canonvrd:image::name", "Check Mark", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Rotation", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Work Color Space", "int16u");
        }


        static void InitTable138()
        {
            AddInfo("canonvrd:canonvrd:image::name", "Picture Style", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Is Custom Picture Style", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Filter Effect", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Toning Effect", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Color Tone", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Saturation", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Contrast", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Linear", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Sharpness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Raw Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Raw Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Output Highlight Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Output Shadow Point", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Picture Style Data", "var_int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Chrominance Noise Reduction", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chrominance Noise Reduction", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance Noise Reduction", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance Noise Reduction", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chrominance NR TIFF JPEG", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chrominance NR TIFF JPEG", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration On", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Distortion Correction On", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Peripheral Illumination On", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Color Blur", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Distortion Correction", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Peripheral Illumination", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Aberration Correction Distance", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration Red", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Chromatic Aberration Blue", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Luminance NR TIFF JPEG", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Auto Lighting Optimizer On", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Auto Lighting Optimizer", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Raw Highlight", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Unknown Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Raw Shadow", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Angle Adj", "int32s");
            AddInfo("canonvrd:canonvrd:image::name", "Check Mark 2", "int16u");
            AddInfo("canonvrd:canonvrd:image::name", "Unsharp Mask", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Standard Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Portrait Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Landscape Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutra Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Neutral Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Faithful Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Monochrome Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Unsharp Mask Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Unsharp Mask Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Unsharp Mask Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Default Unsharp Strength", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Default Unsharp Fineness", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Custom Default Unsharp Threshold", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Circle Active", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Circle X", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Circle Y", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "Crop Circle Radius", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "DLO On", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Setting", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Shooting Distance", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Data Length", "int32u");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Setting Applied", "int16s");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Version", "string");
            AddInfo("canonvrd:canonvrd:image::name", "DLO Data", "var_undef");
        }


        static void InitTable139()
        {
            AddInfo("makernotes:casio:camera::name", "Software", "string");
        }


        static void InitTable140()
        {
            AddInfo("makernotes:casio:image::name", "Faces Detected", "int8u");
            AddInfo("makernotes:casio:image::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 8 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 9 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 10 Position", "int16u");
        }


        static void InitTable141()
        {
            AddInfo("makernotes:casio:image::name", "Faces Detected", "int8u");
            AddInfo("makernotes:casio:image::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:casio:image::name", "Face Orientation", "int8u");
            AddInfo("makernotes:casio:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 8 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 9 Position", "int16u");
            AddInfo("makernotes:casio:image::name", "Face 10 Position", "int16u");
        }


        static void InitTable142()
        {
            AddInfo("makernotes:casio:camera::name", "Recording Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Quality", "int16u");
            AddInfo("makernotes:casio:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Flash Intensity", "int16u");
            AddInfo("makernotes:casio:camera::name", "Object Distance", "int32u");
            AddInfo("makernotes:casio:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:casio:camera::name", "Digital Zoom", "int32u");
            AddInfo("makernotes:casio:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:casio:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:casio:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:casio:camera::name", "ISO", "int16u");
            AddInfo("makernotes:casio:camera::name", "Firmware Date", "string");
            AddInfo("makernotes:casio:camera::name", "Enhancement", "int16u");
            AddInfo("makernotes:casio:camera::name", "Color Filter", "int16u");
            AddInfo("makernotes:casio:camera::name", "AF Point", "int16u");
            AddInfo("makernotes:casio:camera::name", "Flash Intensity", "int16u");
        }


        static void InitTable143()
        {
            AddInfo("makernotes:casio:camera::name", "Casio Quality", "int8u");
            AddInfo("makernotes:casio:camera::name", "Focal Range", "int8u");
            AddInfo("makernotes:casio:camera::name", "Date/Time Original", "string");
            AddInfo("makernotes:casio:camera::name", "Model Type", "string");
            AddInfo("makernotes:casio:camera::name", "Manufacture Index", "string");
            AddInfo("makernotes:casio:camera::name", "Manufacture Code", "string");
        }


        static void InitTable144()
        {
            AddInfo("makernotes:casio:camera::name", "Preview Image Size", "int16u");
            AddInfo("makernotes:casio:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:casio:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:casio:camera::name", "Quality Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Casio Image Size", "int16u");
            AddInfo("makernotes:casio:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "ISO", "int16u");
            AddInfo("makernotes:casio:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:casio:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:casio:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:casio:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:casio:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:casio:camera::name", "Preview Image", "undef");
            AddInfo("makernotes:casio:camera::name", "Firmware Date", "string");
            AddInfo("makernotes:casio:camera::name", "White Balance Bias", "int16u");
            AddInfo("makernotes:casio:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:casio:camera::name", "AF Point Position", "int16u");
            AddInfo("makernotes:casio:camera::name", "Object Distance", "int32u");
            AddInfo("makernotes:casio:camera::name", "Flash Distance", "int16u");
            AddInfo("makernotes:casio:camera::name", "Special Effect Mode", "int8u");
            AddInfo("makernotes:casio:camera::name", "Face Info Unknown", "?");
            AddInfo("makernotes:casio:camera::name", "Faces Detected", "int8u");
            AddInfo("makernotes:casio:camera::name", "Record Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Release Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Quality", "int16u");
            AddInfo("makernotes:casio:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Hometown City", "string");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Best Shot Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Auto ISO", "int16u");
            AddInfo("makernotes:casio:camera::name", "AF Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Sharpness", "undef");
            AddInfo("makernotes:casio:camera::name", "Contrast", "undef");
            AddInfo("makernotes:casio:camera::name", "Saturation", "undef");
            AddInfo("makernotes:casio:camera::name", "ISO", "int16u");
            AddInfo("makernotes:casio:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Enhancement", "int16u");
            AddInfo("makernotes:casio:camera::name", "Color Filter", "int16u");
            AddInfo("makernotes:casio:camera::name", "Art Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Sequence Number", "int16u");
            AddInfo("makernotes:casio:camera::name", "Bracket Sequence", "int16u");
            AddInfo("makernotes:casio:camera::name", "Image Stabilization", "int16u");
            AddInfo("makernotes:casio:camera::name", "Lighting Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Portrait Refiner", "int16u");
            AddInfo("makernotes:casio:camera::name", "Special Effect Level", "int16u");
            AddInfo("makernotes:casio:camera::name", "Special Effect Setting", "int16u");
            AddInfo("makernotes:casio:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:casio:camera::name", "Art Mode Parameters", "int8u");
            AddInfo("makernotes:casio:camera::name", "Capture Frame Rate", "int16u");
            AddInfo("makernotes:casio:camera::name", "Video Quality", "int16u");
        }


        static void InitTable145()
        {
            AddInfo("composite:composite:other::name", "Advanced Scene Mode", "?");
            AddInfo("composite:composite:other::name", "Aperture", "?");
            AddInfo("composite:composite:other::name", "Audio Bitrate", "?");
            AddInfo("composite:composite:other::name", "Auto Focus", "?");
            AddInfo("composite:composite:other::name", "Avg Bitrate", "?");
            AddInfo("composite:composite:other::name", "Blue Balance", "?");
            AddInfo("composite:composite:other::name", "CDDB Disc Play Time", "?");
            AddInfo("composite:composite:other::name", "CDDB Disc Tracks", "?");
            AddInfo("composite:composite:other::name", "CFA Pattern", "?");
            AddInfo("composite:composite:other::name", "Circle Of Confusion", "?");
            AddInfo("composite:composite:other::name", "Flash Exposure Compensation", "?");
            AddInfo("composite:composite:other::name", "Depth Of Field", "?");
            AddInfo("composite:composite:other::name", "Date Created", "?");
            AddInfo("composite:composite:other::name", "Date/Time Created", "?");
            AddInfo("composite:composite:other::name", "Date/Time Original", "?");
            AddInfo("composite:composite:other::name", "Date/Time Original", "?");
            AddInfo("composite:composite:other::name", "Digital Creation Date/Time", "?");
            AddInfo("composite:composite:other::name", "Digital Zoom", "?");
            AddInfo("composite:composite:other::name", "Drive Mode", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Duration", "?");
            AddInfo("composite:composite:other::name", "Extender Status", "?");
            AddInfo("composite:composite:other::name", "Field Of View", "?");
            AddInfo("composite:composite:other::name", "File Number", "?");
            AddInfo("composite:composite:other::name", "Flash", "?");
            AddInfo("composite:composite:other::name", "Flash Type", "?");
            AddInfo("composite:composite:other::name", "Focal Length", "?");
            AddInfo("composite:composite:other::name", "Focus Distance", "?");
            AddInfo("composite:composite:other::name", "Focus Distance 2", "?");
            AddInfo("composite:composite:other::name", "GPS Altitude", "?");
            AddInfo("composite:composite:other::name", "GPS Altitude", "?");
            AddInfo("composite:composite:other::name", "GPS Altitude", "?");
            AddInfo("composite:composite:other::name", "GPS Altitude Ref", "?");
            AddInfo("composite:composite:other::name", "GPS Altitude Ref", "?");
            AddInfo("composite:composite:other::name", "GPS Date/Time", "?");
            AddInfo("composite:composite:other::name", "GPS Latitude", "?");
            AddInfo("composite:composite:other::name", "GPS Latitude", "?");
            AddInfo("composite:composite:other::name", "GPS Latitude", "?");
            AddInfo("composite:composite:other::name", "GPS Latitude Ref", "?");
            AddInfo("composite:composite:other::name", "GPS Longitude", "?");
            AddInfo("composite:composite:other::name", "GPS Longitude", "?");
            AddInfo("composite:composite:other::name", "GPS Longitude", "?");
            AddInfo("composite:composite:other::name", "GPS Longitude Ref", "?");
            AddInfo("composite:composite:other::name", "GPS Position", "?");
            AddInfo("composite:composite:other::name", "Hyperfocal Distance", "?");
            AddInfo("composite:composite:other::name", "IDC Preview Image", "?");
            AddInfo("composite:composite:other::name", "ISO", "?");
            AddInfo("composite:composite:other::name", "Image Height", "?");
            AddInfo("composite:composite:other::name", "Image Height", "?");
            AddInfo("composite:composite:other::name", "Image Size", "?");
            AddInfo("composite:composite:other::name", "Image Width", "?");
            AddInfo("composite:composite:other::name", "Image Width", "?");
            AddInfo("composite:composite:other::name", "Jpg From Raw", "?");
            AddInfo("composite:composite:other::name", "Lens", "?");
            AddInfo("composite:composite:other::name", "Lens", "?");
            AddInfo("composite:composite:other::name", "Lens ID", "?");
            AddInfo("composite:composite:other::name", "Lens ID", "?");
            AddInfo("composite:composite:other::name", "Lens ID", "?");
            AddInfo("composite:composite:other::name", "Lens ID", "?");
            AddInfo("composite:composite:other::name", "Lens", "?");
            AddInfo("composite:composite:other::name", "Light Value", "?");
            AddInfo("composite:composite:other::name", "MP Image", "?");
            AddInfo("composite:composite:other::name", "Megapixels", "?");
            AddInfo("composite:composite:other::name", "Original Decision Data", "?");
            AddInfo("composite:composite:other::name", "Other Image", "?");
            AddInfo("composite:composite:other::name", "Peak Spectral Sensitivity", "?");
            AddInfo("composite:composite:other::name", "Preview Image", "?");
            AddInfo("composite:composite:other::name", "Preview Image", "?");
            AddInfo("composite:composite:other::name", "Preview Image Size", "?");
            AddInfo("composite:composite:other::name", "Red Balance", "?");
            AddInfo("composite:composite:other::name", "Red Eye Reduction", "?");
            AddInfo("composite:composite:other::name", "Ricoh Pitch", "?");
            AddInfo("composite:composite:other::name", "Ricoh Roll", "?");
            AddInfo("composite:composite:other::name", "Rotation", "?");
            AddInfo("composite:composite:other::name", "Run Time Since Power Up", "?");
            AddInfo("composite:composite:other::name", "Scale Factor To 35 mm Equivalent", "?");
            AddInfo("composite:composite:other::name", "Shooting Mode", "?");
            AddInfo("composite:composite:other::name", "Shutter Curtain Sync", "?");
            AddInfo("composite:composite:other::name", "Shutter Speed", "?");
            AddInfo("composite:composite:other::name", "Create Date", "?");
            AddInfo("composite:composite:other::name", "Date/Time Original", "?");
            AddInfo("composite:composite:other::name", "Modify Date", "?");
            AddInfo("composite:composite:other::name", "Thumbnail Image", "?");
            AddInfo("composite:composite:other::name", "WB RGB Levels", "?");
            AddInfo("composite:composite:other::name", "WB RGB Levels", "?");
            AddInfo("composite:composite:other::name", "WB RGGB Levels", "?");
            AddInfo("composite:composite:other::name", "WB RGGB Levels", "?");
            AddInfo("composite:composite:other::name", "Zoomed Preview Image", "?");
        }


        static void InitTable146()
        {
            AddInfo("dicom:dicom:image::name", "File Meta Info Group Length", "?");
            AddInfo("dicom:dicom:image::name", "File Meta Info Version", "?");
            AddInfo("dicom:dicom:image::name", "Media Storage SOP Class UID", "?");
            AddInfo("dicom:dicom:image::name", "Media Storage SOP Instance UID", "?");
            AddInfo("dicom:dicom:image::name", "Transfer Syntax UID", "?");
            AddInfo("dicom:dicom:image::name", "Implementation Class UID", "?");
            AddInfo("dicom:dicom:image::name", "Implementation Version Name", "?");
            AddInfo("dicom:dicom:image::name", "Source Application Entity Title", "?");
            AddInfo("dicom:dicom:image::name", "Private Information Creator UID", "?");
            AddInfo("dicom:dicom:image::name", "Private Information", "?");
            AddInfo("dicom:dicom:image::name", "File Set ID", "?");
            AddInfo("dicom:dicom:image::name", "File Set Descriptor File ID", "?");
            AddInfo("dicom:dicom:image::name", "Specific Character Set Of File", "?");
            AddInfo("dicom:dicom:image::name", "First Directory Record Offset", "?");
            AddInfo("dicom:dicom:image::name", "Last Directory Record Offset", "?");
            AddInfo("dicom:dicom:image::name", "File Set Consistency Flag", "?");
            AddInfo("dicom:dicom:image::name", "Directory Record Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Offset Of Next Directory Record", "?");
            AddInfo("dicom:dicom:image::name", "Record In Use Flag", "?");
            AddInfo("dicom:dicom:image::name", "Lower Level Directory Entity Offset", "?");
            AddInfo("dicom:dicom:image::name", "Directory Record Type", "?");
            AddInfo("dicom:dicom:image::name", "Private Record UID", "?");
            AddInfo("dicom:dicom:image::name", "Referenced File ID", "?");
            AddInfo("dicom:dicom:image::name", "MRDR Directory Record Offset", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Class UID In File", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Instance UID In File", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Transfer Syntax UID In File", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Related SOP Class UID In File", "?");
            AddInfo("dicom:dicom:image::name", "Number Of References", "?");
            AddInfo("dicom:dicom:image::name", "Identifying Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Length To End", "?");
            AddInfo("dicom:dicom:image::name", "Specific Character Set", "?");
            AddInfo("dicom:dicom:image::name", "Language Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Type", "?");
            AddInfo("dicom:dicom:image::name", "Recognition Code", "?");
            AddInfo("dicom:dicom:image::name", "Instance Creation Date", "?");
            AddInfo("dicom:dicom:image::name", "Instance Creation Time", "?");
            AddInfo("dicom:dicom:image::name", "Instance Creator UID", "?");
            AddInfo("dicom:dicom:image::name", "SOP Class UID", "?");
            AddInfo("dicom:dicom:image::name", "SOP Instance UID", "?");
            AddInfo("dicom:dicom:image::name", "Related General SOP Class UID", "?");
            AddInfo("dicom:dicom:image::name", "Original Specialized SOP Class UID", "?");
            AddInfo("dicom:dicom:image::name", "Study Date", "?");
            AddInfo("dicom:dicom:image::name", "Series Date", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Date", "?");
            AddInfo("dicom:dicom:image::name", "Content Date", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Date", "?");
            AddInfo("dicom:dicom:image::name", "Curve Date", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Study Time", "?");
            AddInfo("dicom:dicom:image::name", "Series Time", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Time", "?");
            AddInfo("dicom:dicom:image::name", "Content Time", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Time", "?");
            AddInfo("dicom:dicom:image::name", "Curve Time", "?");
            AddInfo("dicom:dicom:image::name", "Data Set Type", "?");
            AddInfo("dicom:dicom:image::name", "Data Set Subtype", "?");
            AddInfo("dicom:dicom:image::name", "Nuclear Medicine Series Type", "?");
            AddInfo("dicom:dicom:image::name", "Accession Number", "?");
            AddInfo("dicom:dicom:image::name", "Query Retrieve Level", "?");
            AddInfo("dicom:dicom:image::name", "Retrieve AE Title", "?");
            AddInfo("dicom:dicom:image::name", "Instance Availability", "?");
            AddInfo("dicom:dicom:image::name", "Failed SOP Instance UID List", "?");
            AddInfo("dicom:dicom:image::name", "Modality", "?");
            AddInfo("dicom:dicom:image::name", "Modalities In Study", "?");
            AddInfo("dicom:dicom:image::name", "SOP Classes In Study", "?");
            AddInfo("dicom:dicom:image::name", "Conversion Type", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Intent Type", "?");
            AddInfo("dicom:dicom:image::name", "Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Institution Name", "?");
            AddInfo("dicom:dicom:image::name", "Institution Address", "?");
            AddInfo("dicom:dicom:image::name", "Institution Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referring Physician Name", "?");
            AddInfo("dicom:dicom:image::name", "Referring Physician Address", "?");
            AddInfo("dicom:dicom:image::name", "Referring Physician Telephone Number", "?");
            AddInfo("dicom:dicom:image::name", "Referring Physician ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Code Value", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme Designator", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme Version", "?");
            AddInfo("dicom:dicom:image::name", "Code Meaning", "?");
            AddInfo("dicom:dicom:image::name", "Mapping Resource", "?");
            AddInfo("dicom:dicom:image::name", "Context Group Version", "?");
            AddInfo("dicom:dicom:image::name", "Context Group Local Version", "?");
            AddInfo("dicom:dicom:image::name", "Context Group Extension Flag", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme UID", "?");
            AddInfo("dicom:dicom:image::name", "Context Group Extension Creator UID", "?");
            AddInfo("dicom:dicom:image::name", "Context Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme Registry", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme External ID", "?");
            AddInfo("dicom:dicom:image::name", "Coding Scheme Name", "?");
            AddInfo("dicom:dicom:image::name", "Responsible Organization", "?");
            AddInfo("dicom:dicom:image::name", "Context UID", "?");
            AddInfo("dicom:dicom:image::name", "Timezone Offset From UTC", "?");
            AddInfo("dicom:dicom:image::name", "Network ID", "?");
            AddInfo("dicom:dicom:image::name", "Station Name", "?");
            AddInfo("dicom:dicom:image::name", "Study Description", "?");
            AddInfo("dicom:dicom:image::name", "Procedure Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Series Description", "?");
            AddInfo("dicom:dicom:image::name", "Institutional Department Name", "?");
            AddInfo("dicom:dicom:image::name", "Physicians Of Record", "?");
            AddInfo("dicom:dicom:image::name", "Physicians Of Record ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performing Physician Name", "?");
            AddInfo("dicom:dicom:image::name", "Performing Physician ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Name Of Physician Reading Study", "?");
            AddInfo("dicom:dicom:image::name", "Physician Reading Study ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Operators Name", "?");
            AddInfo("dicom:dicom:image::name", "Operator ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Admitting Diagnoses Description", "?");
            AddInfo("dicom:dicom:image::name", "Admitting Diagnoses Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Manufacturers Model Name", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Results Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Study Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Procedure Step Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Series Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Patient Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Visit Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Overlay Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Waveform Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Curve Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Instance Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Class UID", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Instance UID", "?");
            AddInfo("dicom:dicom:image::name", "SOP Classes Supported", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Frame Number", "?");
            AddInfo("dicom:dicom:image::name", "Simple Frame List", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Frame List", "?");
            AddInfo("dicom:dicom:image::name", "Time Range", "?");
            AddInfo("dicom:dicom:image::name", "Frame Extraction Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transaction UID", "?");
            AddInfo("dicom:dicom:image::name", "Failure Reason", "?");
            AddInfo("dicom:dicom:image::name", "Failed SOP Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Other Referenced Studies Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Related Series Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Lossy Image Compression", "?");
            AddInfo("dicom:dicom:image::name", "Derivation Description", "?");
            AddInfo("dicom:dicom:image::name", "Source Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Stage Name", "?");
            AddInfo("dicom:dicom:image::name", "Stage Number", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Stages", "?");
            AddInfo("dicom:dicom:image::name", "View Name", "?");
            AddInfo("dicom:dicom:image::name", "View Number", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Event Timers", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views In Stage", "?");
            AddInfo("dicom:dicom:image::name", "Event Elapsed Times", "?");
            AddInfo("dicom:dicom:image::name", "Event Timer Names", "?");
            AddInfo("dicom:dicom:image::name", "Event Timer Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Event Time Offset", "?");
            AddInfo("dicom:dicom:image::name", "Event Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Start Trim", "?");
            AddInfo("dicom:dicom:image::name", "Stop Trim", "?");
            AddInfo("dicom:dicom:image::name", "Recommended Display Frame Rate", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Position", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Structure", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Region Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Region Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Primary Anatomic Structure Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Structure Or Region Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Structure Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Position Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Orientation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Orientation Modifier Seq", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Entrance Portal Code Seq Trial", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Approach Dir Code Seq Trial", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Perspective Descr Trial", "?");
            AddInfo("dicom:dicom:image::name", "Anatomic Perspective Code Seq Trial", "?");
            AddInfo("dicom:dicom:image::name", "Alternate Representation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Irradiation Event UID", "?");
            AddInfo("dicom:dicom:image::name", "Identifying Comments", "?");
            AddInfo("dicom:dicom:image::name", "Frame Type", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Image Evidence Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Raw Data Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Creator Version UID", "?");
            AddInfo("dicom:dicom:image::name", "Derivation Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Image Evidence Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Presentation", "?");
            AddInfo("dicom:dicom:image::name", "Volumetric Properties", "?");
            AddInfo("dicom:dicom:image::name", "Volume Based Calculation Technique", "?");
            AddInfo("dicom:dicom:image::name", "Complex Image Component", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Contrast", "?");
            AddInfo("dicom:dicom:image::name", "Derivation Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Grayscale Presentation State Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Other Plane Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame Display Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recommended Display Frame Rate In Float", "?");
            AddInfo("dicom:dicom:image::name", "Skip Frame Range Flag", "?");
            AddInfo("dicom:dicom:image::name", "Full Fidelity", "?");
            AddInfo("dicom:dicom:image::name", "Suite ID", "?");
            AddInfo("dicom:dicom:image::name", "Product ID", "?");
            AddInfo("dicom:dicom:image::name", "Image Actual Date", "?");
            AddInfo("dicom:dicom:image::name", "Service ID", "?");
            AddInfo("dicom:dicom:image::name", "Mobile Location Number", "?");
            AddInfo("dicom:dicom:image::name", "Equipment UID", "?");
            AddInfo("dicom:dicom:image::name", "Genesis Version Now", "?");
            AddInfo("dicom:dicom:image::name", "Exam Record Checksum", "?");
            AddInfo("dicom:dicom:image::name", "Actual Series Data Time Stamp", "?");
            AddInfo("dicom:dicom:image::name", "Patient Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Patient Name", "?");
            AddInfo("dicom:dicom:image::name", "Patient ID", "?");
            AddInfo("dicom:dicom:image::name", "Issuer Of Patient ID", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Patient ID", "?");
            AddInfo("dicom:dicom:image::name", "Patient Birth Date", "?");
            AddInfo("dicom:dicom:image::name", "Patient Birth Time", "?");
            AddInfo("dicom:dicom:image::name", "Patient Sex", "?");
            AddInfo("dicom:dicom:image::name", "Patient Insurance Plan Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Primary Language Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Patient Primary Language Code Mod Seq", "?");
            AddInfo("dicom:dicom:image::name", "Other Patient I Ds", "?");
            AddInfo("dicom:dicom:image::name", "Other Patient Names", "?");
            AddInfo("dicom:dicom:image::name", "Other Patient I Ds Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Birth Name", "?");
            AddInfo("dicom:dicom:image::name", "Patient Age", "?");
            AddInfo("dicom:dicom:image::name", "Patient Size", "?");
            AddInfo("dicom:dicom:image::name", "Patient Weight", "?");
            AddInfo("dicom:dicom:image::name", "Patient Address", "?");
            AddInfo("dicom:dicom:image::name", "Insurance Plan Identification", "?");
            AddInfo("dicom:dicom:image::name", "Patient Mother Birth Name", "?");
            AddInfo("dicom:dicom:image::name", "Military Rank", "?");
            AddInfo("dicom:dicom:image::name", "Branch Of Service", "?");
            AddInfo("dicom:dicom:image::name", "Medical Record Locator", "?");
            AddInfo("dicom:dicom:image::name", "Medical Alerts", "?");
            AddInfo("dicom:dicom:image::name", "Allergies", "?");
            AddInfo("dicom:dicom:image::name", "Country Of Residence", "?");
            AddInfo("dicom:dicom:image::name", "Region Of Residence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Telephone Numbers", "?");
            AddInfo("dicom:dicom:image::name", "Ethnic Group", "?");
            AddInfo("dicom:dicom:image::name", "Occupation", "?");
            AddInfo("dicom:dicom:image::name", "Smoking Status", "?");
            AddInfo("dicom:dicom:image::name", "Additional Patient History", "?");
            AddInfo("dicom:dicom:image::name", "Pregnancy Status", "?");
            AddInfo("dicom:dicom:image::name", "Last Menstrual Date", "?");
            AddInfo("dicom:dicom:image::name", "Patient Religious Preference", "?");
            AddInfo("dicom:dicom:image::name", "Patient Species Description", "?");
            AddInfo("dicom:dicom:image::name", "Patient Species Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Sex Neutered", "?");
            AddInfo("dicom:dicom:image::name", "Anatomical Orientation Type", "?");
            AddInfo("dicom:dicom:image::name", "Patient Breed Description", "?");
            AddInfo("dicom:dicom:image::name", "Patient Breed Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Breed Registration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Breed Registration Number", "?");
            AddInfo("dicom:dicom:image::name", "Breed Registry Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Responsible Person", "?");
            AddInfo("dicom:dicom:image::name", "Responsible Person Role", "?");
            AddInfo("dicom:dicom:image::name", "Responsible Organization", "?");
            AddInfo("dicom:dicom:image::name", "Patient Comments", "?");
            AddInfo("dicom:dicom:image::name", "Examined Body Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Patient Status", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Sponsor Name", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Protocol ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Protocol Name", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Site ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Site Name", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Subject ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Subject Reading ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Time Point ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Time Point Description", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Coordinating Center", "?");
            AddInfo("dicom:dicom:image::name", "Patient Identity Removed", "?");
            AddInfo("dicom:dicom:image::name", "Deidentification Method", "?");
            AddInfo("dicom:dicom:image::name", "Deidentification Method Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Series ID", "?");
            AddInfo("dicom:dicom:image::name", "Clinical Trial Series Description", "?");
            AddInfo("dicom:dicom:image::name", "Distribution Type", "?");
            AddInfo("dicom:dicom:image::name", "Consent For Distribution Flag", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Administration Route", "?");
            AddInfo("dicom:dicom:image::name", "Body Part Examined", "?");
            AddInfo("dicom:dicom:image::name", "Scanning Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Sequence Variant", "?");
            AddInfo("dicom:dicom:image::name", "Scan Options", "?");
            AddInfo("dicom:dicom:image::name", "MR Acquisition Type", "?");
            AddInfo("dicom:dicom:image::name", "Sequence Name", "?");
            AddInfo("dicom:dicom:image::name", "Angio Flag", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Information Seq", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Stop Time", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Dose", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Additional Drug Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Radionuclide", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Centerline", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Total Width", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Name", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Drug Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Therapy Type", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Status", "?");
            AddInfo("dicom:dicom:image::name", "Therapy Description", "?");
            AddInfo("dicom:dicom:image::name", "Intervention Description", "?");
            AddInfo("dicom:dicom:image::name", "Cine Rate", "?");
            AddInfo("dicom:dicom:image::name", "Initial Cine Run State", "?");
            AddInfo("dicom:dicom:image::name", "Slice Thickness", "?");
            AddInfo("dicom:dicom:image::name", "KVP", "?");
            AddInfo("dicom:dicom:image::name", "Counts Accumulated", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Termination Condition", "?");
            AddInfo("dicom:dicom:image::name", "Effective Duration", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Start Condition", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Start Condition Data", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition End Condition Data", "?");
            AddInfo("dicom:dicom:image::name", "Repetition Time", "?");
            AddInfo("dicom:dicom:image::name", "Echo Time", "?");
            AddInfo("dicom:dicom:image::name", "Inversion Time", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Averages", "?");
            AddInfo("dicom:dicom:image::name", "Imaging Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Imaged Nucleus", "?");
            AddInfo("dicom:dicom:image::name", "Echo Number", "?");
            AddInfo("dicom:dicom:image::name", "Magnetic Field Strength", "?");
            AddInfo("dicom:dicom:image::name", "Spacing Between Slices", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Phase Encoding Steps", "?");
            AddInfo("dicom:dicom:image::name", "Data Collection Diameter", "?");
            AddInfo("dicom:dicom:image::name", "Echo Train Length", "?");
            AddInfo("dicom:dicom:image::name", "Percent Sampling", "?");
            AddInfo("dicom:dicom:image::name", "Percent Phase Field Of View", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Bandwidth", "?");
            AddInfo("dicom:dicom:image::name", "Device Serial Number", "?");
            AddInfo("dicom:dicom:image::name", "Device UID", "?");
            AddInfo("dicom:dicom:image::name", "Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Plate ID", "?");
            AddInfo("dicom:dicom:image::name", "Generator ID", "?");
            AddInfo("dicom:dicom:image::name", "Grid ID", "?");
            AddInfo("dicom:dicom:image::name", "Cassette ID", "?");
            AddInfo("dicom:dicom:image::name", "Gantry ID", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Capture Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Hardcopy Creation Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Date Of Secondary Capture", "?");
            AddInfo("dicom:dicom:image::name", "Time Of Secondary Capture", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Capture Device Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Hardcopy Device Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Capture Device Model Name", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Capture Device Software Vers", "?");
            AddInfo("dicom:dicom:image::name", "Hardcopy Device Software Version", "?");
            AddInfo("dicom:dicom:image::name", "Hardcopy Device Model Name", "?");
            AddInfo("dicom:dicom:image::name", "Software Version", "?");
            AddInfo("dicom:dicom:image::name", "Video Image Format Acquired", "?");
            AddInfo("dicom:dicom:image::name", "Digital Image Format Acquired", "?");
            AddInfo("dicom:dicom:image::name", "Protocol Name", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Route", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Volume", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Stop Time", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Total Dose", "?");
            AddInfo("dicom:dicom:image::name", "Syringe Counts", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Flow Rate", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Flow Duration", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Ingredient", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Concentration", "?");
            AddInfo("dicom:dicom:image::name", "Spatial Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Time", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Source Or Type", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Interval", "?");
            AddInfo("dicom:dicom:image::name", "Frame Time", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Framing Type", "?");
            AddInfo("dicom:dicom:image::name", "Frame Time Vector", "?");
            AddInfo("dicom:dicom:image::name", "Frame Delay", "?");
            AddInfo("dicom:dicom:image::name", "Image Trigger Delay", "?");
            AddInfo("dicom:dicom:image::name", "Multiplex Group Time Offset", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Time Offset", "?");
            AddInfo("dicom:dicom:image::name", "Synchronization Trigger", "?");
            AddInfo("dicom:dicom:image::name", "Synchronization Channel", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Sample Position", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Route", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Volume", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Stop Time", "?");
            AddInfo("dicom:dicom:image::name", "Radionuclide Total Dose", "?");
            AddInfo("dicom:dicom:image::name", "Radionuclide Half Life", "?");
            AddInfo("dicom:dicom:image::name", "Radionuclide Positron Fraction", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Spec Activity", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Start Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Stop Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Beat Rejection Flag", "?");
            AddInfo("dicom:dicom:image::name", "Low RR Value", "?");
            AddInfo("dicom:dicom:image::name", "High RR Value", "?");
            AddInfo("dicom:dicom:image::name", "Intervals Acquired", "?");
            AddInfo("dicom:dicom:image::name", "Intervals Rejected", "?");
            AddInfo("dicom:dicom:image::name", "PVC Rejection", "?");
            AddInfo("dicom:dicom:image::name", "Skip Beats", "?");
            AddInfo("dicom:dicom:image::name", "Heart Rate", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Number Of Images", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Window", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Diameter", "?");
            AddInfo("dicom:dicom:image::name", "Distance Source To Detector", "?");
            AddInfo("dicom:dicom:image::name", "Distance Source To Patient", "?");
            AddInfo("dicom:dicom:image::name", "Estimated Radiographic Magnification", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Detector Tilt", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Detector Slew", "?");
            AddInfo("dicom:dicom:image::name", "Table Height", "?");
            AddInfo("dicom:dicom:image::name", "Table Traverse", "?");
            AddInfo("dicom:dicom:image::name", "Table Motion", "?");
            AddInfo("dicom:dicom:image::name", "Table Vertical Increment", "?");
            AddInfo("dicom:dicom:image::name", "Table Lateral Increment", "?");
            AddInfo("dicom:dicom:image::name", "Table Longitudinal Increment", "?");
            AddInfo("dicom:dicom:image::name", "Table Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Type", "?");
            AddInfo("dicom:dicom:image::name", "Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Angular Position", "?");
            AddInfo("dicom:dicom:image::name", "Radial Position", "?");
            AddInfo("dicom:dicom:image::name", "Scan Arc", "?");
            AddInfo("dicom:dicom:image::name", "Angular Step", "?");
            AddInfo("dicom:dicom:image::name", "Center Of Rotation Offset", "?");
            AddInfo("dicom:dicom:image::name", "Rotation Offset", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Shape", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Time", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Tube Current", "?");
            AddInfo("dicom:dicom:image::name", "Exposure", "?");
            AddInfo("dicom:dicom:image::name", "Exposure In Micro Amp Sec", "?");
            AddInfo("dicom:dicom:image::name", "Average Pulse Width", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Setting", "?");
            AddInfo("dicom:dicom:image::name", "Rectification Type", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Mode", "?");
            AddInfo("dicom:dicom:image::name", "Image Area Dose Product", "?");
            AddInfo("dicom:dicom:image::name", "Filter Type", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Filters", "?");
            AddInfo("dicom:dicom:image::name", "Intensifier Size", "?");
            AddInfo("dicom:dicom:image::name", "Imager Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Grid", "?");
            AddInfo("dicom:dicom:image::name", "Generator Power", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Grid Name", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Type", "?");
            AddInfo("dicom:dicom:image::name", "Focal Distance", "?");
            AddInfo("dicom:dicom:image::name", "X Focus Center", "?");
            AddInfo("dicom:dicom:image::name", "Y Focus Center", "?");
            AddInfo("dicom:dicom:image::name", "Focal Spots", "?");
            AddInfo("dicom:dicom:image::name", "Anode Target Material", "?");
            AddInfo("dicom:dicom:image::name", "Body Part Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Compression Force", "?");
            AddInfo("dicom:dicom:image::name", "Date Of Last Calibration", "?");
            AddInfo("dicom:dicom:image::name", "Time Of Last Calibration", "?");
            AddInfo("dicom:dicom:image::name", "Convolution Kernel", "?");
            AddInfo("dicom:dicom:image::name", "Upper Lower Pixel Values", "?");
            AddInfo("dicom:dicom:image::name", "Actual Frame Duration", "?");
            AddInfo("dicom:dicom:image::name", "Count Rate", "?");
            AddInfo("dicom:dicom:image::name", "Preferred Playback Sequencing", "?");
            AddInfo("dicom:dicom:image::name", "Receive Coil Name", "?");
            AddInfo("dicom:dicom:image::name", "Transmit Coil Name", "?");
            AddInfo("dicom:dicom:image::name", "Plate Type", "?");
            AddInfo("dicom:dicom:image::name", "Phosphor Type", "?");
            AddInfo("dicom:dicom:image::name", "Scan Velocity", "?");
            AddInfo("dicom:dicom:image::name", "Whole Body Technique", "?");
            AddInfo("dicom:dicom:image::name", "Scan Length", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Matrix", "?");
            AddInfo("dicom:dicom:image::name", "In Plane Phase Encoding Direction", "?");
            AddInfo("dicom:dicom:image::name", "Flip Angle", "?");
            AddInfo("dicom:dicom:image::name", "Variable Flip Angle Flag", "?");
            AddInfo("dicom:dicom:image::name", "SAR", "?");
            AddInfo("dicom:dicom:image::name", "DB-Dt", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Device Processing Descr", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Device Processing Code", "?");
            AddInfo("dicom:dicom:image::name", "Cassette Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Cassette Size", "?");
            AddInfo("dicom:dicom:image::name", "Exposures On Plate", "?");
            AddInfo("dicom:dicom:image::name", "Relative X Ray Exposure", "?");
            AddInfo("dicom:dicom:image::name", "Column Angulation", "?");
            AddInfo("dicom:dicom:image::name", "Tomo Layer Height", "?");
            AddInfo("dicom:dicom:image::name", "Tomo Angle", "?");
            AddInfo("dicom:dicom:image::name", "Tomo Time", "?");
            AddInfo("dicom:dicom:image::name", "Tomo Type", "?");
            AddInfo("dicom:dicom:image::name", "Tomo Class", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Tomosynthesis Source Images", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Motion", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Type", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Primary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Secondary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Primary Angle Increment", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Secondary Angle Increment", "?");
            AddInfo("dicom:dicom:image::name", "Detector Primary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Detector Secondary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Shape", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Left Vertical Edge", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Right Vertical Edge", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Upper Horizontal Edge", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Lower Horizontal Edge", "?");
            AddInfo("dicom:dicom:image::name", "Center Of Circular Shutter", "?");
            AddInfo("dicom:dicom:image::name", "Radius Of Circular Shutter", "?");
            AddInfo("dicom:dicom:image::name", "Vertices Of Polygonal Shutter", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Presentation Value", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Overlay Group", "?");
            AddInfo("dicom:dicom:image::name", "Shutter Presentation Color CIE Lab Val", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Shape", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Left Vertical Edge", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Right Vertical Edge", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Upper Horizontal Edge", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Lower Horizontal Edge", "?");
            AddInfo("dicom:dicom:image::name", "Center Of Circular Collimator", "?");
            AddInfo("dicom:dicom:image::name", "Radius Of Circular Collimator", "?");
            AddInfo("dicom:dicom:image::name", "Vertices Of Polygonal Collimator", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Time Synchronized", "?");
            AddInfo("dicom:dicom:image::name", "Time Source", "?");
            AddInfo("dicom:dicom:image::name", "Time Distribution Protocol", "?");
            AddInfo("dicom:dicom:image::name", "NTP Source Address", "?");
            AddInfo("dicom:dicom:image::name", "Page Number Vector", "?");
            AddInfo("dicom:dicom:image::name", "Frame Label Vector", "?");
            AddInfo("dicom:dicom:image::name", "Frame Primary Angle Vector", "?");
            AddInfo("dicom:dicom:image::name", "Frame Secondary Angle Vector", "?");
            AddInfo("dicom:dicom:image::name", "Slice Location Vector", "?");
            AddInfo("dicom:dicom:image::name", "Display Window Label Vector", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Scanned Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Digitizing Device Transport Direction", "?");
            AddInfo("dicom:dicom:image::name", "Rotation Of Scanned Film", "?");
            AddInfo("dicom:dicom:image::name", "IVUS Acquisition", "?");
            AddInfo("dicom:dicom:image::name", "IVUS Pullback Rate", "?");
            AddInfo("dicom:dicom:image::name", "IVUS Gated Rate", "?");
            AddInfo("dicom:dicom:image::name", "IVUS Pullback Start Frame Number", "?");
            AddInfo("dicom:dicom:image::name", "IVUS Pullback Stop Frame Number", "?");
            AddInfo("dicom:dicom:image::name", "Lesion Number", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Comments", "?");
            AddInfo("dicom:dicom:image::name", "Output Power", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Data", "?");
            AddInfo("dicom:dicom:image::name", "Focus Depth", "?");
            AddInfo("dicom:dicom:image::name", "Processing Function", "?");
            AddInfo("dicom:dicom:image::name", "Postprocessing Function", "?");
            AddInfo("dicom:dicom:image::name", "Mechanical Index", "?");
            AddInfo("dicom:dicom:image::name", "Bone Thermal Index", "?");
            AddInfo("dicom:dicom:image::name", "Cranial Thermal Index", "?");
            AddInfo("dicom:dicom:image::name", "Soft Tissue Thermal Index", "?");
            AddInfo("dicom:dicom:image::name", "Soft Tissue Focus Thermal Index", "?");
            AddInfo("dicom:dicom:image::name", "Soft Tissue Surface Thermal Index", "?");
            AddInfo("dicom:dicom:image::name", "Dynamic Range", "?");
            AddInfo("dicom:dicom:image::name", "Total Gain", "?");
            AddInfo("dicom:dicom:image::name", "Depth Of Scan Field", "?");
            AddInfo("dicom:dicom:image::name", "Patient Position", "?");
            AddInfo("dicom:dicom:image::name", "View Position", "?");
            AddInfo("dicom:dicom:image::name", "Projection Eponymous Name Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Image Transformation Matrix", "?");
            AddInfo("dicom:dicom:image::name", "Image Translation Vector", "?");
            AddInfo("dicom:dicom:image::name", "Sensitivity", "?");
            AddInfo("dicom:dicom:image::name", "Sequence Of Ultrasound Regions", "?");
            AddInfo("dicom:dicom:image::name", "Region Spatial Format", "?");
            AddInfo("dicom:dicom:image::name", "Region Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Region Flags", "?");
            AddInfo("dicom:dicom:image::name", "Region Location Min X0", "?");
            AddInfo("dicom:dicom:image::name", "Region Location Min Y0", "?");
            AddInfo("dicom:dicom:image::name", "Region Location Max X1", "?");
            AddInfo("dicom:dicom:image::name", "Region Location Max Y1", "?");
            AddInfo("dicom:dicom:image::name", "Reference Pixel X0", "?");
            AddInfo("dicom:dicom:image::name", "Reference Pixel Y0", "?");
            AddInfo("dicom:dicom:image::name", "Physical Units X Direction", "?");
            AddInfo("dicom:dicom:image::name", "Physical Units Y Direction", "?");
            AddInfo("dicom:dicom:image::name", "Reference Pixel Physical Value X", "?");
            AddInfo("dicom:dicom:image::name", "Reference Pixel Physical Value Y", "?");
            AddInfo("dicom:dicom:image::name", "Physical Delta X", "?");
            AddInfo("dicom:dicom:image::name", "Physical Delta Y", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Transducer Type", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Repetition Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Doppler Correction Angle", "?");
            AddInfo("dicom:dicom:image::name", "Steering Angle", "?");
            AddInfo("dicom:dicom:image::name", "Doppler Sample Volume X Pos Retired", "?");
            AddInfo("dicom:dicom:image::name", "Doppler Sample Volume X Position", "?");
            AddInfo("dicom:dicom:image::name", "Doppler Sample Volume Y Pos Retired", "?");
            AddInfo("dicom:dicom:image::name", "Doppler Sample Volume Y Position", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position X0 Retired", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position X0", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position Y0 Retired", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position Y0", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position X1 Retired", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position X1", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position Y1 Retired", "?");
            AddInfo("dicom:dicom:image::name", "TM Line Position Y1", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Organization", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Mask", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Range Start", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Range Stop", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Physical Units", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Component Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Table Break Points", "?");
            AddInfo("dicom:dicom:image::name", "Table Of X Break Points", "?");
            AddInfo("dicom:dicom:image::name", "Table Of Y Break Points", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Table Entries", "?");
            AddInfo("dicom:dicom:image::name", "Table Of Pixel Values", "?");
            AddInfo("dicom:dicom:image::name", "Table Of Parameter Values", "?");
            AddInfo("dicom:dicom:image::name", "R Wave Time Vector", "?");
            AddInfo("dicom:dicom:image::name", "Detector Conditions Nominal Flag", "?");
            AddInfo("dicom:dicom:image::name", "Detector Temperature", "?");
            AddInfo("dicom:dicom:image::name", "Detector Type", "?");
            AddInfo("dicom:dicom:image::name", "Detector Configuration", "?");
            AddInfo("dicom:dicom:image::name", "Detector Description", "?");
            AddInfo("dicom:dicom:image::name", "Detector Mode", "?");
            AddInfo("dicom:dicom:image::name", "Detector ID", "?");
            AddInfo("dicom:dicom:image::name", "Date Of Last Detector Calibration", "?");
            AddInfo("dicom:dicom:image::name", "Time Of Last Detector Calibration", "?");
            AddInfo("dicom:dicom:image::name", "Detector Exposures Since Calibration", "?");
            AddInfo("dicom:dicom:image::name", "Detector Exposures Since Manufactured", "?");
            AddInfo("dicom:dicom:image::name", "Detector Time Since Last Exposure", "?");
            AddInfo("dicom:dicom:image::name", "Detector Active Time", "?");
            AddInfo("dicom:dicom:image::name", "Detector Active Offset From Exposure", "?");
            AddInfo("dicom:dicom:image::name", "Detector Binning", "?");
            AddInfo("dicom:dicom:image::name", "Detector Element Physical Size", "?");
            AddInfo("dicom:dicom:image::name", "Detector Element Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Detector Active Shape", "?");
            AddInfo("dicom:dicom:image::name", "Detector Active Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Detector Active Origin", "?");
            AddInfo("dicom:dicom:image::name", "Detector Manufacturer Name", "?");
            AddInfo("dicom:dicom:image::name", "Detector Manufacturers Model Name", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Origin", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Horizontal Flip", "?");
            AddInfo("dicom:dicom:image::name", "Grid Absorbing Material", "?");
            AddInfo("dicom:dicom:image::name", "Grid Spacing Material", "?");
            AddInfo("dicom:dicom:image::name", "Grid Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Grid Pitch", "?");
            AddInfo("dicom:dicom:image::name", "Grid Aspect Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Grid Period", "?");
            AddInfo("dicom:dicom:image::name", "Grid Focal Distance", "?");
            AddInfo("dicom:dicom:image::name", "Filter Material", "?");
            AddInfo("dicom:dicom:image::name", "Filter Thickness Minimum", "?");
            AddInfo("dicom:dicom:image::name", "Filter Thickness Maximum", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Mode", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Mode Description", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Status", "?");
            AddInfo("dicom:dicom:image::name", "Phototimer Setting", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Time In Micro Sec", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Tube Current In Micro Amps", "?");
            AddInfo("dicom:dicom:image::name", "Content Qualification", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Sequence Name", "?");
            AddInfo("dicom:dicom:image::name", "MR Imaging Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Echo Pulse Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Inversion Recovery", "?");
            AddInfo("dicom:dicom:image::name", "Flow Compensation", "?");
            AddInfo("dicom:dicom:image::name", "Multiple Spin Echo", "?");
            AddInfo("dicom:dicom:image::name", "Multi Planar Excitation", "?");
            AddInfo("dicom:dicom:image::name", "Phase Contrast", "?");
            AddInfo("dicom:dicom:image::name", "Time Of Flight Contrast", "?");
            AddInfo("dicom:dicom:image::name", "Spoiling", "?");
            AddInfo("dicom:dicom:image::name", "Steady State Pulse Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Echo Planar Pulse Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Tag Angle First Axis", "?");
            AddInfo("dicom:dicom:image::name", "Magnetization Transfer", "?");
            AddInfo("dicom:dicom:image::name", "T2 Preparation", "?");
            AddInfo("dicom:dicom:image::name", "Blood Signal Nulling", "?");
            AddInfo("dicom:dicom:image::name", "Saturation Recovery", "?");
            AddInfo("dicom:dicom:image::name", "Spectrally Selected Suppression", "?");
            AddInfo("dicom:dicom:image::name", "Spectrally Selected Excitation", "?");
            AddInfo("dicom:dicom:image::name", "Spatial Presaturation", "?");
            AddInfo("dicom:dicom:image::name", "Tagging", "?");
            AddInfo("dicom:dicom:image::name", "Oversampling Phase", "?");
            AddInfo("dicom:dicom:image::name", "Tag Spacing First Dimension", "?");
            AddInfo("dicom:dicom:image::name", "Geometry Of K Space Traversal", "?");
            AddInfo("dicom:dicom:image::name", "Segmented K Space Traversal", "?");
            AddInfo("dicom:dicom:image::name", "Rectilinear Phase Encode Reordering", "?");
            AddInfo("dicom:dicom:image::name", "Tag Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Partial Fourier Direction", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Synchronization Technique", "?");
            AddInfo("dicom:dicom:image::name", "Receive Coil Manufacturer Name", "?");
            AddInfo("dicom:dicom:image::name", "MR Receive Coil Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Receive Coil Type", "?");
            AddInfo("dicom:dicom:image::name", "Quadrature Receive Coil", "?");
            AddInfo("dicom:dicom:image::name", "Multi Coil Definition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Multi Coil Configuration", "?");
            AddInfo("dicom:dicom:image::name", "Multi Coil Element Name", "?");
            AddInfo("dicom:dicom:image::name", "Multi Coil Element Used", "?");
            AddInfo("dicom:dicom:image::name", "MR Transmit Coil Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Transmit Coil Manufacturer Name", "?");
            AddInfo("dicom:dicom:image::name", "Transmit Coil Type", "?");
            AddInfo("dicom:dicom:image::name", "Spectral Width", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shift Reference", "?");
            AddInfo("dicom:dicom:image::name", "Volume Localization Technique", "?");
            AddInfo("dicom:dicom:image::name", "MR Acquisition Frequency Encode Steps", "?");
            AddInfo("dicom:dicom:image::name", "Decoupling", "?");
            AddInfo("dicom:dicom:image::name", "Decoupled Nucleus", "?");
            AddInfo("dicom:dicom:image::name", "Decoupling Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Decoupling Method", "?");
            AddInfo("dicom:dicom:image::name", "Decoupling Chemical Shift Reference", "?");
            AddInfo("dicom:dicom:image::name", "K Space Filtering", "?");
            AddInfo("dicom:dicom:image::name", "Time Domain Filtering", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Zero Fills", "?");
            AddInfo("dicom:dicom:image::name", "Baseline Correction", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Reduction Factor In Plane", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac RR Interval Specified", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Duration", "?");
            AddInfo("dicom:dicom:image::name", "Frame Acquisition Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion Directionality", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion Gradient Direction Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Acquisition", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Acquisition Technique", "?");
            AddInfo("dicom:dicom:image::name", "Inversion Times", "?");
            AddInfo("dicom:dicom:image::name", "Metabolite Map Description", "?");
            AddInfo("dicom:dicom:image::name", "Partial Fourier", "?");
            AddInfo("dicom:dicom:image::name", "Effective Echo Time", "?");
            AddInfo("dicom:dicom:image::name", "Metabolite Map Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shift Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Signal Source", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion Gradient Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Velocity Encoding Direction", "?");
            AddInfo("dicom:dicom:image::name", "Velocity Encoding Minimum Value", "?");
            AddInfo("dicom:dicom:image::name", "Number Of K Space Trajectories", "?");
            AddInfo("dicom:dicom:image::name", "Coverage Of K Space", "?");
            AddInfo("dicom:dicom:image::name", "Spectroscopy Acquisition Phase Rows", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Reduct Factor In Plane Retired", "?");
            AddInfo("dicom:dicom:image::name", "Transmitter Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Resonant Nucleus", "?");
            AddInfo("dicom:dicom:image::name", "Frequency Correction", "?");
            AddInfo("dicom:dicom:image::name", "MR Spectroscopy FOV-Geometry Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Slab Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Slab Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Mid Slab Position", "?");
            AddInfo("dicom:dicom:image::name", "MR Spatial Saturation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Timing And Related Parameters Seq", "?");
            AddInfo("dicom:dicom:image::name", "MR Echo Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Diffusion Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Trigger Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Averages Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MRFOV-Geometry Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Volume Localization Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Spectroscopy Acquisition Data Columns", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion Anisotropy Type", "?");
            AddInfo("dicom:dicom:image::name", "Frame Reference Date Time", "?");
            AddInfo("dicom:dicom:image::name", "MR Metabolite Map Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Reduction Factor Out Of Plane", "?");
            AddInfo("dicom:dicom:image::name", "Spectroscopy Out Of Plane Phase Steps", "?");
            AddInfo("dicom:dicom:image::name", "Bulk Motion Status", "?");
            AddInfo("dicom:dicom:image::name", "Parallel Reduction Fact Second In Plane", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Beat Rejection Technique", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Motion Comp Technique", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Signal Source", "?");
            AddInfo("dicom:dicom:image::name", "Bulk Motion Compensation Technique", "?");
            AddInfo("dicom:dicom:image::name", "Bulk Motion Signal Source", "?");
            AddInfo("dicom:dicom:image::name", "Applicable Safety Standard Agency", "?");
            AddInfo("dicom:dicom:image::name", "Applicable Safety Standard Descr", "?");
            AddInfo("dicom:dicom:image::name", "Operating Mode Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Operating Mode Type", "?");
            AddInfo("dicom:dicom:image::name", "Operating Mode", "?");
            AddInfo("dicom:dicom:image::name", "Specific Absorption Rate Definition", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Output Type", "?");
            AddInfo("dicom:dicom:image::name", "Specific Absorption Rate Value", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Output", "?");
            AddInfo("dicom:dicom:image::name", "Flow Compensation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Tagging Delay", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Motion Comp Tech Descr", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Signal Source ID", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shifts Min Integrate Limit Hz", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shifts Max Integrate Limit Hz", "?");
            AddInfo("dicom:dicom:image::name", "MR Velocity Encoding Sequence", "?");
            AddInfo("dicom:dicom:image::name", "First Order Phase Correction", "?");
            AddInfo("dicom:dicom:image::name", "Water Referenced Phase Correction", "?");
            AddInfo("dicom:dicom:image::name", "MR Spectroscopy Acquisition Type", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Cycle Position", "?");
            AddInfo("dicom:dicom:image::name", "Velocity Encoding Maximum Value", "?");
            AddInfo("dicom:dicom:image::name", "Tag Spacing Second Dimension", "?");
            AddInfo("dicom:dicom:image::name", "Tag Angle Second Axis", "?");
            AddInfo("dicom:dicom:image::name", "Frame Acquisition Duration", "?");
            AddInfo("dicom:dicom:image::name", "MR Image Frame Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Spectroscopy Frame Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "MR Acq Phase Encoding Steps In Plane", "?");
            AddInfo("dicom:dicom:image::name", "MR Acq Phase Encoding Steps Out Of Plane", "?");
            AddInfo("dicom:dicom:image::name", "Spectroscopy Acq Phase Columns", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Cycle Position", "?");
            AddInfo("dicom:dicom:image::name", "Specific Absorption Rate Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RF Echo Train Length", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Echo Train Length", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shifts Min Integrate Limit PPM", "?");
            AddInfo("dicom:dicom:image::name", "Chemical Shifts Max Integrate Limit PPM", "?");
            AddInfo("dicom:dicom:image::name", "CT Acquisition Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Type", "?");
            AddInfo("dicom:dicom:image::name", "Tube Angle", "?");
            AddInfo("dicom:dicom:image::name", "CT Acquisition Details Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Revolution Time", "?");
            AddInfo("dicom:dicom:image::name", "Single Collimation Width", "?");
            AddInfo("dicom:dicom:image::name", "Total Collimation Width", "?");
            AddInfo("dicom:dicom:image::name", "CT Table Dynamics Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Table Speed", "?");
            AddInfo("dicom:dicom:image::name", "Table Feed Per Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Spiral Pitch Factor", "?");
            AddInfo("dicom:dicom:image::name", "CT Geometry Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Data Collection Center Patient", "?");
            AddInfo("dicom:dicom:image::name", "CT Reconstruction Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Algorithm", "?");
            AddInfo("dicom:dicom:image::name", "Convolution Kernel Group", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Field Of View", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Target Center Patient", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Angle", "?");
            AddInfo("dicom:dicom:image::name", "Image Filter", "?");
            AddInfo("dicom:dicom:image::name", "CT Exposure Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Modulation Type", "?");
            AddInfo("dicom:dicom:image::name", "Estimated Dose Saving", "?");
            AddInfo("dicom:dicom:image::name", "CTX Ray Details Sequence", "?");
            AddInfo("dicom:dicom:image::name", "CT Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Table Position", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Time In Milli Sec", "?");
            AddInfo("dicom:dicom:image::name", "CT Image Frame Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Tube Current In Milli Amps", "?");
            AddInfo("dicom:dicom:image::name", "Exposure In Milli Amp Sec", "?");
            AddInfo("dicom:dicom:image::name", "Constant Volume Flag", "?");
            AddInfo("dicom:dicom:image::name", "Fluoroscopy Flag", "?");
            AddInfo("dicom:dicom:image::name", "Source To Data Collection Center Dist", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent Number", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Ingredient Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Administration Profile Seq", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Usage Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent Administered", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent Detected", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Agent Phase", "?");
            AddInfo("dicom:dicom:image::name", "CTD Ivol", "?");
            AddInfo("dicom:dicom:image::name", "CTDI Phantom Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Calcium Scoring Mass Factor Patient", "?");
            AddInfo("dicom:dicom:image::name", "Calcium Scoring Mass Factor Device", "?");
            AddInfo("dicom:dicom:image::name", "Energy Weighting Factor", "?");
            AddInfo("dicom:dicom:image::name", "CT Additional X Ray Source Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Projection Pixel Calibration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Distance Source To Isocenter", "?");
            AddInfo("dicom:dicom:image::name", "Distance Object To Table Top", "?");
            AddInfo("dicom:dicom:image::name", "Object Pixel Spacing In Center Of Beam", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Table Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Collimator Shape Sequence", "?");
            AddInfo("dicom:dicom:image::name", "XA-XRF Frame Characteristics Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame Acquisition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Receptor Type", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Protocol Name", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Protocol Description", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Bolus Ingredient Opaque", "?");
            AddInfo("dicom:dicom:image::name", "Distance Receptor Plane To Det Housing", "?");
            AddInfo("dicom:dicom:image::name", "Intensifier Active Shape", "?");
            AddInfo("dicom:dicom:image::name", "Intensifier Active Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Physical Detector Size", "?");
            AddInfo("dicom:dicom:image::name", "Position Of Isocenter Projection", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Description", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Sensing Regions Seq", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Sensing Region Shape", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Sens Region Left Edge", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Control Sens Region Right Edge", "?");
            AddInfo("dicom:dicom:image::name", "Center Of Circ Expos Control Sens Region", "?");
            AddInfo("dicom:dicom:image::name", "Radius Of Circ Expos Control Sens Region", "?");
            AddInfo("dicom:dicom:image::name", "Column Angulation Patient", "?");
            AddInfo("dicom:dicom:image::name", "Beam Angle", "?");
            AddInfo("dicom:dicom:image::name", "Frame Detector Parameters Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Anatomy Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Calibration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Object Thickness Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Plane Identification", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View Dimensions In Float", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter Reference System Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Isocenter Primary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Isocenter Secondary Angle", "?");
            AddInfo("dicom:dicom:image::name", "Positioner Isocenter Det Rot Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table X Position To Isocenter", "?");
            AddInfo("dicom:dicom:image::name", "Table Y Position To Isocenter", "?");
            AddInfo("dicom:dicom:image::name", "Table Z Position To Isocenter", "?");
            AddInfo("dicom:dicom:image::name", "Table Horizontal Rotation Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Head Tilt Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Cradle Tilt Angle", "?");
            AddInfo("dicom:dicom:image::name", "Frame Display Shutter Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Acquired Image Area Dose Product", "?");
            AddInfo("dicom:dicom:image::name", "C Arm Positioner Tabletop Relationship", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Geometry Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Irradiation Event ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "X Ray 3D Frame Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contributing Sources Sequence", "?");
            AddInfo("dicom:dicom:image::name", "X Ray 3D Acquisition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Primary Positioner Scan Arc", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Positioner Scan Arc", "?");
            AddInfo("dicom:dicom:image::name", "Primary Positioner Scan Start Angle", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Positioner Scan Start Angle", "?");
            AddInfo("dicom:dicom:image::name", "Primary Positioner Increment", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Positioner Increment", "?");
            AddInfo("dicom:dicom:image::name", "Start Acquisition Date Time", "?");
            AddInfo("dicom:dicom:image::name", "End Acquisition Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Application Name", "?");
            AddInfo("dicom:dicom:image::name", "Application Version", "?");
            AddInfo("dicom:dicom:image::name", "Application Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Type", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Description", "?");
            AddInfo("dicom:dicom:image::name", "X Ray 3D Reconstruction Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Description", "?");
            AddInfo("dicom:dicom:image::name", "Per Projection Acquisition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Matrix Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value XX", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value XY", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value XZ", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value YY", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value YZ", "?");
            AddInfo("dicom:dicom:image::name", "Diffusion B Value ZZ", "?");
            AddInfo("dicom:dicom:image::name", "Decay Correction Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Start Density Threshold", "?");
            AddInfo("dicom:dicom:image::name", "Termination Time Threshold", "?");
            AddInfo("dicom:dicom:image::name", "Detector Geometry", "?");
            AddInfo("dicom:dicom:image::name", "Axial Detector Dimension", "?");
            AddInfo("dicom:dicom:image::name", "PET Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Iterations", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Subsets", "?");
            AddInfo("dicom:dicom:image::name", "PET Frame Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Type", "?");
            AddInfo("dicom:dicom:image::name", "Decay Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Attenuation Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Scatter Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Dead Time Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Motion Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Patient Motion Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Randoms Corrected", "?");
            AddInfo("dicom:dicom:image::name", "Sensitivity Calibrated", "?");
            AddInfo("dicom:dicom:image::name", "Depths Of Focus", "?");
            AddInfo("dicom:dicom:image::name", "Exclusion Start Datetime", "?");
            AddInfo("dicom:dicom:image::name", "Exclusion Duration", "?");
            AddInfo("dicom:dicom:image::name", "Image Data Type Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Aliased Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Contributing Equipment Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contribution Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Contribution Description", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Cells I In Detector", "?");
            AddInfo("dicom:dicom:image::name", "Cell Number At Theta", "?");
            AddInfo("dicom:dicom:image::name", "Cell Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Horiz Frame Of Ref", "?");
            AddInfo("dicom:dicom:image::name", "Series Contrast", "?");
            AddInfo("dicom:dicom:image::name", "Last Pseq", "?");
            AddInfo("dicom:dicom:image::name", "Start Number For Baseline", "?");
            AddInfo("dicom:dicom:image::name", "End Number For Baseline", "?");
            AddInfo("dicom:dicom:image::name", "Start Number For Enhanced Scans", "?");
            AddInfo("dicom:dicom:image::name", "End Number For Enhanced Scans", "?");
            AddInfo("dicom:dicom:image::name", "Series Plane", "?");
            AddInfo("dicom:dicom:image::name", "First Scan Ras", "?");
            AddInfo("dicom:dicom:image::name", "First Scan Location", "?");
            AddInfo("dicom:dicom:image::name", "Last Scan Ras", "?");
            AddInfo("dicom:dicom:image::name", "Last Scan Loc", "?");
            AddInfo("dicom:dicom:image::name", "Display Field Of View", "?");
            AddInfo("dicom:dicom:image::name", "Table Speed", "?");
            AddInfo("dicom:dicom:image::name", "Mid Scan Time", "?");
            AddInfo("dicom:dicom:image::name", "Mid Scan Flag", "?");
            AddInfo("dicom:dicom:image::name", "Degrees Of Azimuth", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Period", "?");
            AddInfo("dicom:dicom:image::name", "X Ray On Position", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Off Position", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Triggers", "?");
            AddInfo("dicom:dicom:image::name", "Angle Of First View", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Scan FOV Type", "?");
            AddInfo("dicom:dicom:image::name", "Stat Recon Flag", "?");
            AddInfo("dicom:dicom:image::name", "Compute Type", "?");
            AddInfo("dicom:dicom:image::name", "Segment Number", "?");
            AddInfo("dicom:dicom:image::name", "Total Segments Requested", "?");
            AddInfo("dicom:dicom:image::name", "Interscan Delay", "?");
            AddInfo("dicom:dicom:image::name", "View Compression Factor", "?");
            AddInfo("dicom:dicom:image::name", "Total No Of Ref Channels", "?");
            AddInfo("dicom:dicom:image::name", "Data Size For Scan Data", "?");
            AddInfo("dicom:dicom:image::name", "Recon Post Procflag", "?");
            AddInfo("dicom:dicom:image::name", "CT Water Number", "?");
            AddInfo("dicom:dicom:image::name", "CT Bone Number", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Duration", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Channels", "?");
            AddInfo("dicom:dicom:image::name", "Increment Between Channels", "?");
            AddInfo("dicom:dicom:image::name", "Starting View", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views", "?");
            AddInfo("dicom:dicom:image::name", "Increment Between Views", "?");
            AddInfo("dicom:dicom:image::name", "Dependant On No Views Processed", "?");
            AddInfo("dicom:dicom:image::name", "Field Of View In Detector Cells", "?");
            AddInfo("dicom:dicom:image::name", "Value Of Back Projection Button", "?");
            AddInfo("dicom:dicom:image::name", "Set If Fatq Estimates Were Used", "?");
            AddInfo("dicom:dicom:image::name", "Z Chan Avg Over Views", "?");
            AddInfo("dicom:dicom:image::name", "Avg Of Left Ref Chans Over Views", "?");
            AddInfo("dicom:dicom:image::name", "Max Left Chan Over Views", "?");
            AddInfo("dicom:dicom:image::name", "Avg Of Right Ref Chans Over Views", "?");
            AddInfo("dicom:dicom:image::name", "Max Right Chan Over Views", "?");
            AddInfo("dicom:dicom:image::name", "Second Echo", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Echoes", "?");
            AddInfo("dicom:dicom:image::name", "Table Delta", "?");
            AddInfo("dicom:dicom:image::name", "Contiguous", "?");
            AddInfo("dicom:dicom:image::name", "Peak SAR", "?");
            AddInfo("dicom:dicom:image::name", "Monitor SAR", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Repetition Time", "?");
            AddInfo("dicom:dicom:image::name", "Images Per Cardiac Cycle", "?");
            AddInfo("dicom:dicom:image::name", "Actual Receive Gain Analog", "?");
            AddInfo("dicom:dicom:image::name", "Actual Receive Gain Digital", "?");
            AddInfo("dicom:dicom:image::name", "Delay After Trigger", "?");
            AddInfo("dicom:dicom:image::name", "Swappf", "?");
            AddInfo("dicom:dicom:image::name", "Pause Interval", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Time", "?");
            AddInfo("dicom:dicom:image::name", "Slice Offset On Freq Axis", "?");
            AddInfo("dicom:dicom:image::name", "Center Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Transmit Gain", "?");
            AddInfo("dicom:dicom:image::name", "Analog Receiver Gain", "?");
            AddInfo("dicom:dicom:image::name", "Digital Receiver Gain", "?");
            AddInfo("dicom:dicom:image::name", "Bitmap Defining C Vs", "?");
            AddInfo("dicom:dicom:image::name", "Center Freq Method", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Seq Mode", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Seq Name", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Seq Date", "?");
            AddInfo("dicom:dicom:image::name", "Internal Pulse Seq Name", "?");
            AddInfo("dicom:dicom:image::name", "Transmitting Coil", "?");
            AddInfo("dicom:dicom:image::name", "Surface Coil Type", "?");
            AddInfo("dicom:dicom:image::name", "Extremity Coil Flag", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Run Number", "?");
            AddInfo("dicom:dicom:image::name", "Calibrated Field Strength", "?");
            AddInfo("dicom:dicom:image::name", "SAT Fat Water Bone", "?");
            AddInfo("dicom:dicom:image::name", "Receive Bandwidth", "?");
            AddInfo("dicom:dicom:image::name", "User Data 01", "?");
            AddInfo("dicom:dicom:image::name", "User Data 02", "?");
            AddInfo("dicom:dicom:image::name", "User Data 03", "?");
            AddInfo("dicom:dicom:image::name", "User Data 04", "?");
            AddInfo("dicom:dicom:image::name", "User Data 05", "?");
            AddInfo("dicom:dicom:image::name", "User Data 06", "?");
            AddInfo("dicom:dicom:image::name", "User Data 07", "?");
            AddInfo("dicom:dicom:image::name", "User Data 08", "?");
            AddInfo("dicom:dicom:image::name", "User Data 09", "?");
            AddInfo("dicom:dicom:image::name", "User Data 10", "?");
            AddInfo("dicom:dicom:image::name", "User Data 11", "?");
            AddInfo("dicom:dicom:image::name", "User Data 12", "?");
            AddInfo("dicom:dicom:image::name", "User Data 13", "?");
            AddInfo("dicom:dicom:image::name", "User Data 14", "?");
            AddInfo("dicom:dicom:image::name", "User Data 15", "?");
            AddInfo("dicom:dicom:image::name", "User Data 16", "?");
            AddInfo("dicom:dicom:image::name", "User Data 17", "?");
            AddInfo("dicom:dicom:image::name", "User Data 18", "?");
            AddInfo("dicom:dicom:image::name", "User Data 19", "?");
            AddInfo("dicom:dicom:image::name", "User Data 20", "?");
            AddInfo("dicom:dicom:image::name", "User Data 21", "?");
            AddInfo("dicom:dicom:image::name", "User Data 22", "?");
            AddInfo("dicom:dicom:image::name", "User Data 23", "?");
            AddInfo("dicom:dicom:image::name", "Projection Angle", "?");
            AddInfo("dicom:dicom:image::name", "Saturation Planes", "?");
            AddInfo("dicom:dicom:image::name", "Surface Coil Intensity", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location R", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location L", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location A", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location P", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location H", "?");
            AddInfo("dicom:dicom:image::name", "SAT Location F", "?");
            AddInfo("dicom:dicom:image::name", "SAT Thickness R-L", "?");
            AddInfo("dicom:dicom:image::name", "SAT Thickness A-P", "?");
            AddInfo("dicom:dicom:image::name", "SAT Thickness H-F", "?");
            AddInfo("dicom:dicom:image::name", "Prescribed Flow Axis", "?");
            AddInfo("dicom:dicom:image::name", "Velocity Encoding", "?");
            AddInfo("dicom:dicom:image::name", "Thickness Disclaimer", "?");
            AddInfo("dicom:dicom:image::name", "Prescan Type", "?");
            AddInfo("dicom:dicom:image::name", "Prescan Status", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Projection Algorithm", "?");
            AddInfo("dicom:dicom:image::name", "Projection Algorithm", "?");
            AddInfo("dicom:dicom:image::name", "Fractional Echo", "?");
            AddInfo("dicom:dicom:image::name", "Prep Pulse", "?");
            AddInfo("dicom:dicom:image::name", "Cardiac Phases", "?");
            AddInfo("dicom:dicom:image::name", "Variable Echoflag", "?");
            AddInfo("dicom:dicom:image::name", "Concatenated SAT", "?");
            AddInfo("dicom:dicom:image::name", "Reference Channel Used", "?");
            AddInfo("dicom:dicom:image::name", "Back Projector Coefficient", "?");
            AddInfo("dicom:dicom:image::name", "Primary Speed Correction Used", "?");
            AddInfo("dicom:dicom:image::name", "Overrange Correction Used", "?");
            AddInfo("dicom:dicom:image::name", "Dynamic Z Alpha Value", "?");
            AddInfo("dicom:dicom:image::name", "User Data", "?");
            AddInfo("dicom:dicom:image::name", "User Data", "?");
            AddInfo("dicom:dicom:image::name", "Velocity Encode Scale", "?");
            AddInfo("dicom:dicom:image::name", "Fast Phases", "?");
            AddInfo("dicom:dicom:image::name", "Transmission Gain", "?");
            AddInfo("dicom:dicom:image::name", "Relationship Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Study Instance UID", "?");
            AddInfo("dicom:dicom:image::name", "Series Instance UID", "?");
            AddInfo("dicom:dicom:image::name", "Study ID", "?");
            AddInfo("dicom:dicom:image::name", "Series Number", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Number", "?");
            AddInfo("dicom:dicom:image::name", "Instance Number", "?");
            AddInfo("dicom:dicom:image::name", "Isotope Number", "?");
            AddInfo("dicom:dicom:image::name", "Phase Number", "?");
            AddInfo("dicom:dicom:image::name", "Interval Number", "?");
            AddInfo("dicom:dicom:image::name", "Time Slot Number", "?");
            AddInfo("dicom:dicom:image::name", "Angle Number", "?");
            AddInfo("dicom:dicom:image::name", "Item Number", "?");
            AddInfo("dicom:dicom:image::name", "Patient Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Number", "?");
            AddInfo("dicom:dicom:image::name", "Curve Number", "?");
            AddInfo("dicom:dicom:image::name", "Lookup Table Number", "?");
            AddInfo("dicom:dicom:image::name", "Image Position", "?");
            AddInfo("dicom:dicom:image::name", "Image Position Patient", "?");
            AddInfo("dicom:dicom:image::name", "Image Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Image Orientation Patient", "?");
            AddInfo("dicom:dicom:image::name", "Location", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "Laterality", "?");
            AddInfo("dicom:dicom:image::name", "Image Laterality", "?");
            AddInfo("dicom:dicom:image::name", "Image Geometry Type", "?");
            AddInfo("dicom:dicom:image::name", "Masking Image", "?");
            AddInfo("dicom:dicom:image::name", "Temporal Position Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Temporal Positions", "?");
            AddInfo("dicom:dicom:image::name", "Temporal Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Synchronization Frame Of Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "Series In Study", "?");
            AddInfo("dicom:dicom:image::name", "Acquisitions In Series", "?");
            AddInfo("dicom:dicom:image::name", "Images In Acquisition", "?");
            AddInfo("dicom:dicom:image::name", "Images In Series", "?");
            AddInfo("dicom:dicom:image::name", "Acquisitions In Study", "?");
            AddInfo("dicom:dicom:image::name", "Images In Study", "?");
            AddInfo("dicom:dicom:image::name", "Reference", "?");
            AddInfo("dicom:dicom:image::name", "Position Reference Indicator", "?");
            AddInfo("dicom:dicom:image::name", "Slice Location", "?");
            AddInfo("dicom:dicom:image::name", "Other Study Numbers", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Patient Related Studies", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Patient Related Series", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Patient Related Instances", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Study Related Series", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Study Related Instances", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Series Related Instances", "?");
            AddInfo("dicom:dicom:image::name", "Source Image I Ds", "?");
            AddInfo("dicom:dicom:image::name", "Modifying Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Modified Image ID", "?");
            AddInfo("dicom:dicom:image::name", "Modified Image Date", "?");
            AddInfo("dicom:dicom:image::name", "Modifying Device Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Modified Image Time", "?");
            AddInfo("dicom:dicom:image::name", "Modified Image Description", "?");
            AddInfo("dicom:dicom:image::name", "Image Comments", "?");
            AddInfo("dicom:dicom:image::name", "Original Image Identification", "?");
            AddInfo("dicom:dicom:image::name", "Original Image Ident Nomenclature", "?");
            AddInfo("dicom:dicom:image::name", "Stack ID", "?");
            AddInfo("dicom:dicom:image::name", "In Stack Position Number", "?");
            AddInfo("dicom:dicom:image::name", "Frame Anatomy Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame Laterality", "?");
            AddInfo("dicom:dicom:image::name", "Frame Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Plane Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Plane Orientation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Temporal Position Index", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Delay Time", "?");
            AddInfo("dicom:dicom:image::name", "Frame Acquisition Number", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Index Values", "?");
            AddInfo("dicom:dicom:image::name", "Frame Comments", "?");
            AddInfo("dicom:dicom:image::name", "Concatenation UID", "?");
            AddInfo("dicom:dicom:image::name", "In Concatenation Number", "?");
            AddInfo("dicom:dicom:image::name", "In Concatenation Total Number", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Organization UID", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Index Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Functional Group Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Index Private Creator", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Organization Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Index Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Concatenation Frame Offset Number", "?");
            AddInfo("dicom:dicom:image::name", "Functional Group Private Creator", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Percentage Of Cardiac Phase", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Percent Of Respiratory Phase", "?");
            AddInfo("dicom:dicom:image::name", "Starting Respiratory Amplitude", "?");
            AddInfo("dicom:dicom:image::name", "Starting Respiratory Phase", "?");
            AddInfo("dicom:dicom:image::name", "Ending Respiratory Amplitude", "?");
            AddInfo("dicom:dicom:image::name", "Ending Respiratory Phase", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Trigger Type", "?");
            AddInfo("dicom:dicom:image::name", "RR Interval Time Nominal", "?");
            AddInfo("dicom:dicom:image::name", "Actual Cardiac Trigger Delay Time", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Synchronization Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Interval Time", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Respiratory Trigger Delay Time", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Trigger Delay Threshold", "?");
            AddInfo("dicom:dicom:image::name", "Actual Respiratory Trigger Delay Time", "?");
            AddInfo("dicom:dicom:image::name", "Image Position Volume", "?");
            AddInfo("dicom:dicom:image::name", "Image Orientation Volume", "?");
            AddInfo("dicom:dicom:image::name", "Apex Position", "?");
            AddInfo("dicom:dicom:image::name", "Dimension Description Label", "?");
            AddInfo("dicom:dicom:image::name", "Patient Orientation In Frame Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame Label", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Index", "?");
            AddInfo("dicom:dicom:image::name", "Contributing SOP Instances Ref Seq", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Index", "?");
            AddInfo("dicom:dicom:image::name", "Series From Which Prescribed", "?");
            AddInfo("dicom:dicom:image::name", "Genesis Version Now", "?");
            AddInfo("dicom:dicom:image::name", "Series Record Checksum", "?");
            AddInfo("dicom:dicom:image::name", "Genesis Version Now", "?");
            AddInfo("dicom:dicom:image::name", "Acqrecon Record Checksum", "?");
            AddInfo("dicom:dicom:image::name", "Table Start Location", "?");
            AddInfo("dicom:dicom:image::name", "Series From Which Prescribed", "?");
            AddInfo("dicom:dicom:image::name", "Image From Which Prescribed", "?");
            AddInfo("dicom:dicom:image::name", "Screen Format", "?");
            AddInfo("dicom:dicom:image::name", "Anatomical Reference For Scout", "?");
            AddInfo("dicom:dicom:image::name", "Locations In Acquisition", "?");
            AddInfo("dicom:dicom:image::name", "Graphically Prescribed", "?");
            AddInfo("dicom:dicom:image::name", "Rotation From Source X Rot", "?");
            AddInfo("dicom:dicom:image::name", "Rotation From Source Y Rot", "?");
            AddInfo("dicom:dicom:image::name", "Rotation From Source Z Rot", "?");
            AddInfo("dicom:dicom:image::name", "Image Position", "?");
            AddInfo("dicom:dicom:image::name", "Image Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Integer Slop", "?");
            AddInfo("dicom:dicom:image::name", "Integer Slop", "?");
            AddInfo("dicom:dicom:image::name", "Integer Slop", "?");
            AddInfo("dicom:dicom:image::name", "Integer Slop", "?");
            AddInfo("dicom:dicom:image::name", "Integer Slop", "?");
            AddInfo("dicom:dicom:image::name", "Float Slop", "?");
            AddInfo("dicom:dicom:image::name", "Float Slop", "?");
            AddInfo("dicom:dicom:image::name", "Float Slop", "?");
            AddInfo("dicom:dicom:image::name", "Float Slop", "?");
            AddInfo("dicom:dicom:image::name", "Float Slop", "?");
            AddInfo("dicom:dicom:image::name", "Auto Window Level Alpha", "?");
            AddInfo("dicom:dicom:image::name", "Auto Window Level Beta", "?");
            AddInfo("dicom:dicom:image::name", "Auto Window Level Window", "?");
            AddInfo("dicom:dicom:image::name", "To Window Level Level", "?");
            AddInfo("dicom:dicom:image::name", "Tube Focal Spot Position", "?");
            AddInfo("dicom:dicom:image::name", "Biopsy Position", "?");
            AddInfo("dicom:dicom:image::name", "Biopsy T Location", "?");
            AddInfo("dicom:dicom:image::name", "Biopsy Ref Location", "?");
            AddInfo("dicom:dicom:image::name", "Light Path Filter Pass Through Wavelen", "?");
            AddInfo("dicom:dicom:image::name", "Light Path Filter Pass Band", "?");
            AddInfo("dicom:dicom:image::name", "Image Path Filter Pass Through Wavelen", "?");
            AddInfo("dicom:dicom:image::name", "Image Path Filter Pass Band", "?");
            AddInfo("dicom:dicom:image::name", "Patient Eye Movement Commanded", "?");
            AddInfo("dicom:dicom:image::name", "Patient Eye Movement Command Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Spherical Lens Power", "?");
            AddInfo("dicom:dicom:image::name", "Cylinder Lens Power", "?");
            AddInfo("dicom:dicom:image::name", "Cylinder Axis", "?");
            AddInfo("dicom:dicom:image::name", "Emmetropic Magnification", "?");
            AddInfo("dicom:dicom:image::name", "Intra Ocular Pressure", "?");
            AddInfo("dicom:dicom:image::name", "Horizontal Field Of View", "?");
            AddInfo("dicom:dicom:image::name", "Pupil Dilated", "?");
            AddInfo("dicom:dicom:image::name", "Degree Of Dilation", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Baseline Angle", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Baseline Displacement", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Horizontal Pixel Offset", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Vertical Pixel Offset", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Device Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Illumination Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Light Path Filter Type Stack Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Image Path Filter Type Stack Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Lenses Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Description Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Refractive State Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Mydriatic Agent Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Relative Image Position Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Stereo Pairs Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Left Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Right Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Axial Length Of The Eye", "?");
            AddInfo("dicom:dicom:image::name", "Ophthalmic Frame Location Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Reference Coordinates", "?");
            AddInfo("dicom:dicom:image::name", "Depth Spatial Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Depth Distortion", "?");
            AddInfo("dicom:dicom:image::name", "Along Scan Spatial Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Along Scan Distortion", "?");
            AddInfo("dicom:dicom:image::name", "Ophthalmic Image Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Depth Of Transverse Image", "?");
            AddInfo("dicom:dicom:image::name", "Mydriatic Agent Conc Units Seq", "?");
            AddInfo("dicom:dicom:image::name", "Across Scan Spatial Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Across Scan Distortion", "?");
            AddInfo("dicom:dicom:image::name", "Mydriatic Agent Concentration", "?");
            AddInfo("dicom:dicom:image::name", "Illumination Wave Length", "?");
            AddInfo("dicom:dicom:image::name", "Illumination Power", "?");
            AddInfo("dicom:dicom:image::name", "Illumination Bandwidth", "?");
            AddInfo("dicom:dicom:image::name", "Mydriatic Agent Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Series In Study", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Unarchived Series", "?");
            AddInfo("dicom:dicom:image::name", "Reference Image Field", "?");
            AddInfo("dicom:dicom:image::name", "Summary Image", "?");
            AddInfo("dicom:dicom:image::name", "Start Time Secs In First Axial", "?");
            AddInfo("dicom:dicom:image::name", "Noof Updates To Header", "?");
            AddInfo("dicom:dicom:image::name", "Indicates If The Study Has Complete Info", "?");
            AddInfo("dicom:dicom:image::name", "Last Pulse Sequence Used", "?");
            AddInfo("dicom:dicom:image::name", "Images In Series", "?");
            AddInfo("dicom:dicom:image::name", "Landmark Counter", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Acquisitions", "?");
            AddInfo("dicom:dicom:image::name", "Indicates Noof Updates To Header", "?");
            AddInfo("dicom:dicom:image::name", "Series Complete Flag", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Images Archived", "?");
            AddInfo("dicom:dicom:image::name", "Last Image Number Used", "?");
            AddInfo("dicom:dicom:image::name", "Primary Receiver Suite And Host", "?");
            AddInfo("dicom:dicom:image::name", "Image Archive Flag", "?");
            AddInfo("dicom:dicom:image::name", "Scout Type", "?");
            AddInfo("dicom:dicom:image::name", "Vma Mamp", "?");
            AddInfo("dicom:dicom:image::name", "Vma Phase", "?");
            AddInfo("dicom:dicom:image::name", "Vma Mod", "?");
            AddInfo("dicom:dicom:image::name", "Vma Clip", "?");
            AddInfo("dicom:dicom:image::name", "Smart Scan On Off Flag", "?");
            AddInfo("dicom:dicom:image::name", "Foreign Image Revision", "?");
            AddInfo("dicom:dicom:image::name", "Imaging Mode", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Imaging Options", "?");
            AddInfo("dicom:dicom:image::name", "Plane Type", "?");
            AddInfo("dicom:dicom:image::name", "Oblique Plane", "?");
            AddInfo("dicom:dicom:image::name", "RAS Letter Of Image Location", "?");
            AddInfo("dicom:dicom:image::name", "Image Location", "?");
            AddInfo("dicom:dicom:image::name", "Center R Coord Of Plane Image", "?");
            AddInfo("dicom:dicom:image::name", "Center A Coord Of Plane Image", "?");
            AddInfo("dicom:dicom:image::name", "Center S Coord Of Plane Image", "?");
            AddInfo("dicom:dicom:image::name", "Normal R Coord", "?");
            AddInfo("dicom:dicom:image::name", "Normal A Coord", "?");
            AddInfo("dicom:dicom:image::name", "Normal S Coord", "?");
            AddInfo("dicom:dicom:image::name", "R Coord Of Top Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "A Coord Of Top Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "S Coord Of Top Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "R Coord Of Bottom Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "A Coord Of Bottom Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "S Coord Of Bottom Right Corner", "?");
            AddInfo("dicom:dicom:image::name", "Table Start Location", "?");
            AddInfo("dicom:dicom:image::name", "Table End Location", "?");
            AddInfo("dicom:dicom:image::name", "RAS Letter For Side Of Image", "?");
            AddInfo("dicom:dicom:image::name", "RAS Letter For Anterior Posterior", "?");
            AddInfo("dicom:dicom:image::name", "RAS Letter For Scout Start Loc", "?");
            AddInfo("dicom:dicom:image::name", "RAS Letter For Scout End Loc", "?");
            AddInfo("dicom:dicom:image::name", "Image Dimension X", "?");
            AddInfo("dicom:dicom:image::name", "Image Dimension Y", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Excitations", "?");
            AddInfo("dicom:dicom:image::name", "Image Presentation Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Samples Per Pixel", "?");
            AddInfo("dicom:dicom:image::name", "Samples Per Pixel Used", "?");
            AddInfo("dicom:dicom:image::name", "Photometric Interpretation", "?");
            AddInfo("dicom:dicom:image::name", "Image Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Planar Configuration", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Frames", "?");
            AddInfo("dicom:dicom:image::name", "Frame Increment Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Frame Dimension Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Rows", "?");
            AddInfo("dicom:dicom:image::name", "Columns", "?");
            AddInfo("dicom:dicom:image::name", "Planes", "?");
            AddInfo("dicom:dicom:image::name", "Ultrasound Color Data Present", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Zoom Factor", "?");
            AddInfo("dicom:dicom:image::name", "Zoom Center", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Aspect Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Image Format", "?");
            AddInfo("dicom:dicom:image::name", "Manipulated Image", "?");
            AddInfo("dicom:dicom:image::name", "Corrected Image", "?");
            AddInfo("dicom:dicom:image::name", "Compression Recognition Code", "?");
            AddInfo("dicom:dicom:image::name", "Compression Code", "?");
            AddInfo("dicom:dicom:image::name", "Compression Originator", "?");
            AddInfo("dicom:dicom:image::name", "Compression Label", "?");
            AddInfo("dicom:dicom:image::name", "Compression Description", "?");
            AddInfo("dicom:dicom:image::name", "Compression Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Compression Step Pointers", "?");
            AddInfo("dicom:dicom:image::name", "Repeat Interval", "?");
            AddInfo("dicom:dicom:image::name", "Bits Grouped", "?");
            AddInfo("dicom:dicom:image::name", "Perimeter Table", "?");
            AddInfo("dicom:dicom:image::name", "Perimeter Value", "?");
            AddInfo("dicom:dicom:image::name", "Predictor Rows", "?");
            AddInfo("dicom:dicom:image::name", "Predictor Columns", "?");
            AddInfo("dicom:dicom:image::name", "Predictor Constants", "?");
            AddInfo("dicom:dicom:image::name", "Blocked Pixels", "?");
            AddInfo("dicom:dicom:image::name", "Block Rows", "?");
            AddInfo("dicom:dicom:image::name", "Block Columns", "?");
            AddInfo("dicom:dicom:image::name", "Row Overlap", "?");
            AddInfo("dicom:dicom:image::name", "Column Overlap", "?");
            AddInfo("dicom:dicom:image::name", "Bits Allocated", "?");
            AddInfo("dicom:dicom:image::name", "Bits Stored", "?");
            AddInfo("dicom:dicom:image::name", "High Bit", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Representation", "?");
            AddInfo("dicom:dicom:image::name", "Smallest Valid Pixel Value", "?");
            AddInfo("dicom:dicom:image::name", "Largest Valid Pixel Value", "?");
            AddInfo("dicom:dicom:image::name", "Smallest Image Pixel Value", "?");
            AddInfo("dicom:dicom:image::name", "Largest Image Pixel Value", "?");
            AddInfo("dicom:dicom:image::name", "Smallest Pixel Value In Series", "?");
            AddInfo("dicom:dicom:image::name", "Largest Pixel Value In Series", "?");
            AddInfo("dicom:dicom:image::name", "Smallest Image Pixel Value In Plane", "?");
            AddInfo("dicom:dicom:image::name", "Largest Image Pixel Value In Plane", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Padding Value", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Padding Range Limit", "?");
            AddInfo("dicom:dicom:image::name", "Image Location", "?");
            AddInfo("dicom:dicom:image::name", "Quality Control Image", "?");
            AddInfo("dicom:dicom:image::name", "Burned In Annotation", "?");
            AddInfo("dicom:dicom:image::name", "Transform Label", "?");
            AddInfo("dicom:dicom:image::name", "Transform Version Number", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Transform Steps", "?");
            AddInfo("dicom:dicom:image::name", "Sequence Of Compressed Data", "?");
            AddInfo("dicom:dicom:image::name", "Details Of Coefficients", "?");
            AddInfo("dicom:dicom:image::name", "Coefficient Coding", "?");
            AddInfo("dicom:dicom:image::name", "Coefficient Coding Pointers", "?");
            AddInfo("dicom:dicom:image::name", "DCT Label", "?");
            AddInfo("dicom:dicom:image::name", "Data Block Description", "?");
            AddInfo("dicom:dicom:image::name", "Data Block", "?");
            AddInfo("dicom:dicom:image::name", "Normalization Factor Format", "?");
            AddInfo("dicom:dicom:image::name", "Zonal Map Number Format", "?");
            AddInfo("dicom:dicom:image::name", "Zonal Map Location", "?");
            AddInfo("dicom:dicom:image::name", "Zonal Map Format", "?");
            AddInfo("dicom:dicom:image::name", "Adaptive Map Format", "?");
            AddInfo("dicom:dicom:image::name", "Code Number Format", "?");
            AddInfo("dicom:dicom:image::name", "Code Label", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Tables", "?");
            AddInfo("dicom:dicom:image::name", "Code Table Location", "?");
            AddInfo("dicom:dicom:image::name", "Bits For Code Word", "?");
            AddInfo("dicom:dicom:image::name", "Image Data Location", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Spacing Calibration Type", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Spacing Calibration Description", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Intensity Relationship", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Intensity Relationship Sign", "?");
            AddInfo("dicom:dicom:image::name", "Window Center", "?");
            AddInfo("dicom:dicom:image::name", "Window Width", "?");
            AddInfo("dicom:dicom:image::name", "Rescale Intercept", "?");
            AddInfo("dicom:dicom:image::name", "Rescale Slope", "?");
            AddInfo("dicom:dicom:image::name", "Rescale Type", "?");
            AddInfo("dicom:dicom:image::name", "Window Center And Width Explanation", "?");
            AddInfo("dicom:dicom:image::name", "VOI LUT Function", "?");
            AddInfo("dicom:dicom:image::name", "Gray Scale", "?");
            AddInfo("dicom:dicom:image::name", "Recommended Viewing Mode", "?");
            AddInfo("dicom:dicom:image::name", "Gray Lookup Table Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "Red Palette Color Table Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "Green Palette Color Table Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "Blue Palette Color Table Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "Large Red Palette Color Table Descr", "?");
            AddInfo("dicom:dicom:image::name", "Large Green Palette Color Table Descr", "?");
            AddInfo("dicom:dicom:image::name", "Large Blue Palette Color Table Descr", "?");
            AddInfo("dicom:dicom:image::name", "Palette Color Table UID", "?");
            AddInfo("dicom:dicom:image::name", "Gray Lookup Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Red Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Green Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Blue Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Large Red Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Large Green Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Large Blue Palette Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Large Palette Color Lookup Table UID", "?");
            AddInfo("dicom:dicom:image::name", "Segmented Red Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Segmented Green Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Segmented Blue Color Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Breast Implant Present", "?");
            AddInfo("dicom:dicom:image::name", "Partial View", "?");
            AddInfo("dicom:dicom:image::name", "Partial View Description", "?");
            AddInfo("dicom:dicom:image::name", "Partial View Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Spatial Locations Preserved", "?");
            AddInfo("dicom:dicom:image::name", "Data Path Assignment", "?");
            AddInfo("dicom:dicom:image::name", "Blending LUT1 Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Blending Weight Constant", "?");
            AddInfo("dicom:dicom:image::name", "Blending Lookup Table Data", "?");
            AddInfo("dicom:dicom:image::name", "Blending LUT2 Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Data Path ID", "?");
            AddInfo("dicom:dicom:image::name", "RGBLUT Transfer Function", "?");
            AddInfo("dicom:dicom:image::name", "Alpha LUT Transfer Function", "?");
            AddInfo("dicom:dicom:image::name", "ICC Profile", "?");
            AddInfo("dicom:dicom:image::name", "Lossy Image Compression", "?");
            AddInfo("dicom:dicom:image::name", "Lossy Image Compression Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Lossy Image Compression Method", "?");
            AddInfo("dicom:dicom:image::name", "Modality LUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "LUT Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "LUT Explanation", "?");
            AddInfo("dicom:dicom:image::name", "Modality LUT Type", "?");
            AddInfo("dicom:dicom:image::name", "LUT Data", "?");
            AddInfo("dicom:dicom:image::name", "VOILUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Softcopy VOILUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Presentation Comments", "?");
            AddInfo("dicom:dicom:image::name", "Bi Plane Acquisition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Representative Frame Number", "?");
            AddInfo("dicom:dicom:image::name", "Frame Numbers Of Interest", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Interest Description", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Interest Type", "?");
            AddInfo("dicom:dicom:image::name", "Mask Pointers", "?");
            AddInfo("dicom:dicom:image::name", "R Wave Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Mask Subtraction Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Mask Operation", "?");
            AddInfo("dicom:dicom:image::name", "Applicable Frame Range", "?");
            AddInfo("dicom:dicom:image::name", "Mask Frame Numbers", "?");
            AddInfo("dicom:dicom:image::name", "Contrast Frame Averaging", "?");
            AddInfo("dicom:dicom:image::name", "Mask Sub Pixel Shift", "?");
            AddInfo("dicom:dicom:image::name", "TID Offset", "?");
            AddInfo("dicom:dicom:image::name", "Mask Operation Explanation", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Data Provider URL", "?");
            AddInfo("dicom:dicom:image::name", "Data Point Rows", "?");
            AddInfo("dicom:dicom:image::name", "Data Point Columns", "?");
            AddInfo("dicom:dicom:image::name", "Signal Domain Columns", "?");
            AddInfo("dicom:dicom:image::name", "Largest Monochrome Pixel Value", "?");
            AddInfo("dicom:dicom:image::name", "Data Representation", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Measures Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame VOILUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Value Transformation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Signal Domain Rows", "?");
            AddInfo("dicom:dicom:image::name", "Display Filter Percentage", "?");
            AddInfo("dicom:dicom:image::name", "Frame Pixel Shift Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Subtraction Item ID", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Intensity Relationship LUT Seq", "?");
            AddInfo("dicom:dicom:image::name", "Frame Pixel Data Properties Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Geometrical Properties", "?");
            AddInfo("dicom:dicom:image::name", "Geometric Maximum Distortion", "?");
            AddInfo("dicom:dicom:image::name", "Image Processing Applied", "?");
            AddInfo("dicom:dicom:image::name", "Mask Selection Mode", "?");
            AddInfo("dicom:dicom:image::name", "LUT Function", "?");
            AddInfo("dicom:dicom:image::name", "Mask Visibility Percentage", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Shift Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Region Pixel Shift Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Vertices Of The Region", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Shift Frame Range", "?");
            AddInfo("dicom:dicom:image::name", "LUT Frame Range", "?");
            AddInfo("dicom:dicom:image::name", "Image To Equipment Mapping Matrix", "?");
            AddInfo("dicom:dicom:image::name", "Equipment Coordinate System ID", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1a", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1b", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1c", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1d", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1e", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1f", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1g", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1h", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 1i", "?");
            AddInfo("dicom:dicom:image::name", "Lower Range Of Pixels 2", "?");
            AddInfo("dicom:dicom:image::name", "Upper Range Of Pixels 2", "?");
            AddInfo("dicom:dicom:image::name", "Len Of Tot Hdr In Bytes", "?");
            AddInfo("dicom:dicom:image::name", "Version Of The Hdr Struct", "?");
            AddInfo("dicom:dicom:image::name", "Advantage Comp Overflow", "?");
            AddInfo("dicom:dicom:image::name", "Advantage Comp Underflow", "?");
            AddInfo("dicom:dicom:image::name", "Study Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Study Status ID", "?");
            AddInfo("dicom:dicom:image::name", "Study Priority ID", "?");
            AddInfo("dicom:dicom:image::name", "Study ID Issuer", "?");
            AddInfo("dicom:dicom:image::name", "Study Verified Date", "?");
            AddInfo("dicom:dicom:image::name", "Study Verified Time", "?");
            AddInfo("dicom:dicom:image::name", "Study Read Date", "?");
            AddInfo("dicom:dicom:image::name", "Study Read Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Start Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Stop Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Stop Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Location", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Study Location AE Title", "?");
            AddInfo("dicom:dicom:image::name", "Reason For Study", "?");
            AddInfo("dicom:dicom:image::name", "Requesting Physician ID Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Requesting Physician", "?");
            AddInfo("dicom:dicom:image::name", "Requesting Service", "?");
            AddInfo("dicom:dicom:image::name", "Study Arrival Date", "?");
            AddInfo("dicom:dicom:image::name", "Study Arrival Time", "?");
            AddInfo("dicom:dicom:image::name", "Study Completion Date", "?");
            AddInfo("dicom:dicom:image::name", "Study Completion Time", "?");
            AddInfo("dicom:dicom:image::name", "Study Component Status ID", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure Description", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Requested Contrast Agent", "?");
            AddInfo("dicom:dicom:image::name", "Study Comments", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Patient Alias Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Visit Status ID", "?");
            AddInfo("dicom:dicom:image::name", "Admission ID", "?");
            AddInfo("dicom:dicom:image::name", "Issuer Of Admission ID", "?");
            AddInfo("dicom:dicom:image::name", "Route Of Admissions", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Admission Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Admission Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Discharge Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Discharge Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Patient Instit Residence", "?");
            AddInfo("dicom:dicom:image::name", "Admitting Date", "?");
            AddInfo("dicom:dicom:image::name", "Admitting Time", "?");
            AddInfo("dicom:dicom:image::name", "Discharge Date", "?");
            AddInfo("dicom:dicom:image::name", "Discharge Time", "?");
            AddInfo("dicom:dicom:image::name", "Discharge Diagnosis Description", "?");
            AddInfo("dicom:dicom:image::name", "Discharge Diagnosis Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Special Needs", "?");
            AddInfo("dicom:dicom:image::name", "Service Episode ID", "?");
            AddInfo("dicom:dicom:image::name", "Issuer Of Service Episode ID", "?");
            AddInfo("dicom:dicom:image::name", "Service Episode Description", "?");
            AddInfo("dicom:dicom:image::name", "Pertinent Documents Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Current Patient Location", "?");
            AddInfo("dicom:dicom:image::name", "Patient Institution Residence", "?");
            AddInfo("dicom:dicom:image::name", "Patient State", "?");
            AddInfo("dicom:dicom:image::name", "Patient Clinical Trial Particip Seq", "?");
            AddInfo("dicom:dicom:image::name", "Visit Comments", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Originality", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Waveform Channels", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Waveform Samples", "?");
            AddInfo("dicom:dicom:image::name", "Sampling Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Multiplex Group Label", "?");
            AddInfo("dicom:dicom:image::name", "Channel Definition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Channel Number", "?");
            AddInfo("dicom:dicom:image::name", "Channel Label", "?");
            AddInfo("dicom:dicom:image::name", "Channel Status", "?");
            AddInfo("dicom:dicom:image::name", "Channel Source Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Source Modifiers Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Waveform Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Derivation Description", "?");
            AddInfo("dicom:dicom:image::name", "Channel Sensitivity", "?");
            AddInfo("dicom:dicom:image::name", "Channel Sensitivity Units Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Sensitivity Correction Factor", "?");
            AddInfo("dicom:dicom:image::name", "Channel Baseline", "?");
            AddInfo("dicom:dicom:image::name", "Channel Time Skew", "?");
            AddInfo("dicom:dicom:image::name", "Channel Sample Skew", "?");
            AddInfo("dicom:dicom:image::name", "Channel Offset", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Bits Stored", "?");
            AddInfo("dicom:dicom:image::name", "Filter Low Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Filter High Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Notch Filter Frequency", "?");
            AddInfo("dicom:dicom:image::name", "Notch Filter Bandwidth", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Data Display Scale", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Display Bkg CIE Lab Value", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Presentation Group Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Group Number", "?");
            AddInfo("dicom:dicom:image::name", "Channel Display Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Recommend Display CIE Lab Value", "?");
            AddInfo("dicom:dicom:image::name", "Channel Position", "?");
            AddInfo("dicom:dicom:image::name", "Display Shading Flag", "?");
            AddInfo("dicom:dicom:image::name", "Fractional Channel Display Scale", "?");
            AddInfo("dicom:dicom:image::name", "Absolute Channel Display Scale", "?");
            AddInfo("dicom:dicom:image::name", "Multiplex Audio Channels Descr Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Channel Identification Code", "?");
            AddInfo("dicom:dicom:image::name", "Channel Mode", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Station AE Title", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Start Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step End Date", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step End Time", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Performing Physicians Name", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Description", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Protocol Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step ID", "?");
            AddInfo("dicom:dicom:image::name", "Stage Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Performing Physician ID Seq", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Station Name", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Location", "?");
            AddInfo("dicom:dicom:image::name", "Pre Medication", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Status", "?");
            AddInfo("dicom:dicom:image::name", "Local Namespace Entity ID", "?");
            AddInfo("dicom:dicom:image::name", "Universal Entity ID", "?");
            AddInfo("dicom:dicom:image::name", "Universal Entity ID Type", "?");
            AddInfo("dicom:dicom:image::name", "Identifier Type Code", "?");
            AddInfo("dicom:dicom:image::name", "Assigning Facility Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Non Image Composite SOP Seq", "?");
            AddInfo("dicom:dicom:image::name", "Performed Station AE Title", "?");
            AddInfo("dicom:dicom:image::name", "Performed Station Name", "?");
            AddInfo("dicom:dicom:image::name", "Performed Location", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step Start Date", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step End Date", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step End Time", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step Status", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step ID", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Step Description", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Type Description", "?");
            AddInfo("dicom:dicom:image::name", "Performed Protocol Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Protocol Type", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Step Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Request Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Comments On Performed Procedure Step", "?");
            AddInfo("dicom:dicom:image::name", "Proc Step Discontinue Reason Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Quantity Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Quantity", "?");
            AddInfo("dicom:dicom:image::name", "Measuring Units Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Billing Item Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Total Time Of Fluoroscopy", "?");
            AddInfo("dicom:dicom:image::name", "Total Number Of Exposures", "?");
            AddInfo("dicom:dicom:image::name", "Entrance Dose", "?");
            AddInfo("dicom:dicom:image::name", "Exposed Area", "?");
            AddInfo("dicom:dicom:image::name", "Distance Source To Entrance", "?");
            AddInfo("dicom:dicom:image::name", "Distance Source To Support", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Dose Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Comments On Radiation Dose", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Output", "?");
            AddInfo("dicom:dicom:image::name", "Half Value Layer", "?");
            AddInfo("dicom:dicom:image::name", "Organ Dose", "?");
            AddInfo("dicom:dicom:image::name", "Organ Exposed", "?");
            AddInfo("dicom:dicom:image::name", "Billing Procedure Step Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Film Consumption Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Billing Supplies And Devices Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Procedure Step Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Series Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Comments On Scheduled Procedure Step", "?");
            AddInfo("dicom:dicom:image::name", "Protocol Context Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Content Item Modifier Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Accession Number", "?");
            AddInfo("dicom:dicom:image::name", "Container Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Container Description", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Description Sequence Trial", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Description Trial", "?");
            AddInfo("dicom:dicom:image::name", "Specimen UID", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Context Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Acquisition Context Description", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specimen Short Description", "?");
            AddInfo("dicom:dicom:image::name", "Slide Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Image Center Point Coordinates Seq", "?");
            AddInfo("dicom:dicom:image::name", "X Offset In Slide Coordinate System", "?");
            AddInfo("dicom:dicom:image::name", "Y Offset In Slide Coordinate System", "?");
            AddInfo("dicom:dicom:image::name", "Z Offset In Slide Coordinate System", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Spacing Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Coordinate System Axis Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Measurement Units Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Vital Stain Code Sequence Trial", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure ID", "?");
            AddInfo("dicom:dicom:image::name", "Reason For Requested Procedure", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure Priority", "?");
            AddInfo("dicom:dicom:image::name", "Patient Transport Arrangements", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure Location", "?");
            AddInfo("dicom:dicom:image::name", "Placer Order Number-Procedure", "?");
            AddInfo("dicom:dicom:image::name", "Filler Order Number-Procedure", "?");
            AddInfo("dicom:dicom:image::name", "Confidentiality Code", "?");
            AddInfo("dicom:dicom:image::name", "Reporting Priority", "?");
            AddInfo("dicom:dicom:image::name", "Reason For Requested Procedure Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Names Of Intended Recipients Of Results", "?");
            AddInfo("dicom:dicom:image::name", "Intended Recipients Of Results ID Seq", "?");
            AddInfo("dicom:dicom:image::name", "Person Identification Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Person Address", "?");
            AddInfo("dicom:dicom:image::name", "Person Telephone Numbers", "?");
            AddInfo("dicom:dicom:image::name", "Requested Procedure Comments", "?");
            AddInfo("dicom:dicom:image::name", "Reason For Imaging Service Request", "?");
            AddInfo("dicom:dicom:image::name", "Issue Date Of Imaging Service Request", "?");
            AddInfo("dicom:dicom:image::name", "Issue Time Of Imaging Service Request", "?");
            AddInfo("dicom:dicom:image::name", "Placer Order Num-Imaging Service Req", "?");
            AddInfo("dicom:dicom:image::name", "Filler Order Num-Imaging Service Req", "?");
            AddInfo("dicom:dicom:image::name", "Order Entered By", "?");
            AddInfo("dicom:dicom:image::name", "Order Enterer Location", "?");
            AddInfo("dicom:dicom:image::name", "Order Callback Phone Number", "?");
            AddInfo("dicom:dicom:image::name", "Placer Order Num-Imaging Service Req", "?");
            AddInfo("dicom:dicom:image::name", "Filler Order Num-Imaging Service Req", "?");
            AddInfo("dicom:dicom:image::name", "Imaging Service Request Comments", "?");
            AddInfo("dicom:dicom:image::name", "Confidentiality On Patient Data Descr", "?");
            AddInfo("dicom:dicom:image::name", "Gen Purpose Scheduled Proc Step Status", "?");
            AddInfo("dicom:dicom:image::name", "Gen Purpose Performed Proc Step Status", "?");
            AddInfo("dicom:dicom:image::name", "Gen Purpose Sched Proc Step Priority", "?");
            AddInfo("dicom:dicom:image::name", "Sched Processing Applications Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Sched Procedure Step Start Date And Time", "?");
            AddInfo("dicom:dicom:image::name", "Multiple Copies Flag", "?");
            AddInfo("dicom:dicom:image::name", "Performed Processing Apps Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Human Performer Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Sched Proc Step Modification Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Expected Completion Date And Time", "?");
            AddInfo("dicom:dicom:image::name", "Resulting Gen Purpose Perf Proc Step Seq", "?");
            AddInfo("dicom:dicom:image::name", "Ref Gen Purpose Sched Proc Step Seq", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Workitem Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Workitem Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Input Availability Flag", "?");
            AddInfo("dicom:dicom:image::name", "Input Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Relevant Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ref Gen Pur Sched Proc Step Trans UID", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Station Name Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Station Class Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Sched Station Geographic Loc Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Performed Station Name Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Station Class Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Station Geog Loc Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Requested Subsequent Work Item Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Non DICOM Output Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Output Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Human Performers Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Actual Human Performers Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Human Performers Organization", "?");
            AddInfo("dicom:dicom:image::name", "Human Performer Name", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Handling", "?");
            AddInfo("dicom:dicom:image::name", "Entrance Dose In Milli Gy", "?");
            AddInfo("dicom:dicom:image::name", "Ref Image Real World Value Mapping Seq", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value Mapping Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Value Mapping Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "LUT Label", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value Last Value Mapped", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value LUT Data", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value First Value Mapped", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value Intercept", "?");
            AddInfo("dicom:dicom:image::name", "Real World Value Slope", "?");
            AddInfo("dicom:dicom:image::name", "Relationship Type", "?");
            AddInfo("dicom:dicom:image::name", "Verifying Organization", "?");
            AddInfo("dicom:dicom:image::name", "Verification Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Observation Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Value Type", "?");
            AddInfo("dicom:dicom:image::name", "Concept Name Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Continuity Of Content", "?");
            AddInfo("dicom:dicom:image::name", "Verifying Observer Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Verifying Observer Name", "?");
            AddInfo("dicom:dicom:image::name", "Author Observer Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Participant Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Custodial Organization Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Participation Type", "?");
            AddInfo("dicom:dicom:image::name", "Participation Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Observer Type", "?");
            AddInfo("dicom:dicom:image::name", "Verifying Observer Ident Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Equivalent CDA Document Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Waveform Channels", "?");
            AddInfo("dicom:dicom:image::name", "Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Date", "?");
            AddInfo("dicom:dicom:image::name", "Time", "?");
            AddInfo("dicom:dicom:image::name", "Person Name", "?");
            AddInfo("dicom:dicom:image::name", "UID", "?");
            AddInfo("dicom:dicom:image::name", "Temporal Range Type", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Sample Positions", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Frame Numbers", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Time Offsets", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Text Value", "?");
            AddInfo("dicom:dicom:image::name", "Concept Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Purpose Of Reference Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Group Number", "?");
            AddInfo("dicom:dicom:image::name", "Modifier Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Measured Value Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Numeric Value Qualifier Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Numeric Value", "?");
            AddInfo("dicom:dicom:image::name", "Address Trial", "?");
            AddInfo("dicom:dicom:image::name", "Telephone Number Trial", "?");
            AddInfo("dicom:dicom:image::name", "Predecessor Documents Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Request Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Performed Procedure Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Current Requested Proc Evidence Seq", "?");
            AddInfo("dicom:dicom:image::name", "Pertinent Other Evidence Sequence", "?");
            AddInfo("dicom:dicom:image::name", "HL7 Structured Document Ref Seq", "?");
            AddInfo("dicom:dicom:image::name", "Completion Flag", "?");
            AddInfo("dicom:dicom:image::name", "Completion Flag Description", "?");
            AddInfo("dicom:dicom:image::name", "Verification Flag", "?");
            AddInfo("dicom:dicom:image::name", "Archive Requested", "?");
            AddInfo("dicom:dicom:image::name", "Preliminary Flag", "?");
            AddInfo("dicom:dicom:image::name", "Content Template Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Identical Documents Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Template Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Template Version", "?");
            AddInfo("dicom:dicom:image::name", "Template Local Version", "?");
            AddInfo("dicom:dicom:image::name", "Template Extension Flag", "?");
            AddInfo("dicom:dicom:image::name", "Template Extension Organization UID", "?");
            AddInfo("dicom:dicom:image::name", "Template Extension Creator UID", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Content Item Identifier", "?");
            AddInfo("dicom:dicom:image::name", "HL7 Instance Identifier", "?");
            AddInfo("dicom:dicom:image::name", "HL7 Document Effective Time", "?");
            AddInfo("dicom:dicom:image::name", "HL7 Document Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Retrieve URI", "?");
            AddInfo("dicom:dicom:image::name", "Retrieve Location UID", "?");
            AddInfo("dicom:dicom:image::name", "Document Title", "?");
            AddInfo("dicom:dicom:image::name", "Encapsulated Document", "?");
            AddInfo("dicom:dicom:image::name", "MIME Type Of Encapsulated Document", "?");
            AddInfo("dicom:dicom:image::name", "Source Instance Sequence", "?");
            AddInfo("dicom:dicom:image::name", "List Of MIME Types", "?");
            AddInfo("dicom:dicom:image::name", "Bitmap Of Prescan Options", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Offset In X", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Offset In Y", "?");
            AddInfo("dicom:dicom:image::name", "Gradient Offset In Z", "?");
            AddInfo("dicom:dicom:image::name", "Img Is Original Or Unoriginal", "?");
            AddInfo("dicom:dicom:image::name", "Number Of EPI Shots", "?");
            AddInfo("dicom:dicom:image::name", "Views Per Segment", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Rate Bpm", "?");
            AddInfo("dicom:dicom:image::name", "Respiratory Trigger Point", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Receiver Used", "?");
            AddInfo("dicom:dicom:image::name", "Peak Rate Of Change Of Gradient Field", "?");
            AddInfo("dicom:dicom:image::name", "Limits In Units Of Percent", "?");
            AddInfo("dicom:dicom:image::name", "PSD Estimated Limit", "?");
            AddInfo("dicom:dicom:image::name", "PSD Estimated Limit In Tesla Per Second", "?");
            AddInfo("dicom:dicom:image::name", "Saravghead", "?");
            AddInfo("dicom:dicom:image::name", "Window Value", "?");
            AddInfo("dicom:dicom:image::name", "Total Input Views", "?");
            AddInfo("dicom:dicom:image::name", "X-Ray Chain", "?");
            AddInfo("dicom:dicom:image::name", "Decon Kernel Parameters", "?");
            AddInfo("dicom:dicom:image::name", "Calibration Parameters", "?");
            AddInfo("dicom:dicom:image::name", "Total Output Views", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Overranges", "?");
            AddInfo("dicom:dicom:image::name", "IBH Image Scale Factors", "?");
            AddInfo("dicom:dicom:image::name", "BBH Coefficients", "?");
            AddInfo("dicom:dicom:image::name", "Number Of BBH Chains To Blend", "?");
            AddInfo("dicom:dicom:image::name", "Starting Channel Number", "?");
            AddInfo("dicom:dicom:image::name", "Ppscan Parameters", "?");
            AddInfo("dicom:dicom:image::name", "GE Image Integrity", "?");
            AddInfo("dicom:dicom:image::name", "Level Value", "?");
            AddInfo("dicom:dicom:image::name", "Delta Start Time", "?");
            AddInfo("dicom:dicom:image::name", "Max Overranges In A View", "?");
            AddInfo("dicom:dicom:image::name", "Avg Overranges All Views", "?");
            AddInfo("dicom:dicom:image::name", "Corrected After Glow Terms", "?");
            AddInfo("dicom:dicom:image::name", "Reference Channels", "?");
            AddInfo("dicom:dicom:image::name", "No Views Ref Chans Blocked", "?");
            AddInfo("dicom:dicom:image::name", "Scan Pitch Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Unique Image Iden", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Tables", "?");
            AddInfo("dicom:dicom:image::name", "User Defined Data", "?");
            AddInfo("dicom:dicom:image::name", "Private Scan Options", "?");
            AddInfo("dicom:dicom:image::name", "Effective Echo Spacing", "?");
            AddInfo("dicom:dicom:image::name", "String Slop Field 1", "?");
            AddInfo("dicom:dicom:image::name", "String Slop Field 2", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Type", "?");
            AddInfo("dicom:dicom:image::name", "RA Cord Of Target Recon Center", "?");
            AddInfo("dicom:dicom:image::name", "Raw Data Type", "?");
            AddInfo("dicom:dicom:image::name", "Neg Scanspacing", "?");
            AddInfo("dicom:dicom:image::name", "Offset Frequency", "?");
            AddInfo("dicom:dicom:image::name", "User Usage Tag", "?");
            AddInfo("dicom:dicom:image::name", "User Fill Map MSW", "?");
            AddInfo("dicom:dicom:image::name", "User Fill Map LSW", "?");
            AddInfo("dicom:dicom:image::name", "User 25-48", "?");
            AddInfo("dicom:dicom:image::name", "Slop Int 6-9", "?");
            AddInfo("dicom:dicom:image::name", "Trigger On Position", "?");
            AddInfo("dicom:dicom:image::name", "Degree Of Rotation", "?");
            AddInfo("dicom:dicom:image::name", "DAS Trigger Source", "?");
            AddInfo("dicom:dicom:image::name", "DAS Fpa Gain", "?");
            AddInfo("dicom:dicom:image::name", "DAS Output Source", "?");
            AddInfo("dicom:dicom:image::name", "DAS Ad Input", "?");
            AddInfo("dicom:dicom:image::name", "DAS Cal Mode", "?");
            AddInfo("dicom:dicom:image::name", "DAS Cal Frequency", "?");
            AddInfo("dicom:dicom:image::name", "DAS Reg Xm", "?");
            AddInfo("dicom:dicom:image::name", "DAS Auto Zero", "?");
            AddInfo("dicom:dicom:image::name", "Starting Channel Of View", "?");
            AddInfo("dicom:dicom:image::name", "DAS Xm Pattern", "?");
            AddInfo("dicom:dicom:image::name", "TGGC Trigger Mode", "?");
            AddInfo("dicom:dicom:image::name", "Start Scan To Xray On Delay", "?");
            AddInfo("dicom:dicom:image::name", "Duration Of Xray On", "?");
            AddInfo("dicom:dicom:image::name", "Slop Int 10-17", "?");
            AddInfo("dicom:dicom:image::name", "Scanner Study Entity UID", "?");
            AddInfo("dicom:dicom:image::name", "Scanner Study ID", "?");
            AddInfo("dicom:dicom:image::name", "Scanner Table Entry", "?");
            AddInfo("dicom:dicom:image::name", "Product Package Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Substance Administration Approval", "?");
            AddInfo("dicom:dicom:image::name", "Approval Status Further Description", "?");
            AddInfo("dicom:dicom:image::name", "Approval Status Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Product Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Product Name", "?");
            AddInfo("dicom:dicom:image::name", "Product Description", "?");
            AddInfo("dicom:dicom:image::name", "Product Lot Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Product Expiration Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Substance Administration Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Substance Administration Notes", "?");
            AddInfo("dicom:dicom:image::name", "Substance Administration Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Product Parameter Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Substance Admin Parameter Seq", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Macro Rows In Detector", "?");
            AddInfo("dicom:dicom:image::name", "Macro Width At ISO Center", "?");
            AddInfo("dicom:dicom:image::name", "DAS Type", "?");
            AddInfo("dicom:dicom:image::name", "DAS Gain", "?");
            AddInfo("dicom:dicom:image::name", "DAS Temperature", "?");
            AddInfo("dicom:dicom:image::name", "Table Direction In Or Out", "?");
            AddInfo("dicom:dicom:image::name", "Z Smoothing Factor", "?");
            AddInfo("dicom:dicom:image::name", "View Weighting Mode", "?");
            AddInfo("dicom:dicom:image::name", "Sigma Row Number Which Rows Were Used", "?");
            AddInfo("dicom:dicom:image::name", "Minimum Das Value Found In The Scan Data", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Offset Shift Value Used", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views Shifted", "?");
            AddInfo("dicom:dicom:image::name", "Z Tracking Flag", "?");
            AddInfo("dicom:dicom:image::name", "Mean Z Error", "?");
            AddInfo("dicom:dicom:image::name", "Z Tracking Maximum Error", "?");
            AddInfo("dicom:dicom:image::name", "Starting View For Row 2a", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views In Row 2a", "?");
            AddInfo("dicom:dicom:image::name", "Starting View For Row 1a", "?");
            AddInfo("dicom:dicom:image::name", "Sigma Mode", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views In Row 1a", "?");
            AddInfo("dicom:dicom:image::name", "Starting View For Row 2b", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views In Row 2b", "?");
            AddInfo("dicom:dicom:image::name", "Starting View For Row 1b", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Views In Row 1b", "?");
            AddInfo("dicom:dicom:image::name", "Air Filter Calibration Date", "?");
            AddInfo("dicom:dicom:image::name", "Air Filter Calibration Time", "?");
            AddInfo("dicom:dicom:image::name", "Phantom Calibration Date", "?");
            AddInfo("dicom:dicom:image::name", "Phantom Calibration Time", "?");
            AddInfo("dicom:dicom:image::name", "Z Slope Calibration Date", "?");
            AddInfo("dicom:dicom:image::name", "Z Slope Calibration Time", "?");
            AddInfo("dicom:dicom:image::name", "Crosstalk Calibration Date", "?");
            AddInfo("dicom:dicom:image::name", "Crosstalk Calibration Time", "?");
            AddInfo("dicom:dicom:image::name", "Iterbone Option Flag", "?");
            AddInfo("dicom:dicom:image::name", "Peristaltic Flag Option", "?");
            AddInfo("dicom:dicom:image::name", "Lens Description", "?");
            AddInfo("dicom:dicom:image::name", "Right Lens Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Left Lens Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Cylinder Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Prism Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Horizontal Prism Power", "?");
            AddInfo("dicom:dicom:image::name", "Horizontal Prism Base", "?");
            AddInfo("dicom:dicom:image::name", "Vertical Prism Power", "?");
            AddInfo("dicom:dicom:image::name", "Vertical Prism Base", "?");
            AddInfo("dicom:dicom:image::name", "Lens Segment Type", "?");
            AddInfo("dicom:dicom:image::name", "Optical Transmittance", "?");
            AddInfo("dicom:dicom:image::name", "Channel Width", "?");
            AddInfo("dicom:dicom:image::name", "Pupil Size", "?");
            AddInfo("dicom:dicom:image::name", "Corneal Size", "?");
            AddInfo("dicom:dicom:image::name", "Distance Pupillary Distance", "?");
            AddInfo("dicom:dicom:image::name", "Near Pupillary Distance", "?");
            AddInfo("dicom:dicom:image::name", "Other Pupillary Distance", "?");
            AddInfo("dicom:dicom:image::name", "Radius Of Curvature", "?");
            AddInfo("dicom:dicom:image::name", "Keratometric Power", "?");
            AddInfo("dicom:dicom:image::name", "Keratometric Axis", "?");
            AddInfo("dicom:dicom:image::name", "Background Color", "?");
            AddInfo("dicom:dicom:image::name", "Optotype", "?");
            AddInfo("dicom:dicom:image::name", "Optotype Presentation", "?");
            AddInfo("dicom:dicom:image::name", "Add Near Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Add Intermediate Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Add Other Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Add Power", "?");
            AddInfo("dicom:dicom:image::name", "Viewing Distance", "?");
            AddInfo("dicom:dicom:image::name", "Viewing Distance Type", "?");
            AddInfo("dicom:dicom:image::name", "Visual Acuity Modifiers", "?");
            AddInfo("dicom:dicom:image::name", "Decimal Visual Acuity", "?");
            AddInfo("dicom:dicom:image::name", "Optotype Detailed Definition", "?");
            AddInfo("dicom:dicom:image::name", "Sphere Power", "?");
            AddInfo("dicom:dicom:image::name", "Cylinder Power", "?");
            AddInfo("dicom:dicom:image::name", "Calibration Image", "?");
            AddInfo("dicom:dicom:image::name", "Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Device Length", "?");
            AddInfo("dicom:dicom:image::name", "Container Component Width", "?");
            AddInfo("dicom:dicom:image::name", "Device Diameter", "?");
            AddInfo("dicom:dicom:image::name", "Device Diameter Units", "?");
            AddInfo("dicom:dicom:image::name", "Device Volume", "?");
            AddInfo("dicom:dicom:image::name", "Inter Marker Distance", "?");
            AddInfo("dicom:dicom:image::name", "Container Component ID", "?");
            AddInfo("dicom:dicom:image::name", "Device Description", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Energy Windows", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Range Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Lower Limit", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Upper Limit", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Information Seq", "?");
            AddInfo("dicom:dicom:image::name", "Residual Syringe Counts", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Name", "?");
            AddInfo("dicom:dicom:image::name", "Detector Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Detectors", "?");
            AddInfo("dicom:dicom:image::name", "Detector Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Phase Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Phases", "?");
            AddInfo("dicom:dicom:image::name", "Phase Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Frames In Phase", "?");
            AddInfo("dicom:dicom:image::name", "Phase Delay", "?");
            AddInfo("dicom:dicom:image::name", "Pause Between Frames", "?");
            AddInfo("dicom:dicom:image::name", "Phase Description", "?");
            AddInfo("dicom:dicom:image::name", "Rotation Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Rotations", "?");
            AddInfo("dicom:dicom:image::name", "Rotation Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Frames In Rotation", "?");
            AddInfo("dicom:dicom:image::name", "RR Interval Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of RR Intervals", "?");
            AddInfo("dicom:dicom:image::name", "Gated Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Data Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Time Slot Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Time Slots", "?");
            AddInfo("dicom:dicom:image::name", "Time Slot Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Time Slot Time", "?");
            AddInfo("dicom:dicom:image::name", "Slice Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Slices", "?");
            AddInfo("dicom:dicom:image::name", "Angular View Vector", "?");
            AddInfo("dicom:dicom:image::name", "Time Slice Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Time Slices", "?");
            AddInfo("dicom:dicom:image::name", "Start Angle", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Detector Motion", "?");
            AddInfo("dicom:dicom:image::name", "Trigger Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Triggers In Phase", "?");
            AddInfo("dicom:dicom:image::name", "View Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "View Modifier Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Radionuclide Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Administration Route Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Radiopharmaceutical Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Calibration Data Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Energy Window Number", "?");
            AddInfo("dicom:dicom:image::name", "Image ID", "?");
            AddInfo("dicom:dicom:image::name", "Patient Orientation Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Orientation Modifier Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Patient Gantry Relationship Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Slice Progression Direction", "?");
            AddInfo("dicom:dicom:image::name", "Series Type", "?");
            AddInfo("dicom:dicom:image::name", "Units", "?");
            AddInfo("dicom:dicom:image::name", "Counts Source", "?");
            AddInfo("dicom:dicom:image::name", "Reprojection Method", "?");
            AddInfo("dicom:dicom:image::name", "Randoms Correction Method", "?");
            AddInfo("dicom:dicom:image::name", "Attenuation Correction Method", "?");
            AddInfo("dicom:dicom:image::name", "Decay Correction", "?");
            AddInfo("dicom:dicom:image::name", "Reconstruction Method", "?");
            AddInfo("dicom:dicom:image::name", "Detector Lines Of Response Used", "?");
            AddInfo("dicom:dicom:image::name", "Scatter Correction Method", "?");
            AddInfo("dicom:dicom:image::name", "Axial Acceptance", "?");
            AddInfo("dicom:dicom:image::name", "Axial Mash", "?");
            AddInfo("dicom:dicom:image::name", "Transverse Mash", "?");
            AddInfo("dicom:dicom:image::name", "Detector Element Size", "?");
            AddInfo("dicom:dicom:image::name", "Coincidence Window Width", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Counts Type", "?");
            AddInfo("dicom:dicom:image::name", "Frame Reference Time", "?");
            AddInfo("dicom:dicom:image::name", "Primary Counts Accumulated", "?");
            AddInfo("dicom:dicom:image::name", "Secondary Counts Accumulated", "?");
            AddInfo("dicom:dicom:image::name", "Slice Sensitivity Factor", "?");
            AddInfo("dicom:dicom:image::name", "Decay Factor", "?");
            AddInfo("dicom:dicom:image::name", "Dose Calibration Factor", "?");
            AddInfo("dicom:dicom:image::name", "Scatter Fraction Factor", "?");
            AddInfo("dicom:dicom:image::name", "Dead Time Factor", "?");
            AddInfo("dicom:dicom:image::name", "Image Index", "?");
            AddInfo("dicom:dicom:image::name", "Counts Included", "?");
            AddInfo("dicom:dicom:image::name", "Dead Time Correction Flag", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Number Of Bins", "?");
            AddInfo("dicom:dicom:image::name", "Histogram First Bin Value", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Last Bin Value", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Bin Width", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Explanation", "?");
            AddInfo("dicom:dicom:image::name", "Histogram Data", "?");
            AddInfo("dicom:dicom:image::name", "Segmentation Type", "?");
            AddInfo("dicom:dicom:image::name", "Segment Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Segmented Property Category Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Segment Number", "?");
            AddInfo("dicom:dicom:image::name", "Segment Label", "?");
            AddInfo("dicom:dicom:image::name", "Segment Description", "?");
            AddInfo("dicom:dicom:image::name", "Segment Algorithm Type", "?");
            AddInfo("dicom:dicom:image::name", "Segment Algorithm Name", "?");
            AddInfo("dicom:dicom:image::name", "Segment Identification Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Segment Number", "?");
            AddInfo("dicom:dicom:image::name", "Recommended Display Grayscale Value", "?");
            AddInfo("dicom:dicom:image::name", "Recommended Display CIE Lab Value", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Fractional Value", "?");
            AddInfo("dicom:dicom:image::name", "Segmented Property Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Segmentation Fractional Type", "?");
            AddInfo("dicom:dicom:image::name", "Deformable Registration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Frame Of Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "Deformable Registration Grid Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Grid Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Grid Resolution", "?");
            AddInfo("dicom:dicom:image::name", "Vector Grid Data", "?");
            AddInfo("dicom:dicom:image::name", "Pre Deformation Matrix Regist Seq", "?");
            AddInfo("dicom:dicom:image::name", "Post Deformation Matrix Regist Seq", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Surfaces", "?");
            AddInfo("dicom:dicom:image::name", "Surface Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Surface Number", "?");
            AddInfo("dicom:dicom:image::name", "Surface Comments", "?");
            AddInfo("dicom:dicom:image::name", "Surface Processing", "?");
            AddInfo("dicom:dicom:image::name", "Surface Processing Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Finite Volume", "?");
            AddInfo("dicom:dicom:image::name", "Manifold", "?");
            AddInfo("dicom:dicom:image::name", "Surface Points Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Surface Points", "?");
            AddInfo("dicom:dicom:image::name", "Point Coordinates Data", "?");
            AddInfo("dicom:dicom:image::name", "Point Position Accuracy", "?");
            AddInfo("dicom:dicom:image::name", "Mean Point Distance", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Point Distance", "?");
            AddInfo("dicom:dicom:image::name", "Axis Of Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Center Of Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Vectors", "?");
            AddInfo("dicom:dicom:image::name", "Vector Dimensionality", "?");
            AddInfo("dicom:dicom:image::name", "Vector Accuracy", "?");
            AddInfo("dicom:dicom:image::name", "Vector Coordinate Data", "?");
            AddInfo("dicom:dicom:image::name", "Triangle Point Index List", "?");
            AddInfo("dicom:dicom:image::name", "Edge Point Index List", "?");
            AddInfo("dicom:dicom:image::name", "Vertex Point Index List", "?");
            AddInfo("dicom:dicom:image::name", "Triangle Strip Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Triangle Fan Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Line Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Primitive Point Index List", "?");
            AddInfo("dicom:dicom:image::name", "Surface Count", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Family Code Sequ", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Version", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Parameters", "?");
            AddInfo("dicom:dicom:image::name", "Facet Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Algorithm Name", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Annotation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer", "?");
            AddInfo("dicom:dicom:image::name", "Bounding Box Annotation Units", "?");
            AddInfo("dicom:dicom:image::name", "Anchor Point Annotation Units", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Annotation Units", "?");
            AddInfo("dicom:dicom:image::name", "Unformatted Text Value", "?");
            AddInfo("dicom:dicom:image::name", "Text Object Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Object Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Bounding Box Top Left Hand Corner", "?");
            AddInfo("dicom:dicom:image::name", "Bounding Box Bottom Right Hand Corner", "?");
            AddInfo("dicom:dicom:image::name", "Bounding Box Text Horiz Justification", "?");
            AddInfo("dicom:dicom:image::name", "Anchor Point", "?");
            AddInfo("dicom:dicom:image::name", "Anchor Point Visibility", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Graphic Points", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Data", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Type", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Filled", "?");
            AddInfo("dicom:dicom:image::name", "Image Rotation Retired", "?");
            AddInfo("dicom:dicom:image::name", "Image Horizontal Flip", "?");
            AddInfo("dicom:dicom:image::name", "Image Rotation", "?");
            AddInfo("dicom:dicom:image::name", "Displayed Area Top Left Trial", "?");
            AddInfo("dicom:dicom:image::name", "Displayed Area Bottom Right Trial", "?");
            AddInfo("dicom:dicom:image::name", "Displayed Area Top Left", "?");
            AddInfo("dicom:dicom:image::name", "Displayed Area Bottom Right", "?");
            AddInfo("dicom:dicom:image::name", "Displayed Area Selection Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Order", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Rec Display Grayscl Value", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Rec Display RGB Value", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Description", "?");
            AddInfo("dicom:dicom:image::name", "Content Label", "?");
            AddInfo("dicom:dicom:image::name", "Content Description", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Creation Date", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Creation Time", "?");
            AddInfo("dicom:dicom:image::name", "Content Creator Name", "?");
            AddInfo("dicom:dicom:image::name", "Content Creator ID Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Size Mode", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Pixel Aspect Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Presentation Pixel Mag Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Shape Type", "?");
            AddInfo("dicom:dicom:image::name", "Registration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Matrix Registration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Matrix Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Ref Transformation Matrix Type", "?");
            AddInfo("dicom:dicom:image::name", "Registration Type Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial Description", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial Identifier", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial Identifier Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contour Uncertainty Radius", "?");
            AddInfo("dicom:dicom:image::name", "Used Fiducials Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Coordinates Data Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial UID", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial Set Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fiducial Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Graphic Layer Recom Display CIE Lab Val", "?");
            AddInfo("dicom:dicom:image::name", "Blending Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Relative Opacity", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Spatial Registration Seq", "?");
            AddInfo("dicom:dicom:image::name", "Blending Position", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Name", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Description", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Level", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Creator", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Creation Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol Definition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol User ID Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Hanging Protocol User Group Name", "?");
            AddInfo("dicom:dicom:image::name", "Source Hanging Protocol Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Priors Referenced", "?");
            AddInfo("dicom:dicom:image::name", "Image Sets Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Set Selector Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Set Selector Usage Flag", "?");
            AddInfo("dicom:dicom:image::name", "Selector Attribute", "?");
            AddInfo("dicom:dicom:image::name", "Selector Value Number", "?");
            AddInfo("dicom:dicom:image::name", "Time Based Image Sets Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Set Number", "?");
            AddInfo("dicom:dicom:image::name", "Image Set Selector Category", "?");
            AddInfo("dicom:dicom:image::name", "Relative Time", "?");
            AddInfo("dicom:dicom:image::name", "Relative Time Units", "?");
            AddInfo("dicom:dicom:image::name", "Abstract Prior Value", "?");
            AddInfo("dicom:dicom:image::name", "Abstract Prior Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Set Label", "?");
            AddInfo("dicom:dicom:image::name", "Selector Attribute VR", "?");
            AddInfo("dicom:dicom:image::name", "Selector Sequence Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Selector Seq Pointer Private Creator", "?");
            AddInfo("dicom:dicom:image::name", "Selector Attribute Private Creator", "?");
            AddInfo("dicom:dicom:image::name", "Selector AT Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector CS Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector IS Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector LO Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector LT Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector PN Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector SH Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector ST Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector UT Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector DS Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector FD Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector FL Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector UL Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector US Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector SL Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector SS Value", "?");
            AddInfo("dicom:dicom:image::name", "Selector Code Sequence Value", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Screens", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Screen Definition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Vertical Pixels", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Horizontal Pixels", "?");
            AddInfo("dicom:dicom:image::name", "Display Environment Spatial Position", "?");
            AddInfo("dicom:dicom:image::name", "Screen Minimum Grayscale Bit Depth", "?");
            AddInfo("dicom:dicom:image::name", "Screen Minimum Color Bit Depth", "?");
            AddInfo("dicom:dicom:image::name", "Application Maximum Repaint Time", "?");
            AddInfo("dicom:dicom:image::name", "Display Sets Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Number", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Label", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Presentation Group", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Presentation Group Descr", "?");
            AddInfo("dicom:dicom:image::name", "Partial Data Display Handling", "?");
            AddInfo("dicom:dicom:image::name", "Synchronized Scrolling Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Scrolling Group", "?");
            AddInfo("dicom:dicom:image::name", "Navigation Indicator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Navigation Display Set", "?");
            AddInfo("dicom:dicom:image::name", "Reference Display Sets", "?");
            AddInfo("dicom:dicom:image::name", "Image Boxes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Number", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Layout Type", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Tile Horizontal Dimension", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Tile Vertical Dimension", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Scroll Direction", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Small Scroll Type", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Small Scroll Amount", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Large Scroll Type", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Large Scroll Amount", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Overlap Priority", "?");
            AddInfo("dicom:dicom:image::name", "Cine Relative To Real Time", "?");
            AddInfo("dicom:dicom:image::name", "Filter Operations Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Filter By Category", "?");
            AddInfo("dicom:dicom:image::name", "Filter By Attribute Presence", "?");
            AddInfo("dicom:dicom:image::name", "Filter By Operator", "?");
            AddInfo("dicom:dicom:image::name", "Synchronized Image Box List", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Synchronization", "?");
            AddInfo("dicom:dicom:image::name", "Blending Operation Type", "?");
            AddInfo("dicom:dicom:image::name", "Reformatting Operation Type", "?");
            AddInfo("dicom:dicom:image::name", "Reformatting Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Reformatting Interval", "?");
            AddInfo("dicom:dicom:image::name", "Reformatting Op Initial View Dir", "?");
            AddInfo("dicom:dicom:image::name", "Rendering Type 3D", "?");
            AddInfo("dicom:dicom:image::name", "Sorting Operations Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Sort By Category", "?");
            AddInfo("dicom:dicom:image::name", "Sorting Direction", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Patient Orientation", "?");
            AddInfo("dicom:dicom:image::name", "VOI Type", "?");
            AddInfo("dicom:dicom:image::name", "Pseudo Color Type", "?");
            AddInfo("dicom:dicom:image::name", "Show Grayscale Inverted", "?");
            AddInfo("dicom:dicom:image::name", "Show Image True Size Flag", "?");
            AddInfo("dicom:dicom:image::name", "Show Graphic Annotation Flag", "?");
            AddInfo("dicom:dicom:image::name", "Show Patient Demographics Flag", "?");
            AddInfo("dicom:dicom:image::name", "Show Acquisition Techniques Flag", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Horizontal Justification", "?");
            AddInfo("dicom:dicom:image::name", "Display Set Vertical Justification", "?");
            AddInfo("dicom:dicom:image::name", "Unified Procedure Step State", "?");
            AddInfo("dicom:dicom:image::name", "UPS Progress Information Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Unified Procedure Step Progress", "?");
            AddInfo("dicom:dicom:image::name", "Unified Procedure Step Progress Descr", "?");
            AddInfo("dicom:dicom:image::name", "Unified Procedure Step Com URI Seq", "?");
            AddInfo("dicom:dicom:image::name", "Contact URI", "?");
            AddInfo("dicom:dicom:image::name", "Contact Display Name", "?");
            AddInfo("dicom:dicom:image::name", "Beam Task Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Beam Task Type", "?");
            AddInfo("dicom:dicom:image::name", "Beam Order Index", "?");
            AddInfo("dicom:dicom:image::name", "Delivery Verification Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Verification Image Timing", "?");
            AddInfo("dicom:dicom:image::name", "Double Exposure Flag", "?");
            AddInfo("dicom:dicom:image::name", "Double Exposure Ordering", "?");
            AddInfo("dicom:dicom:image::name", "Double Exposure Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Double Exposure Field Delta", "?");
            AddInfo("dicom:dicom:image::name", "Related Reference RT Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "General Machine Verification Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Conventional Machine Verification Seq", "?");
            AddInfo("dicom:dicom:image::name", "Ion Machine Verification Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Failed Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Overridden Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Conventional Control Point Verify Seq", "?");
            AddInfo("dicom:dicom:image::name", "Ion Control Point Verification Seq", "?");
            AddInfo("dicom:dicom:image::name", "Attribute Occurrence Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Attribute Occurrence Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Attribute Item Selector", "?");
            AddInfo("dicom:dicom:image::name", "Attribute Occurrence Private Creator", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Procedure Step Priority", "?");
            AddInfo("dicom:dicom:image::name", "Worklist Label", "?");
            AddInfo("dicom:dicom:image::name", "Procedure Step Label", "?");
            AddInfo("dicom:dicom:image::name", "Scheduled Processing Parameters Seq", "?");
            AddInfo("dicom:dicom:image::name", "Performed Processing Parameters Seq", "?");
            AddInfo("dicom:dicom:image::name", "UPS Performed Procedure Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Related Procedure Step Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Procedure Step Relationship Type", "?");
            AddInfo("dicom:dicom:image::name", "Deletion Lock", "?");
            AddInfo("dicom:dicom:image::name", "Receiving AE", "?");
            AddInfo("dicom:dicom:image::name", "Requesting AE", "?");
            AddInfo("dicom:dicom:image::name", "Reason For Cancellation", "?");
            AddInfo("dicom:dicom:image::name", "SCP Status", "?");
            AddInfo("dicom:dicom:image::name", "Subscription List Status", "?");
            AddInfo("dicom:dicom:image::name", "UPS List Status", "?");
            AddInfo("dicom:dicom:image::name", "Storage Media File Set ID", "?");
            AddInfo("dicom:dicom:image::name", "Storage Media File Set UID", "?");
            AddInfo("dicom:dicom:image::name", "Icon Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Topic Title", "?");
            AddInfo("dicom:dicom:image::name", "Topic Subject", "?");
            AddInfo("dicom:dicom:image::name", "Topic Author", "?");
            AddInfo("dicom:dicom:image::name", "Topic Keywords", "?");
            AddInfo("dicom:dicom:image::name", "SOP Instance Status", "?");
            AddInfo("dicom:dicom:image::name", "SOP Authorization Date And Time", "?");
            AddInfo("dicom:dicom:image::name", "SOP Authorization Comment", "?");
            AddInfo("dicom:dicom:image::name", "Authorization Equipment Cert Number", "?");
            AddInfo("dicom:dicom:image::name", "MACID Number", "?");
            AddInfo("dicom:dicom:image::name", "MAC Calculation Transfer Syntax UID", "?");
            AddInfo("dicom:dicom:image::name", "MAC Algorithm", "?");
            AddInfo("dicom:dicom:image::name", "Data Elements Signed", "?");
            AddInfo("dicom:dicom:image::name", "Digital Signature UID", "?");
            AddInfo("dicom:dicom:image::name", "Digital Signature Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Certificate Type", "?");
            AddInfo("dicom:dicom:image::name", "Certificate Of Signer", "?");
            AddInfo("dicom:dicom:image::name", "Signature", "?");
            AddInfo("dicom:dicom:image::name", "Certified Timestamp Type", "?");
            AddInfo("dicom:dicom:image::name", "Certified Timestamp", "?");
            AddInfo("dicom:dicom:image::name", "Digital Signature Purpose Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Digital Signature Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced SOP Instance MAC Seq", "?");
            AddInfo("dicom:dicom:image::name", "MAC", "?");
            AddInfo("dicom:dicom:image::name", "Encrypted Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Encrypted Content Transfer Syntax UID", "?");
            AddInfo("dicom:dicom:image::name", "Encrypted Content", "?");
            AddInfo("dicom:dicom:image::name", "Modified Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Original Attributes Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Attribute Modification Date Time", "?");
            AddInfo("dicom:dicom:image::name", "Modifying System", "?");
            AddInfo("dicom:dicom:image::name", "Source Of Previous Values", "?");
            AddInfo("dicom:dicom:image::name", "Reason For The Attribute Modification", "?");
            AddInfo("dicom:dicom:image::name", "Escape Triplet", "?");
            AddInfo("dicom:dicom:image::name", "Run Length Triplet", "?");
            AddInfo("dicom:dicom:image::name", "Huffman Table Size", "?");
            AddInfo("dicom:dicom:image::name", "Huffman Table Triplet", "?");
            AddInfo("dicom:dicom:image::name", "Shift Table Size", "?");
            AddInfo("dicom:dicom:image::name", "Shift Table Triplet", "?");
            AddInfo("dicom:dicom:image::name", "Zonal Map", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Copies", "?");
            AddInfo("dicom:dicom:image::name", "Printer Configuration Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Print Priority", "?");
            AddInfo("dicom:dicom:image::name", "Medium Type", "?");
            AddInfo("dicom:dicom:image::name", "Film Destination", "?");
            AddInfo("dicom:dicom:image::name", "Film Session Label", "?");
            AddInfo("dicom:dicom:image::name", "Memory Allocation", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Memory Allocation", "?");
            AddInfo("dicom:dicom:image::name", "Color Image Printing Flag", "?");
            AddInfo("dicom:dicom:image::name", "Collation Flag", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Flag", "?");
            AddInfo("dicom:dicom:image::name", "Image Overlay Flag", "?");
            AddInfo("dicom:dicom:image::name", "Presentation LUT Flag", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Presentation LUT Flag", "?");
            AddInfo("dicom:dicom:image::name", "Memory Bit Depth", "?");
            AddInfo("dicom:dicom:image::name", "Printing Bit Depth", "?");
            AddInfo("dicom:dicom:image::name", "Media Installed Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Other Media Available Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Supported Image Display Format Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Film Box Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Stored Print Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Display Format", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Display Format ID", "?");
            AddInfo("dicom:dicom:image::name", "Film Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Film Size ID", "?");
            AddInfo("dicom:dicom:image::name", "Printer Resolution ID", "?");
            AddInfo("dicom:dicom:image::name", "Default Printer Resolution ID", "?");
            AddInfo("dicom:dicom:image::name", "Magnification Type", "?");
            AddInfo("dicom:dicom:image::name", "Smoothing Type", "?");
            AddInfo("dicom:dicom:image::name", "Default Magnification Type", "?");
            AddInfo("dicom:dicom:image::name", "Other Magnification Types Available", "?");
            AddInfo("dicom:dicom:image::name", "Default Smoothing Type", "?");
            AddInfo("dicom:dicom:image::name", "Other Smoothing Types Available", "?");
            AddInfo("dicom:dicom:image::name", "Border Density", "?");
            AddInfo("dicom:dicom:image::name", "Empty Image Density", "?");
            AddInfo("dicom:dicom:image::name", "Min Density", "?");
            AddInfo("dicom:dicom:image::name", "Max Density", "?");
            AddInfo("dicom:dicom:image::name", "Trim", "?");
            AddInfo("dicom:dicom:image::name", "Configuration Information", "?");
            AddInfo("dicom:dicom:image::name", "Configuration Information Descr", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Collated Films", "?");
            AddInfo("dicom:dicom:image::name", "Illumination", "?");
            AddInfo("dicom:dicom:image::name", "Reflected Ambient Light", "?");
            AddInfo("dicom:dicom:image::name", "Printer Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Film Session Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Image Box Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Basic Annotation Box Seq", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Position", "?");
            AddInfo("dicom:dicom:image::name", "Polarity", "?");
            AddInfo("dicom:dicom:image::name", "Requested Image Size", "?");
            AddInfo("dicom:dicom:image::name", "Requested Decimate-Crop Behavior", "?");
            AddInfo("dicom:dicom:image::name", "Requested Resolution ID", "?");
            AddInfo("dicom:dicom:image::name", "Requested Image Size Flag", "?");
            AddInfo("dicom:dicom:image::name", "Decimate Crop Result", "?");
            AddInfo("dicom:dicom:image::name", "Basic Grayscale Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Basic Color Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Image Overlay Box Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced VOILUT Box Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Position", "?");
            AddInfo("dicom:dicom:image::name", "Text String", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Overlay Plane Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Overlay Plane Groups", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Pixel Data Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Magnification Type", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Smoothing Type", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Or Image Magnification", "?");
            AddInfo("dicom:dicom:image::name", "Magnify To Number Of Columns", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Foreground Density", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Background Density", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Mode", "?");
            AddInfo("dicom:dicom:image::name", "Threshold Density", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Image Box Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Presentation LUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Presentation LUT Shape", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Presentation LUT Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Print Job ID", "?");
            AddInfo("dicom:dicom:image::name", "Execution Status", "?");
            AddInfo("dicom:dicom:image::name", "Execution Status Info", "?");
            AddInfo("dicom:dicom:image::name", "Creation Date", "?");
            AddInfo("dicom:dicom:image::name", "Creation Time", "?");
            AddInfo("dicom:dicom:image::name", "Originator", "?");
            AddInfo("dicom:dicom:image::name", "Destination AE", "?");
            AddInfo("dicom:dicom:image::name", "Owner ID", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Films", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Print Job Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Printer Status", "?");
            AddInfo("dicom:dicom:image::name", "Printer Status Info", "?");
            AddInfo("dicom:dicom:image::name", "Printer Name", "?");
            AddInfo("dicom:dicom:image::name", "Print Queue ID", "?");
            AddInfo("dicom:dicom:image::name", "Queue Status", "?");
            AddInfo("dicom:dicom:image::name", "Print Job Description Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Print Job Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Print Management Capabilities Seq", "?");
            AddInfo("dicom:dicom:image::name", "Printer Characteristics Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Film Box Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Box Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Annotation Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Image Overlay Box Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Presentation LUT Content Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Proposed Study Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Original Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Label From Info Extracted From Instance", "?");
            AddInfo("dicom:dicom:image::name", "Label Text", "?");
            AddInfo("dicom:dicom:image::name", "Label Style Selection", "?");
            AddInfo("dicom:dicom:image::name", "Media Disposition", "?");
            AddInfo("dicom:dicom:image::name", "Barcode Value", "?");
            AddInfo("dicom:dicom:image::name", "Barcode Symbology", "?");
            AddInfo("dicom:dicom:image::name", "Allow Media Splitting", "?");
            AddInfo("dicom:dicom:image::name", "Include Non DICOM Objects", "?");
            AddInfo("dicom:dicom:image::name", "Include Display Application", "?");
            AddInfo("dicom:dicom:image::name", "Save Comp Instances After Media Create", "?");
            AddInfo("dicom:dicom:image::name", "Total Number Media Pieces Created", "?");
            AddInfo("dicom:dicom:image::name", "Requested Media Application Profile", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Storage Media Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Failure Attributes", "?");
            AddInfo("dicom:dicom:image::name", "Allow Lossy Compression", "?");
            AddInfo("dicom:dicom:image::name", "Request Priority", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Label", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Name", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Description", "?");
            AddInfo("dicom:dicom:image::name", "Reported Values Origin", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Plane", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Image Receptor Translation", "?");
            AddInfo("dicom:dicom:image::name", "X Ray Image Receptor Angle", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Image Plane Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "RT Image Position", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Machine Name", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Machine SAD", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Machine SSD", "?");
            AddInfo("dicom:dicom:image::name", "RT Image SID", "?");
            AddInfo("dicom:dicom:image::name", "Source To Reference Object Distance", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Number", "?");
            AddInfo("dicom:dicom:image::name", "Exposure Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Meterset Exposure", "?");
            AddInfo("dicom:dicom:image::name", "Diaphragm Position", "?");
            AddInfo("dicom:dicom:image::name", "Fluence Map Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fluence Data Source", "?");
            AddInfo("dicom:dicom:image::name", "Fluence Data Scale", "?");
            AddInfo("dicom:dicom:image::name", "Fluence Mode", "?");
            AddInfo("dicom:dicom:image::name", "Fluence Mode ID", "?");
            AddInfo("dicom:dicom:image::name", "DVH Type", "?");
            AddInfo("dicom:dicom:image::name", "Dose Units", "?");
            AddInfo("dicom:dicom:image::name", "Dose Type", "?");
            AddInfo("dicom:dicom:image::name", "Dose Comment", "?");
            AddInfo("dicom:dicom:image::name", "Normalization Point", "?");
            AddInfo("dicom:dicom:image::name", "Dose Summation Type", "?");
            AddInfo("dicom:dicom:image::name", "Grid Frame Offset Vector", "?");
            AddInfo("dicom:dicom:image::name", "Dose Grid Scaling", "?");
            AddInfo("dicom:dicom:image::name", "RT Dose ROI Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Dose Value", "?");
            AddInfo("dicom:dicom:image::name", "Tissue Heterogeneity Correction", "?");
            AddInfo("dicom:dicom:image::name", "DVH Normalization Point", "?");
            AddInfo("dicom:dicom:image::name", "DVH Normalization Dose Value", "?");
            AddInfo("dicom:dicom:image::name", "DVH Sequence", "?");
            AddInfo("dicom:dicom:image::name", "DVH Dose Scaling", "?");
            AddInfo("dicom:dicom:image::name", "DVH Volume Units", "?");
            AddInfo("dicom:dicom:image::name", "DVH Number Of Bins", "?");
            AddInfo("dicom:dicom:image::name", "DVH Data", "?");
            AddInfo("dicom:dicom:image::name", "DVH Referenced ROI Sequence", "?");
            AddInfo("dicom:dicom:image::name", "DVHROI Contribution Type", "?");
            AddInfo("dicom:dicom:image::name", "DVH Minimum Dose", "?");
            AddInfo("dicom:dicom:image::name", "DVH Maximum Dose", "?");
            AddInfo("dicom:dicom:image::name", "DVH Mean Dose", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set Label", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set Name", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set Description", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set Date", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set Time", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Frame Of Reference Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RT Referenced Study Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RT Referenced Series Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contour Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Structure Set ROI Sequence", "?");
            AddInfo("dicom:dicom:image::name", "ROI Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Frame Of Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "ROI Name", "?");
            AddInfo("dicom:dicom:image::name", "ROI Description", "?");
            AddInfo("dicom:dicom:image::name", "ROI Display Color", "?");
            AddInfo("dicom:dicom:image::name", "ROI Volume", "?");
            AddInfo("dicom:dicom:image::name", "RT Related ROI Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RTROI Relationship", "?");
            AddInfo("dicom:dicom:image::name", "ROI Generation Algorithm", "?");
            AddInfo("dicom:dicom:image::name", "ROI Generation Description", "?");
            AddInfo("dicom:dicom:image::name", "ROI Contour Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contour Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Contour Geometric Type", "?");
            AddInfo("dicom:dicom:image::name", "Contour Slab Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Contour Offset Vector", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Contour Points", "?");
            AddInfo("dicom:dicom:image::name", "Contour Number", "?");
            AddInfo("dicom:dicom:image::name", "Attached Contours", "?");
            AddInfo("dicom:dicom:image::name", "Contour Data", "?");
            AddInfo("dicom:dicom:image::name", "RTROI Observations Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Observation Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced ROI Number", "?");
            AddInfo("dicom:dicom:image::name", "ROI Observation Label", "?");
            AddInfo("dicom:dicom:image::name", "RTROI Identification Code Sequence", "?");
            AddInfo("dicom:dicom:image::name", "ROI Observation Description", "?");
            AddInfo("dicom:dicom:image::name", "Related RTROI Observations Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RTROI Interpreted Type", "?");
            AddInfo("dicom:dicom:image::name", "ROI Interpreter", "?");
            AddInfo("dicom:dicom:image::name", "ROI Physical Properties Sequence", "?");
            AddInfo("dicom:dicom:image::name", "ROI Physical Property", "?");
            AddInfo("dicom:dicom:image::name", "ROI Physical Property Value", "?");
            AddInfo("dicom:dicom:image::name", "ROI Elemental Composition Sequence", "?");
            AddInfo("dicom:dicom:image::name", "ROI Elemental Comp Atomic Number", "?");
            AddInfo("dicom:dicom:image::name", "ROI Elemental Comp Atomic Mass Fraction", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Reference Relationship Seq", "?");
            AddInfo("dicom:dicom:image::name", "Related Frame Of Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Reference Transform Type", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Reference Transform Matrix", "?");
            AddInfo("dicom:dicom:image::name", "Frame Of Reference Transform Comment", "?");
            AddInfo("dicom:dicom:image::name", "Measured Dose Reference Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Measured Dose Description", "?");
            AddInfo("dicom:dicom:image::name", "Measured Dose Type", "?");
            AddInfo("dicom:dicom:image::name", "Measured Dose Value", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Session Beam Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Session Ion Beam Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Current Fraction Number", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Control Point Date", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Control Point Time", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Termination Status", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Termination Code", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Verification Status", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Treatment Record Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specified Primary Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Specified Secondary Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Primary Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Secondary Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Specified Treatment Time", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Treatment Time", "?");
            AddInfo("dicom:dicom:image::name", "Control Point Delivery Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Control Point Delivery Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specified Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Meterset Rate Set", "?");
            AddInfo("dicom:dicom:image::name", "Meterset Rate Delivered", "?");
            AddInfo("dicom:dicom:image::name", "Scan Spot Metersets Delivered", "?");
            AddInfo("dicom:dicom:image::name", "Dose Rate Delivered", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Summary Calc Dose Ref Seq", "?");
            AddInfo("dicom:dicom:image::name", "Cumulative Dose To Dose Reference", "?");
            AddInfo("dicom:dicom:image::name", "First Treatment Date", "?");
            AddInfo("dicom:dicom:image::name", "Most Recent Treatment Date", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Fractions Delivered", "?");
            AddInfo("dicom:dicom:image::name", "Override Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Parameter Sequence Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Override Parameter Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Parameter Item Index", "?");
            AddInfo("dicom:dicom:image::name", "Measured Dose Reference Number", "?");
            AddInfo("dicom:dicom:image::name", "Parameter Pointer", "?");
            AddInfo("dicom:dicom:image::name", "Override Reason", "?");
            AddInfo("dicom:dicom:image::name", "Corrected Parameter Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Correction Value", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Dose Reference Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Dose Reference Number", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Dose Reference Description", "?");
            AddInfo("dicom:dicom:image::name", "Calculated Dose Reference Dose Value", "?");
            AddInfo("dicom:dicom:image::name", "Start Meterset", "?");
            AddInfo("dicom:dicom:image::name", "End Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Measured Dose Reference Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Measured Dose Reference Num", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Calculated Dose Ref Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Calculated Dose Ref Number", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Leaf Pairs Seq", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Wedge Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Compensator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Block Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Summary Measured Dose Ref Seq", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Snout Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Range Shifter Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Lateral Spreading Device Seq", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Range Modulator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Source Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Serial Number", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Session App Setup Seq", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Check", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Brachy Accessory Device Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Brachy Accessory Device Num", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Channel Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Specified Channel Total Time", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Channel Total Time", "?");
            AddInfo("dicom:dicom:image::name", "Specified Number Of Pulses", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Number Of Pulses", "?");
            AddInfo("dicom:dicom:image::name", "Specified Pulse Repetition Interval", "?");
            AddInfo("dicom:dicom:image::name", "Delivered Pulse Repetition Interval", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Source Applicator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Source Applicator Number", "?");
            AddInfo("dicom:dicom:image::name", "Recorded Channel Shield Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Channel Shield Number", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Control Point Delivered Seq", "?");
            AddInfo("dicom:dicom:image::name", "Safe Position Exit Date", "?");
            AddInfo("dicom:dicom:image::name", "Safe Position Exit Time", "?");
            AddInfo("dicom:dicom:image::name", "Safe Position Return Date", "?");
            AddInfo("dicom:dicom:image::name", "Safe Position Return Time", "?");
            AddInfo("dicom:dicom:image::name", "Current Treatment Status", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Status Comment", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Group Summary Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Fraction Number", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Group Type", "?");
            AddInfo("dicom:dicom:image::name", "Beam Stopper Position", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Status Summary Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Date", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Time", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Label", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Name", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Description", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Date", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Time", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Protocols", "?");
            AddInfo("dicom:dicom:image::name", "Plan Intent", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Sites", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Geometry", "?");
            AddInfo("dicom:dicom:image::name", "Prescription Description", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Number", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference UID", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Structure Type", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Beam Energy Unit", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Description", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Point Coordinates", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Prior Dose", "?");
            AddInfo("dicom:dicom:image::name", "Dose Reference Type", "?");
            AddInfo("dicom:dicom:image::name", "Constraint Weight", "?");
            AddInfo("dicom:dicom:image::name", "Delivery Warning Dose", "?");
            AddInfo("dicom:dicom:image::name", "Delivery Maximum Dose", "?");
            AddInfo("dicom:dicom:image::name", "Target Minimum Dose", "?");
            AddInfo("dicom:dicom:image::name", "Target Prescription Dose", "?");
            AddInfo("dicom:dicom:image::name", "Target Maximum Dose", "?");
            AddInfo("dicom:dicom:image::name", "Target Underdose Volume Fraction", "?");
            AddInfo("dicom:dicom:image::name", "Organ At Risk Full Volume Dose", "?");
            AddInfo("dicom:dicom:image::name", "Organ At Risk Limit Dose", "?");
            AddInfo("dicom:dicom:image::name", "Organ At Risk Maximum Dose", "?");
            AddInfo("dicom:dicom:image::name", "Organ At Risk Overdose Volume Fraction", "?");
            AddInfo("dicom:dicom:image::name", "Tolerance Table Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Tolerance Table Number", "?");
            AddInfo("dicom:dicom:image::name", "Tolerance Table Label", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Tolerance Seq", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Position Tol", "?");
            AddInfo("dicom:dicom:image::name", "Snout Position Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Eccentric Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Pitch Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Roll Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Vertical Position Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Longitudinal Position Tol", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Lateral Position Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "RT Plan Relationship", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Group Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Group Number", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Group Description", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Fractions Planned", "?");
            AddInfo("dicom:dicom:image::name", "Number Fraction Pattern Digits Per Day", "?");
            AddInfo("dicom:dicom:image::name", "Repeat Fraction Cycle Length", "?");
            AddInfo("dicom:dicom:image::name", "Fraction Pattern", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Beams", "?");
            AddInfo("dicom:dicom:image::name", "Beam Dose Specification Point", "?");
            AddInfo("dicom:dicom:image::name", "Beam Dose", "?");
            AddInfo("dicom:dicom:image::name", "Beam Meterset", "?");
            AddInfo("dicom:dicom:image::name", "Beam Dose Point Depth", "?");
            AddInfo("dicom:dicom:image::name", "Beam Dose Point Equivalent Depth", "?");
            AddInfo("dicom:dicom:image::name", "Beam Dose Point SSD", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Brachy Application Setups", "?");
            AddInfo("dicom:dicom:image::name", "Brachy App Setup Dose Spec Point", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Application Setup Dose", "?");
            AddInfo("dicom:dicom:image::name", "Beam Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Machine Name", "?");
            AddInfo("dicom:dicom:image::name", "Primary Dosimeter Unit", "?");
            AddInfo("dicom:dicom:image::name", "Source Axis Distance", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "RT Beam Limiting Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Source To Beam Limiting Device Distance", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Beam Limiting Device Dist", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Leaf Jaw Pairs", "?");
            AddInfo("dicom:dicom:image::name", "Leaf Position Boundaries", "?");
            AddInfo("dicom:dicom:image::name", "Beam Number", "?");
            AddInfo("dicom:dicom:image::name", "Beam Name", "?");
            AddInfo("dicom:dicom:image::name", "Beam Description", "?");
            AddInfo("dicom:dicom:image::name", "Beam Type", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Type", "?");
            AddInfo("dicom:dicom:image::name", "High Dose Technique Type", "?");
            AddInfo("dicom:dicom:image::name", "Reference Image Number", "?");
            AddInfo("dicom:dicom:image::name", "Planned Verification Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Imaging Device Specific Acq Params", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Delivery Type", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Wedges", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Number", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Type", "?");
            AddInfo("dicom:dicom:image::name", "Wedge ID", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Angle", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Factor", "?");
            AddInfo("dicom:dicom:image::name", "Total Wedge Tray Water Equiv Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Orientation", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Wedge Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Source To Wedge Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Thin Edge Position", "?");
            AddInfo("dicom:dicom:image::name", "Bolus ID", "?");
            AddInfo("dicom:dicom:image::name", "Bolus Description", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Compensators", "?");
            AddInfo("dicom:dicom:image::name", "Material ID", "?");
            AddInfo("dicom:dicom:image::name", "Total Compensator Tray Factor", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Number", "?");
            AddInfo("dicom:dicom:image::name", "Compensator ID", "?");
            AddInfo("dicom:dicom:image::name", "Source To Compensator Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Rows", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Columns", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Pixel Spacing", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Position", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Transmission Data", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Thickness Data", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Boli", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Type", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Blocks", "?");
            AddInfo("dicom:dicom:image::name", "Total Block Tray Factor", "?");
            AddInfo("dicom:dicom:image::name", "Total Block Tray Water Equiv Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Block Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Block Tray ID", "?");
            AddInfo("dicom:dicom:image::name", "Source To Block Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Block Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Block Type", "?");
            AddInfo("dicom:dicom:image::name", "Accessory Code", "?");
            AddInfo("dicom:dicom:image::name", "Block Divergence", "?");
            AddInfo("dicom:dicom:image::name", "Block Mounting Position", "?");
            AddInfo("dicom:dicom:image::name", "Block Number", "?");
            AddInfo("dicom:dicom:image::name", "Block Name", "?");
            AddInfo("dicom:dicom:image::name", "Block Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Block Transmission", "?");
            AddInfo("dicom:dicom:image::name", "Block Number Of Points", "?");
            AddInfo("dicom:dicom:image::name", "Block Data", "?");
            AddInfo("dicom:dicom:image::name", "Applicator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Applicator ID", "?");
            AddInfo("dicom:dicom:image::name", "Applicator Type", "?");
            AddInfo("dicom:dicom:image::name", "Applicator Description", "?");
            AddInfo("dicom:dicom:image::name", "Cumulative Dose Reference Coefficient", "?");
            AddInfo("dicom:dicom:image::name", "Final Cumulative Meterset Weight", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Control Points", "?");
            AddInfo("dicom:dicom:image::name", "Control Point Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Control Point Index", "?");
            AddInfo("dicom:dicom:image::name", "Nominal Beam Energy", "?");
            AddInfo("dicom:dicom:image::name", "Dose Rate Set", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Wedge Position", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Leaf Jaw Positions", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Angle", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Angle", "?");
            AddInfo("dicom:dicom:image::name", "Beam Limiting Device Rotate Direction", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support Angle", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Eccentric Axis Distance", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Eccentric Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Eccentric Rotate Direction", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Vertical Position", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Longitudinal Position", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Lateral Position", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter Position", "?");
            AddInfo("dicom:dicom:image::name", "Surface Entry Point", "?");
            AddInfo("dicom:dicom:image::name", "Source To Surface Distance", "?");
            AddInfo("dicom:dicom:image::name", "Cumulative Meterset Weight", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Pitch Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Pitch Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Roll Angle", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Roll Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Head Fixation Angle", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Pitch Angle", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Pitch Rotation Direction", "?");
            AddInfo("dicom:dicom:image::name", "Gantry Pitch Angle Tolerance", "?");
            AddInfo("dicom:dicom:image::name", "Patient Setup Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Patient Setup Number", "?");
            AddInfo("dicom:dicom:image::name", "Patient Setup Label", "?");
            AddInfo("dicom:dicom:image::name", "Patient Additional Position", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Label", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Description", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Position", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Pitch Angle", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Device Roll Angle", "?");
            AddInfo("dicom:dicom:image::name", "Shielding Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Shielding Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Shielding Device Label", "?");
            AddInfo("dicom:dicom:image::name", "Shielding Device Description", "?");
            AddInfo("dicom:dicom:image::name", "Shielding Device Position", "?");
            AddInfo("dicom:dicom:image::name", "Setup Technique", "?");
            AddInfo("dicom:dicom:image::name", "Setup Technique Description", "?");
            AddInfo("dicom:dicom:image::name", "Setup Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Setup Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Setup Device Label", "?");
            AddInfo("dicom:dicom:image::name", "Setup Device Description", "?");
            AddInfo("dicom:dicom:image::name", "Setup Device Parameter", "?");
            AddInfo("dicom:dicom:image::name", "Setup Reference Description", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Vertical Setup Displacement", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Longitudinal Setup Displace", "?");
            AddInfo("dicom:dicom:image::name", "Table Top Lateral Setup Displacement", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Treatment Technique", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Treatment Type", "?");
            AddInfo("dicom:dicom:image::name", "Treatment Machine Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Source Number", "?");
            AddInfo("dicom:dicom:image::name", "Source Type", "?");
            AddInfo("dicom:dicom:image::name", "Source Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Active Source Diameter", "?");
            AddInfo("dicom:dicom:image::name", "Active Source Length", "?");
            AddInfo("dicom:dicom:image::name", "Source Encapsulation Nom Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Source Encapsulation Nom Transmission", "?");
            AddInfo("dicom:dicom:image::name", "Source Isotope Name", "?");
            AddInfo("dicom:dicom:image::name", "Source Isotope Half Life", "?");
            AddInfo("dicom:dicom:image::name", "Source Strength Units", "?");
            AddInfo("dicom:dicom:image::name", "Reference Air Kerma Rate", "?");
            AddInfo("dicom:dicom:image::name", "Source Strength", "?");
            AddInfo("dicom:dicom:image::name", "Source Strength Reference Date", "?");
            AddInfo("dicom:dicom:image::name", "Source Strength Reference Time", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Type", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Number", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Name", "?");
            AddInfo("dicom:dicom:image::name", "Application Setup Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Template Number", "?");
            AddInfo("dicom:dicom:image::name", "Template Type", "?");
            AddInfo("dicom:dicom:image::name", "Template Name", "?");
            AddInfo("dicom:dicom:image::name", "Total Reference Air Kerma", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device Number", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device Name", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Device Nom Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Accessory Dev Nom Transmission", "?");
            AddInfo("dicom:dicom:image::name", "Channel Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Number", "?");
            AddInfo("dicom:dicom:image::name", "Channel Length", "?");
            AddInfo("dicom:dicom:image::name", "Channel Total Time", "?");
            AddInfo("dicom:dicom:image::name", "Source Movement Type", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Pulses", "?");
            AddInfo("dicom:dicom:image::name", "Pulse Repetition Interval", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Number", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator ID", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Type", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Name", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Length", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Manufacturer", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Wall Nom Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Wall Nom Trans", "?");
            AddInfo("dicom:dicom:image::name", "Source Applicator Step Size", "?");
            AddInfo("dicom:dicom:image::name", "Transfer Tube Number", "?");
            AddInfo("dicom:dicom:image::name", "Transfer Tube Length", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield Number", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield ID", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield Name", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield Nominal Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Channel Shield Nominal Transmission", "?");
            AddInfo("dicom:dicom:image::name", "Final Cumulative Time Weight", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Control Point Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Control Point Relative Position", "?");
            AddInfo("dicom:dicom:image::name", "Control Point 3D Position", "?");
            AddInfo("dicom:dicom:image::name", "Cumulative Time Weight", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Divergence", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Mounting Position", "?");
            AddInfo("dicom:dicom:image::name", "Source To Compensator Distance", "?");
            AddInfo("dicom:dicom:image::name", "Total Comp Tray Water Equiv Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Compensator Tray Distance", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Column Offset", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Compensator Distances", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Rel Stopping Power Ratio", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Milling Tool Diameter", "?");
            AddInfo("dicom:dicom:image::name", "Ion Range Compensator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Compensator Description", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Mass Number", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Atomic Number", "?");
            AddInfo("dicom:dicom:image::name", "Radiation Charge State", "?");
            AddInfo("dicom:dicom:image::name", "Scan Mode", "?");
            AddInfo("dicom:dicom:image::name", "Virtual Source Axis Distances", "?");
            AddInfo("dicom:dicom:image::name", "Snout Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Snout Position", "?");
            AddInfo("dicom:dicom:image::name", "Snout ID", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Range Shifters", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Number", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter ID", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Type", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Description", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Lateral Spreading Devices", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Number", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device ID", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Type", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Description", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Dev Water Equiv Thick", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Range Modulators", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Number", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator ID", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Type", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Description", "?");
            AddInfo("dicom:dicom:image::name", "Beam Current Modulation ID", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support Type", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support ID", "?");
            AddInfo("dicom:dicom:image::name", "Patient Support Accessory Code", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Light Azimuthal Angle", "?");
            AddInfo("dicom:dicom:image::name", "Fixation Light Polar Angle", "?");
            AddInfo("dicom:dicom:image::name", "Meterset Rate", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Settings Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Setting", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Range Shifter Distance", "?");
            AddInfo("dicom:dicom:image::name", "Range Shifter Water Equiv Thickness", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Settings Seq", "?");
            AddInfo("dicom:dicom:image::name", "Lateral Spreading Device Setting", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Lateral Spreading Dev Dist", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Settings Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Gating Start Value", "?");
            AddInfo("dicom:dicom:image::name", "Range Modulator Gating Stop Value", "?");
            AddInfo("dicom:dicom:image::name", "Isocenter To Range Modulator Distance", "?");
            AddInfo("dicom:dicom:image::name", "Scan Spot Tune ID", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Scan Spot Positions", "?");
            AddInfo("dicom:dicom:image::name", "Scan Spot Position Map", "?");
            AddInfo("dicom:dicom:image::name", "Scan Spot Meterset Weights", "?");
            AddInfo("dicom:dicom:image::name", "Scanning Spot Size", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Paintings", "?");
            AddInfo("dicom:dicom:image::name", "Ion Tolerance Table Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Beam Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Beam Limiting Device Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Block Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Control Point Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Wedge Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Ion Wedge Position Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Setup Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Setup Image Comment", "?");
            AddInfo("dicom:dicom:image::name", "Motion Synchronization Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Control Point Orientation", "?");
            AddInfo("dicom:dicom:image::name", "General Accessory Sequence", "?");
            AddInfo("dicom:dicom:image::name", "General Accessory ID", "?");
            AddInfo("dicom:dicom:image::name", "General Accessory Description", "?");
            AddInfo("dicom:dicom:image::name", "General Accessory Type", "?");
            AddInfo("dicom:dicom:image::name", "General Accessory Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced RT Plan Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Beam Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Beam Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Reference Image Number", "?");
            AddInfo("dicom:dicom:image::name", "Start Cumulative Meterset Weight", "?");
            AddInfo("dicom:dicom:image::name", "End Cumulative Meterset Weight", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Brachy App Setup Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Brachy App Setup Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Source Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Fraction Group Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Fraction Group Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Verification Image Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Reference Image Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Dose Reference Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Dose Reference Number", "?");
            AddInfo("dicom:dicom:image::name", "Brachy Referenced Dose Reference Seq", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Structure Set Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Patient Setup Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Dose Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Tolerance Table Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Bolus Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Wedge Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Compensator Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Block Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Control Point Index", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Control Point Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Start Control Point Index", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Stop Control Point Index", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Range Shifter Number", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Lateral Spreading Dev Num", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Range Modulator Number", "?");
            AddInfo("dicom:dicom:image::name", "Approval Status", "?");
            AddInfo("dicom:dicom:image::name", "Review Date", "?");
            AddInfo("dicom:dicom:image::name", "Review Time", "?");
            AddInfo("dicom:dicom:image::name", "Reviewer Name", "?");
            AddInfo("dicom:dicom:image::name", "Text Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Arbitrary", "?");
            AddInfo("dicom:dicom:image::name", "Text Comments", "?");
            AddInfo("dicom:dicom:image::name", "Results ID", "?");
            AddInfo("dicom:dicom:image::name", "Results ID Issuer", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Interpretation Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Recorded Date", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Recorded Time", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Recorder", "?");
            AddInfo("dicom:dicom:image::name", "Reference To Recorded Sound", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Transcription Date", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Transcription Time", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Transcriber", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Text", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Author", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Approver Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Approval Date", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Approval Time", "?");
            AddInfo("dicom:dicom:image::name", "Physician Approving Interpretation", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Diagnosis Description", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Diagnosis Code Seq", "?");
            AddInfo("dicom:dicom:image::name", "Results Distribution List Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Distribution Name", "?");
            AddInfo("dicom:dicom:image::name", "Distribution Address", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation ID", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation ID Issuer", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Type ID", "?");
            AddInfo("dicom:dicom:image::name", "Interpretation Status ID", "?");
            AddInfo("dicom:dicom:image::name", "Impressions", "?");
            AddInfo("dicom:dicom:image::name", "Results Comments", "?");
            AddInfo("dicom:dicom:image::name", "MAC Parameters Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Curve Dimensions", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Points", "?");
            AddInfo("dicom:dicom:image::name", "Type Of Data", "?");
            AddInfo("dicom:dicom:image::name", "Curve Description", "?");
            AddInfo("dicom:dicom:image::name", "Axis Units", "?");
            AddInfo("dicom:dicom:image::name", "Axis Labels", "?");
            AddInfo("dicom:dicom:image::name", "Data Value Representation", "?");
            AddInfo("dicom:dicom:image::name", "Minimum Coordinate Value", "?");
            AddInfo("dicom:dicom:image::name", "Maximum Coordinate Value", "?");
            AddInfo("dicom:dicom:image::name", "Curve Range", "?");
            AddInfo("dicom:dicom:image::name", "Curve Data Descriptor", "?");
            AddInfo("dicom:dicom:image::name", "Coordinate Start Value", "?");
            AddInfo("dicom:dicom:image::name", "Coordinate Step Value", "?");
            AddInfo("dicom:dicom:image::name", "Curve Activation Layer", "?");
            AddInfo("dicom:dicom:image::name", "Audio Type", "?");
            AddInfo("dicom:dicom:image::name", "Audio Sample Format", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Channels", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Samples", "?");
            AddInfo("dicom:dicom:image::name", "Sample Rate", "?");
            AddInfo("dicom:dicom:image::name", "Total Time", "?");
            AddInfo("dicom:dicom:image::name", "Audio Sample Data", "?");
            AddInfo("dicom:dicom:image::name", "Audio Comments", "?");
            AddInfo("dicom:dicom:image::name", "Curve Label", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Overlay Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Referenced Overlay Group", "?");
            AddInfo("dicom:dicom:image::name", "Curve Data", "?");
            AddInfo("dicom:dicom:image::name", "Shared Functional Groups Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Per Frame Functional Groups Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Channel Minimum Value", "?");
            AddInfo("dicom:dicom:image::name", "Channel Maximum Value", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Bits Allocated", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Sample Interpretation", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Padding Value", "?");
            AddInfo("dicom:dicom:image::name", "Waveform Data", "?");
            AddInfo("dicom:dicom:image::name", "First Order Phase Correction Angle", "?");
            AddInfo("dicom:dicom:image::name", "Spectroscopy Data", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Rows", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Columns", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Planes", "?");
            AddInfo("dicom:dicom:image::name", "Number Of Frames In Overlay", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Description", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Type", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Subtype", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Origin", "?");
            AddInfo("dicom:dicom:image::name", "Image Frame Origin", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Plane Origin", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Compression Code", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Compression Originator", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Compression Label", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Compression Description", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Compression Step Pointers", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Repeat Interval", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Bits Grouped", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Bits Allocated", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Bit Position", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Format", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Location", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Code Label", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Number Of Tables", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Code Table Location", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Bits For Code Word", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Activation Layer", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Descriptor Gray", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Descriptor Red", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Descriptor Green", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Descriptor Blue", "?");
            AddInfo("dicom:dicom:image::name", "Overlays Gray", "?");
            AddInfo("dicom:dicom:image::name", "Overlays Red", "?");
            AddInfo("dicom:dicom:image::name", "Overlays Green", "?");
            AddInfo("dicom:dicom:image::name", "Overlays Blue", "?");
            AddInfo("dicom:dicom:image::name", "ROI Area", "?");
            AddInfo("dicom:dicom:image::name", "ROI Mean", "?");
            AddInfo("dicom:dicom:image::name", "ROI Standard Deviation", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Label", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Data", "?");
            AddInfo("dicom:dicom:image::name", "Overlay Comments", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Data Group Length", "?");
            AddInfo("dicom:dicom:image::name", "Pixel Data", "?");
            AddInfo("dicom:dicom:image::name", "Variable Next Data Group", "?");
            AddInfo("dicom:dicom:image::name", "Variable Coefficients SDVN", "?");
            AddInfo("dicom:dicom:image::name", "Variable Coefficients SDHN", "?");
            AddInfo("dicom:dicom:image::name", "Variable Coefficients SDDN", "?");
            AddInfo("dicom:dicom:image::name", "Digital Signatures Sequence", "?");
            AddInfo("dicom:dicom:image::name", "Data Set Trailing Padding", "?");
            AddInfo("dicom:dicom:image::name", "Start Of Item", "?");
            AddInfo("dicom:dicom:image::name", "End Of Items", "?");
            AddInfo("dicom:dicom:image::name", "End Of Sequence", "?");
        }


        static void InitTable147()
        {
            AddInfo("makernotes:adobedng:image::name", "Maker Note Apple", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Nikon", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Canon", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Casio", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Casio 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note FLIR", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Fuji Film", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note GE", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note GE2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Hasselblad", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note HP", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note HP2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note HP4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note HP6", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note ISL", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note JVC", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note JVC Text", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 1a", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 1b", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 5", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 6a", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 6b", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 7", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 8a", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 8b", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 8c", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 9", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 10", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak 11", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kodak Unknown", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Kyocera", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Minolta", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Minolta 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Minolta 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Nikon 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Nikon 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Nintendo", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Olympus", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Olympus 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 5", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 6", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 7", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Leica 8", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Panasonic", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Panasonic 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax 4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax 5", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Pentax 6", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Phase One", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Reconyx", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Ricoh", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Ricoh 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Ricoh Text", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Samsung 1a", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Samsung 1b", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Samsung 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sanyo", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sanyo C4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sanyo Patch", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sigma", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony 2", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony 3", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony 4", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony 5", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony Ericsson", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Sony SRF", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Unknown Text", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Unknown Binary", "undef");
            AddInfo("makernotes:adobedng:image::name", "Maker Note Unknown", "undef");
        }


        static void InitTable148()
        {
            AddInfo("dng:dng:image::name", "Original Raw Image", "?");
            AddInfo("dng:dng:image::name", "Original Raw Resource", "?");
            AddInfo("dng:dng:image::name", "Original Raw File Type", "?");
            AddInfo("dng:dng:image::name", "Original Raw Creator", "?");
            AddInfo("dng:dng:image::name", "Original THM Image", "?");
            AddInfo("dng:dng:image::name", "Original THM Resource", "?");
            AddInfo("dng:dng:image::name", "Original THM File Type", "?");
            AddInfo("dng:dng:image::name", "Original THM Creator", "?");
        }


        static void InitTable149()
        {
            AddInfo("file:file:image::name", "Byte Order", "undef");
            AddInfo("file:file:image::name", "Header Version", "string");
            AddInfo("file:file:image::name", "DPX File Size", "int32u");
            AddInfo("file:file:image::name", "Ditto Key", "int32u");
            AddInfo("file:file:image::name", "Image File Name", "string");
            AddInfo("file:file:image::name", "Create Date", "string");
            AddInfo("file:file:image::name", "Creator", "string");
            AddInfo("file:file:image::name", "Project", "string");
            AddInfo("file:file:image::name", "Copyright", "string");
            AddInfo("file:file:image::name", "Encryption Key", "int32u");
            AddInfo("file:file:image::name", "Orientation", "int16u");
            AddInfo("file:file:image::name", "Image Elements", "int16u");
            AddInfo("file:file:image::name", "Image Width", "int32u");
            AddInfo("file:file:image::name", "Image Height", "int32u");
            AddInfo("file:file:image::name", "Data Sign", "int32u");
            AddInfo("file:file:image::name", "Components Configuration", "int8u");
            AddInfo("file:file:image::name", "Bit Depth", "int8u");
            AddInfo("file:file:image::name", "Image Description", "string");
            AddInfo("file:file:image::name", "Image 2 Description", "string");
            AddInfo("file:file:image::name", "Image 3 Description", "string");
            AddInfo("file:file:image::name", "Image 4 Description", "string");
            AddInfo("file:file:image::name", "Image 5 Description", "string");
            AddInfo("file:file:image::name", "Image 6 Description", "string");
            AddInfo("file:file:image::name", "Image 7 Description", "string");
            AddInfo("file:file:image::name", "Image 8 Description", "string");
            AddInfo("file:file:image::name", "Source File Name", "string");
            AddInfo("file:file:image::name", "Source Create Date", "string");
            AddInfo("file:file:image::name", "Input Device Name", "string");
            AddInfo("file:file:image::name", "Input Device Serial Number", "string");
            AddInfo("file:file:image::name", "Frame Rate", "float");
            AddInfo("file:file:image::name", "Frame ID", "string");
            AddInfo("file:file:image::name", "Slate Information", "string");
            AddInfo("file:file:image::name", "User ID", "string");
        }


        static void InitTable150()
        {
            AddInfo("dv:dv:video::name", "Aspect Ratio", "?");
            AddInfo("dv:dv:video::name", "Audio Bits Per Sample", "?");
            AddInfo("dv:dv:video::name", "Audio Channels", "?");
            AddInfo("dv:dv:video::name", "Audio Sample Rate", "?");
            AddInfo("dv:dv:video::name", "Colorimetry", "?");
            AddInfo("dv:dv:video::name", "Date Time Original", "?");
            AddInfo("dv:dv:video::name", "Duration", "?");
            AddInfo("dv:dv:video::name", "Frame Rate", "?");
            AddInfo("dv:dv:video::name", "Image Height", "?");
            AddInfo("dv:dv:video::name", "Image Width", "?");
            AddInfo("dv:dv:video::name", "Total Bitrate", "?");
            AddInfo("dv:dv:video::name", "Video Format", "?");
            AddInfo("dv:dv:video::name", "Video Scan Type", "?");
        }


        static void InitTable151()
        {
            AddInfo("xmp:xmp-dwc:other::name", "DC Event", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Event Day", "integer");
            AddInfo("xmp:xmp-dwc:other::name", "Event Earliest Date", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Event End Day Of Year", "integer");
            AddInfo("xmp:xmp-dwc:other::name", "Event ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Remarks", "lang-alt");
            AddInfo("xmp:xmp-dwc:other::name", "Event Time", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Event Field Notes", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Field Number", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Habitat", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Latest Date", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Event Month", "integer");
            AddInfo("xmp:xmp-dwc:other::name", "Event Sampling Effort", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Sampling Protocol", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Start Day Of Year", "integer");
            AddInfo("xmp:xmp-dwc:other::name", "Event Verbatim Event Date", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Event Year", "integer");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context Bed", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Earliest Age Or Lowest Stage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Earliest Eon Or Lowest Eonothem", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Earliest Epoch Or Lowest Series", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Earliest Era Or Lowest Erathem", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Earliest Period Or Lowest System", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context Formation", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context Group", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Highest Biostratigraphic Zone", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Latest Age Or Highest Stage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Latest Eon Or Highest Eonothem", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Latest Epoch Or Highest Series", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Latest Era Or Highest Erathem", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Latest Period Or Highest System", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Lithostratigraphic Terms", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Lowest Biostratigraphic Zone", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Geological Context Member", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identification", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Date Identified", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Identification ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identification Qualifier", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identification References", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identification Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identification Verification Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Identified By", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Type Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Or Fact", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Accuracy", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Determined By", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Determined Date", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Method", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Type", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Unit", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Measurement Value", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Associated Media", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Associated Occurrences", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Associated References", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Associated Sequences", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Associated Taxa", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Behavior", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Catalog Number", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Disposition", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Establishment Means", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Individual Count", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Individual ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Life Stage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Details", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Other Catalog Numbers", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Preparations", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Previous Identifications", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Record Number", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Recorded By", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Reproductive Condition", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Occurrence Sex", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Record Basis Of Record", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Collection Code", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Collection ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Data Generalizations", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Dataset ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Dataset Name", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Dynamic Properties", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Information Withheld", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Institution Code", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Institution ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Record Owner Institution Code", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Resource Relationship", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Related Resource ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Relationship According To", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Relationship Established Date", "date");
            AddInfo("xmp:xmp-dwc:other::name", "Relationship Of Resource", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Relationship Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Resource ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Resource Relationship ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Accepted Name Usage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Accepted Name Usage ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Class", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Family", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Genus", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Higher Classification", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Infraspecific Epithet", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Kingdom", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Name According To", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Name According To ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Name Published In", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Name Published In ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Name Published In Year", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Nomenclatural Code", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Nomenclatural Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Order", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Original Name Usage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Original Name Usage ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Parent Name Usage", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Parent Name Usage ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Phylum", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Scientific Name", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Scientific Name Authorship", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Scientific Name ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Specific Epithet", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Subgenus", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Concept ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Rank", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Taxonomic Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Verbatim Taxon Rank", "string");
            AddInfo("xmp:xmp-dwc:other::name", "Taxon Vernacular Name", "lang-alt");
            AddInfo("xmp:xmp-dwc:other::name", "DC Terms Location", "struct");
            AddInfo("xmp:xmp-dwc:other::name", "DC Continent", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Coordinate Precision", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Coordinate Uncertainty In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Country", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Country Code", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC County", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Decimal Latitude", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Decimal Longitude", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Footprint SRS", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Footprint Spatial Fit", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Footprint WKT", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Geodetic Datum", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeference Protocol", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeference Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeference Sources", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeference Verification Status", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeferenced By", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Georeferenced Date", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Higher Geography", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Higher Geography ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Island", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Island Group", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Locality", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Location According To", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Location ID", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Location Remarks", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Maximum Depth In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Maximum Distance Above Surface In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Maximum Elevation In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Minimum Depth In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Minimum Distance Above Surface In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Minimum Elevation In Meters", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Municipality", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Point Radius Spatial Fit", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC State Province", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Coordinate System", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Coordinates", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Depth", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Elevation", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Latitude", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Locality", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim Longitude", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Verbatim SRS", "string");
            AddInfo("xmp:xmp-dwc:other::name", "DC Water Body", "string");
        }


        static void InitTable152()
        {
            AddInfo("djvu:djvu:image::name", "Subfile Type", "undef");
        }


        static void InitTable153()
        {
            AddInfo("djvu:djvu:image::name", "Image Width", "int16u");
            AddInfo("djvu:djvu:image::name", "Image Height", "int16u");
            AddInfo("djvu:djvu:image::name", "DjVu Version", "int8u");
            AddInfo("djvu:djvu:image::name", "Spatial Resolution", "int16u");
            AddInfo("djvu:djvu:image::name", "Gamma", "int8u");
            AddInfo("djvu:djvu:image::name", "Orientation", "int8u");
        }


        static void InitTable154()
        {
            AddInfo("djvu:djvu:image::name", "Included File ID", "?");
        }


        static void InitTable155()
        {
            AddInfo("djvu:djvu-meta:image::name", "Author", "?");
            AddInfo("djvu:djvu-meta:image::name", "Create Date", "?");
            AddInfo("djvu:djvu-meta:image::name", "Creator", "?");
            AddInfo("djvu:djvu-meta:image::name", "Keywords", "?");
            AddInfo("djvu:djvu-meta:image::name", "Modify Date", "?");
            AddInfo("djvu:djvu-meta:image::name", "Producer", "?");
            AddInfo("djvu:djvu-meta:image::name", "Subject", "?");
            AddInfo("djvu:djvu-meta:image::name", "Title", "?");
            AddInfo("djvu:djvu-meta:image::name", "Trapped", "?");
            AddInfo("djvu:djvu-meta:image::name", "Address", "?");
            AddInfo("djvu:djvu-meta:image::name", "Annotation", "?");
            AddInfo("djvu:djvu-meta:image::name", "Author", "?");
            AddInfo("djvu:djvu-meta:image::name", "Book Title", "?");
            AddInfo("djvu:djvu-meta:image::name", "Chapter", "?");
            AddInfo("djvu:djvu-meta:image::name", "Cross Ref", "?");
            AddInfo("djvu:djvu-meta:image::name", "Edition", "?");
            AddInfo("djvu:djvu-meta:image::name", "E Print", "?");
            AddInfo("djvu:djvu-meta:image::name", "How Published", "?");
            AddInfo("djvu:djvu-meta:image::name", "Institution", "?");
            AddInfo("djvu:djvu-meta:image::name", "Journal", "?");
            AddInfo("djvu:djvu-meta:image::name", "Key", "?");
            AddInfo("djvu:djvu-meta:image::name", "Month", "?");
            AddInfo("djvu:djvu-meta:image::name", "Note", "?");
            AddInfo("djvu:djvu-meta:image::name", "Number", "?");
            AddInfo("djvu:djvu-meta:image::name", "Organization", "?");
            AddInfo("djvu:djvu-meta:image::name", "Pages", "?");
            AddInfo("djvu:djvu-meta:image::name", "Publisher", "?");
            AddInfo("djvu:djvu-meta:image::name", "School", "?");
            AddInfo("djvu:djvu-meta:image::name", "Series", "?");
            AddInfo("djvu:djvu-meta:image::name", "Title", "?");
            AddInfo("djvu:djvu-meta:image::name", "Type", "?");
            AddInfo("djvu:djvu-meta:image::name", "URL", "?");
            AddInfo("djvu:djvu-meta:image::name", "Volume", "?");
            AddInfo("djvu:djvu-meta:image::name", "Year", "?");
        }


        static void InitTable156()
        {
            AddInfo("exe:exe:other::name", "CHM Version", "int32u");
            AddInfo("exe:exe:other::name", "Language Code", "int32u");
        }


        static void InitTable157()
        {
            AddInfo("exe:exe:other::name", "CPU Architecture", "int8u");
            AddInfo("exe:exe:other::name", "CPU Byte Order", "int8u");
            AddInfo("exe:exe:other::name", "Object File Type", "int16u");
            AddInfo("exe:exe:other::name", "CPU Type", "int16u");
        }


        static void InitTable158()
        {
            AddInfo("exe:exe:other::name", "CPU Architecture", "?");
            AddInfo("exe:exe:other::name", "CPU Byte Order", "?");
            AddInfo("exe:exe:other::name", "CPU Count", "?");
            AddInfo("exe:exe:other::name", "CPU Type", "?");
            AddInfo("exe:exe:other::name", "CPU Subtype", "?");
            AddInfo("exe:exe:other::name", "Object File Type", "?");
        }


        static void InitTable159()
        {
            AddInfo("exe:exe:other::name", "Machine Type", "int16u");
            AddInfo("exe:exe:other::name", "Time Stamp", "int32u");
            AddInfo("exe:exe:other::name", "PE Type", "int16u");
            AddInfo("exe:exe:other::name", "Linker Version", "int8u");
            AddInfo("exe:exe:other::name", "Code Size", "int32u");
            AddInfo("exe:exe:other::name", "Initialized Data Size", "int32u");
            AddInfo("exe:exe:other::name", "Uninitialized Data Size", "int32u");
            AddInfo("exe:exe:other::name", "Entry Point", "int32u");
            AddInfo("exe:exe:other::name", "OS Version", "int16u");
            AddInfo("exe:exe:other::name", "Image Version", "int16u");
            AddInfo("exe:exe:other::name", "Subsystem Version", "int16u");
            AddInfo("exe:exe:other::name", "Subsystem", "int16u");
        }


        static void InitTable160()
        {
            AddInfo("exe:exe:other::name", "CPU Architecture", "undef");
            AddInfo("exe:exe:other::name", "PEF Version", "int32u");
            AddInfo("exe:exe:other::name", "Time Stamp", "int32u");
        }


        static void InitTable161()
        {
            AddInfo("exe:exe:other::name", "Build Date", "?");
            AddInfo("exe:exe:other::name", "Build Version", "?");
            AddInfo("exe:exe:other::name", "Character Set", "?");
            AddInfo("exe:exe:other::name", "Comments", "?");
            AddInfo("exe:exe:other::name", "Company Name", "?");
            AddInfo("exe:exe:other::name", "Copyright", "?");
            AddInfo("exe:exe:other::name", "File Description", "?");
            AddInfo("exe:exe:other::name", "File Version", "?");
            AddInfo("exe:exe:other::name", "Internal Name", "?");
            AddInfo("exe:exe:other::name", "Language Code", "?");
            AddInfo("exe:exe:other::name", "Legal Copyright", "?");
            AddInfo("exe:exe:other::name", "Legal Trademarks", "?");
            AddInfo("exe:exe:other::name", "Original File Name", "?");
            AddInfo("exe:exe:other::name", "Private Build", "?");
            AddInfo("exe:exe:other::name", "Product Name", "?");
            AddInfo("exe:exe:other::name", "Product Version", "?");
            AddInfo("exe:exe:other::name", "Special Build", "?");
        }


        static void InitTable162()
        {
            AddInfo("exe:exe:other::name", "File Version Number", "int16u");
            AddInfo("exe:exe:other::name", "Product Version Number", "int16u");
            AddInfo("exe:exe:other::name", "File Flags Mask", "int32u");
            AddInfo("exe:exe:other::name", "File Flags", "int32u");
            AddInfo("exe:exe:other::name", "File OS", "int32u");
            AddInfo("exe:exe:other::name", "Object File Type", "int32u");
            AddInfo("exe:exe:other::name", "File Subtype", "int32u");
        }


        static void InitTable163()
        {
            AddInfo("exif:ifd0:image::name", "Interoperability Index", "string");
            AddInfo("exif:subifd1:image::name", "Interoperability Index", "string");
            AddInfo("exif:exififd:image::name", "Interoperability Index", "string");
            AddInfo("exif:ifd0:image::name", "Interoperability Version", "undef");
            AddInfo("exif:subifd1:image::name", "Interoperability Version", "undef");
            AddInfo("exif:exififd:image::name", "Interoperability Version", "undef");
            AddInfo("exif:ifd0:image::name", "Processing Software", "string");
            AddInfo("exif:subifd1:image::name", "Processing Software", "string");
            AddInfo("exif:exififd:image::name", "Processing Software", "string");
            AddInfo("exif:ifd0:image::name", "Subfile Type", "int32u");
            AddInfo("exif:subifd1:image::name", "Subfile Type", "int32u");
            AddInfo("exif:exififd:image::name", "Subfile Type", "int32u");
            AddInfo("exif:ifd0:image::name", "Old Subfile Type", "int16u");
            AddInfo("exif:subifd1:image::name", "Old Subfile Type", "int16u");
            AddInfo("exif:exififd:image::name", "Old Subfile Type", "int16u");
            AddInfo("exif:ifd0:image::name", "Image Width", "int32u");
            AddInfo("exif:subifd1:image::name", "Image Width", "int32u");
            AddInfo("exif:exififd:image::name", "Image Width", "int32u");
            AddInfo("exif:ifd0:image::name", "Image Height", "int32u");
            AddInfo("exif:subifd1:image::name", "Image Height", "int32u");
            AddInfo("exif:exififd:image::name", "Image Height", "int32u");
            AddInfo("exif:ifd0:image::name", "Bits Per Sample", "int16u");
            AddInfo("exif:subifd1:image::name", "Bits Per Sample", "int16u");
            AddInfo("exif:exififd:image::name", "Bits Per Sample", "int16u");
            AddInfo("exif:ifd0:image::name", "Compression", "int16u");
            AddInfo("exif:subifd1:image::name", "Compression", "int16u");
            AddInfo("exif:exififd:image::name", "Compression", "int16u");
            AddInfo("exif:ifd0:image::name", "Photometric Interpretation", "int16u");
            AddInfo("exif:subifd1:image::name", "Photometric Interpretation", "int16u");
            AddInfo("exif:exififd:image::name", "Photometric Interpretation", "int16u");
            AddInfo("exif:ifd0:image::name", "Thresholding", "int16u");
            AddInfo("exif:subifd1:image::name", "Thresholding", "int16u");
            AddInfo("exif:exififd:image::name", "Thresholding", "int16u");
            AddInfo("exif:ifd0:image::name", "Cell Width", "int16u");
            AddInfo("exif:subifd1:image::name", "Cell Width", "int16u");
            AddInfo("exif:exififd:image::name", "Cell Width", "int16u");
            AddInfo("exif:ifd0:image::name", "Cell Length", "int16u");
            AddInfo("exif:subifd1:image::name", "Cell Length", "int16u");
            AddInfo("exif:exififd:image::name", "Cell Length", "int16u");
            AddInfo("exif:ifd0:image::name", "Fill Order", "int16u");
            AddInfo("exif:subifd1:image::name", "Fill Order", "int16u");
            AddInfo("exif:exififd:image::name", "Fill Order", "int16u");
            AddInfo("exif:ifd0:image::name", "Document Name", "string");
            AddInfo("exif:subifd1:image::name", "Document Name", "string");
            AddInfo("exif:exififd:image::name", "Document Name", "string");
            AddInfo("exif:ifd0:image::name", "Image Description", "string");
            AddInfo("exif:subifd1:image::name", "Image Description", "string");
            AddInfo("exif:exififd:image::name", "Image Description", "string");
            AddInfo("exif:ifd0:image::name", "Make", "string");
            AddInfo("exif:subifd1:image::name", "Make", "string");
            AddInfo("exif:exififd:image::name", "Make", "string");
            AddInfo("exif:ifd0:image::name", "Camera Model Name", "string");
            AddInfo("exif:subifd1:image::name", "Camera Model Name", "string");
            AddInfo("exif:exififd:image::name", "Camera Model Name", "string");
            AddInfo("exif:ifd0:image::name", "Strip Offsets", "?");
            AddInfo("exif:subifd1:image::name", "Strip Offsets", "?");
            AddInfo("exif:exififd:image::name", "Strip Offsets", "?");
            AddInfo("exif:ifd0:image::name", "Strip Offsets", "?");
            AddInfo("exif:subifd1:image::name", "Strip Offsets", "?");
            AddInfo("exif:exififd:image::name", "Strip Offsets", "?");
            AddInfo("exif:ifd0:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Orientation", "int16u");
            AddInfo("exif:subifd1:image::name", "Orientation", "int16u");
            AddInfo("exif:exififd:image::name", "Orientation", "int16u");
            AddInfo("exif:ifd0:image::name", "Samples Per Pixel", "int16u");
            AddInfo("exif:subifd1:image::name", "Samples Per Pixel", "int16u");
            AddInfo("exif:exififd:image::name", "Samples Per Pixel", "int16u");
            AddInfo("exif:ifd0:image::name", "Rows Per Strip", "int32u");
            AddInfo("exif:subifd1:image::name", "Rows Per Strip", "int32u");
            AddInfo("exif:exififd:image::name", "Rows Per Strip", "int32u");
            AddInfo("exif:ifd0:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:subifd1:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:exififd:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:ifd0:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:subifd1:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:exififd:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:ifd0:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Min Sample Value", "int16u");
            AddInfo("exif:subifd1:image::name", "Min Sample Value", "int16u");
            AddInfo("exif:exififd:image::name", "Min Sample Value", "int16u");
            AddInfo("exif:ifd0:image::name", "Max Sample Value", "int16u");
            AddInfo("exif:subifd1:image::name", "Max Sample Value", "int16u");
            AddInfo("exif:exififd:image::name", "Max Sample Value", "int16u");
            AddInfo("exif:ifd0:image::name", "X Resolution", "rational64u");
            AddInfo("exif:subifd1:image::name", "X Resolution", "rational64u");
            AddInfo("exif:exififd:image::name", "X Resolution", "rational64u");
            AddInfo("exif:ifd0:image::name", "Y Resolution", "rational64u");
            AddInfo("exif:subifd1:image::name", "Y Resolution", "rational64u");
            AddInfo("exif:exififd:image::name", "Y Resolution", "rational64u");
            AddInfo("exif:ifd0:image::name", "Planar Configuration", "int16u");
            AddInfo("exif:subifd1:image::name", "Planar Configuration", "int16u");
            AddInfo("exif:exififd:image::name", "Planar Configuration", "int16u");
            AddInfo("exif:ifd0:image::name", "Page Name", "string");
            AddInfo("exif:subifd1:image::name", "Page Name", "string");
            AddInfo("exif:exififd:image::name", "Page Name", "string");
            AddInfo("exif:ifd0:image::name", "X Position", "rational64u");
            AddInfo("exif:subifd1:image::name", "X Position", "rational64u");
            AddInfo("exif:exififd:image::name", "X Position", "rational64u");
            AddInfo("exif:ifd0:image::name", "Y Position", "rational64u");
            AddInfo("exif:subifd1:image::name", "Y Position", "rational64u");
            AddInfo("exif:exififd:image::name", "Y Position", "rational64u");
            AddInfo("exif:ifd0:image::name", "Free Offsets", "?");
            AddInfo("exif:subifd1:image::name", "Free Offsets", "?");
            AddInfo("exif:exififd:image::name", "Free Offsets", "?");
            AddInfo("exif:ifd0:image::name", "Free Byte Counts", "?");
            AddInfo("exif:subifd1:image::name", "Free Byte Counts", "?");
            AddInfo("exif:exififd:image::name", "Free Byte Counts", "?");
            AddInfo("exif:ifd0:image::name", "Gray Response Unit", "int16u");
            AddInfo("exif:subifd1:image::name", "Gray Response Unit", "int16u");
            AddInfo("exif:exififd:image::name", "Gray Response Unit", "int16u");
            AddInfo("exif:ifd0:image::name", "Gray Response Curve", "?");
            AddInfo("exif:subifd1:image::name", "Gray Response Curve", "?");
            AddInfo("exif:exififd:image::name", "Gray Response Curve", "?");
            AddInfo("exif:ifd0:image::name", "T4 Options", "?");
            AddInfo("exif:subifd1:image::name", "T4 Options", "?");
            AddInfo("exif:exififd:image::name", "T4 Options", "?");
            AddInfo("exif:ifd0:image::name", "T6 Options", "?");
            AddInfo("exif:subifd1:image::name", "T6 Options", "?");
            AddInfo("exif:exififd:image::name", "T6 Options", "?");
            AddInfo("exif:ifd0:image::name", "Resolution Unit", "int16u");
            AddInfo("exif:subifd1:image::name", "Resolution Unit", "int16u");
            AddInfo("exif:exififd:image::name", "Resolution Unit", "int16u");
            AddInfo("exif:ifd0:image::name", "Page Number", "int16u");
            AddInfo("exif:subifd1:image::name", "Page Number", "int16u");
            AddInfo("exif:exififd:image::name", "Page Number", "int16u");
            AddInfo("exif:ifd0:image::name", "Color Response Unit", "?");
            AddInfo("exif:subifd1:image::name", "Color Response Unit", "?");
            AddInfo("exif:exififd:image::name", "Color Response Unit", "?");
            AddInfo("exif:ifd0:image::name", "Transfer Function", "int16u");
            AddInfo("exif:subifd1:image::name", "Transfer Function", "int16u");
            AddInfo("exif:exififd:image::name", "Transfer Function", "int16u");
            AddInfo("exif:ifd0:image::name", "Software", "string");
            AddInfo("exif:subifd1:image::name", "Software", "string");
            AddInfo("exif:exififd:image::name", "Software", "string");
            AddInfo("exif:ifd0:image::name", "Modify Date", "string");
            AddInfo("exif:subifd1:image::name", "Modify Date", "string");
            AddInfo("exif:exififd:image::name", "Modify Date", "string");
            AddInfo("exif:ifd0:image::name", "Artist", "string");
            AddInfo("exif:subifd1:image::name", "Artist", "string");
            AddInfo("exif:exififd:image::name", "Artist", "string");
            AddInfo("exif:ifd0:image::name", "Host Computer", "string");
            AddInfo("exif:subifd1:image::name", "Host Computer", "string");
            AddInfo("exif:exififd:image::name", "Host Computer", "string");
            AddInfo("exif:ifd0:image::name", "Predictor", "int16u");
            AddInfo("exif:subifd1:image::name", "Predictor", "int16u");
            AddInfo("exif:exififd:image::name", "Predictor", "int16u");
            AddInfo("exif:ifd0:image::name", "White Point", "rational64u");
            AddInfo("exif:subifd1:image::name", "White Point", "rational64u");
            AddInfo("exif:exififd:image::name", "White Point", "rational64u");
            AddInfo("exif:ifd0:image::name", "Primary Chromaticities", "rational64u");
            AddInfo("exif:subifd1:image::name", "Primary Chromaticities", "rational64u");
            AddInfo("exif:exififd:image::name", "Primary Chromaticities", "rational64u");
            AddInfo("exif:ifd0:image::name", "Color Map", "binary");
            AddInfo("exif:subifd1:image::name", "Color Map", "binary");
            AddInfo("exif:exififd:image::name", "Color Map", "binary");
            AddInfo("exif:ifd0:image::name", "Halftone Hints", "int16u");
            AddInfo("exif:subifd1:image::name", "Halftone Hints", "int16u");
            AddInfo("exif:exififd:image::name", "Halftone Hints", "int16u");
            AddInfo("exif:ifd0:image::name", "Tile Width", "int32u");
            AddInfo("exif:subifd1:image::name", "Tile Width", "int32u");
            AddInfo("exif:exififd:image::name", "Tile Width", "int32u");
            AddInfo("exif:ifd0:image::name", "Tile Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Tile Length", "int32u");
            AddInfo("exif:exififd:image::name", "Tile Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Tile Offsets", "?");
            AddInfo("exif:subifd1:image::name", "Tile Offsets", "?");
            AddInfo("exif:exififd:image::name", "Tile Offsets", "?");
            AddInfo("exif:ifd0:image::name", "Tile Byte Counts", "?");
            AddInfo("exif:subifd1:image::name", "Tile Byte Counts", "?");
            AddInfo("exif:exififd:image::name", "Tile Byte Counts", "?");
            AddInfo("exif:ifd0:image::name", "Bad Fax Lines", "?");
            AddInfo("exif:subifd1:image::name", "Bad Fax Lines", "?");
            AddInfo("exif:exififd:image::name", "Bad Fax Lines", "?");
            AddInfo("exif:ifd0:image::name", "Clean Fax Data", "?");
            AddInfo("exif:subifd1:image::name", "Clean Fax Data", "?");
            AddInfo("exif:exififd:image::name", "Clean Fax Data", "?");
            AddInfo("exif:ifd0:image::name", "Consecutive Bad Fax Lines", "?");
            AddInfo("exif:subifd1:image::name", "Consecutive Bad Fax Lines", "?");
            AddInfo("exif:exififd:image::name", "Consecutive Bad Fax Lines", "?");
            AddInfo("exif:ifd0:image::name", "A100 Data Offset", "?");
            AddInfo("exif:subifd1:image::name", "A100 Data Offset", "?");
            AddInfo("exif:exififd:image::name", "A100 Data Offset", "?");
            AddInfo("exif:ifd0:image::name", "Ink Set", "int16u");
            AddInfo("exif:subifd1:image::name", "Ink Set", "int16u");
            AddInfo("exif:exififd:image::name", "Ink Set", "int16u");
            AddInfo("exif:ifd0:image::name", "Ink Names", "?");
            AddInfo("exif:subifd1:image::name", "Ink Names", "?");
            AddInfo("exif:exififd:image::name", "Ink Names", "?");
            AddInfo("exif:ifd0:image::name", "Numberof Inks", "?");
            AddInfo("exif:subifd1:image::name", "Numberof Inks", "?");
            AddInfo("exif:exififd:image::name", "Numberof Inks", "?");
            AddInfo("exif:ifd0:image::name", "Dot Range", "string");
            AddInfo("exif:subifd1:image::name", "Dot Range", "string");
            AddInfo("exif:exififd:image::name", "Dot Range", "string");
            AddInfo("exif:ifd0:image::name", "Target Printer", "?");
            AddInfo("exif:subifd1:image::name", "Target Printer", "?");
            AddInfo("exif:exififd:image::name", "Target Printer", "?");
            AddInfo("exif:ifd0:image::name", "Extra Samples", "?");
            AddInfo("exif:subifd1:image::name", "Extra Samples", "?");
            AddInfo("exif:exififd:image::name", "Extra Samples", "?");
            AddInfo("exif:ifd0:image::name", "Sample Format", "?");
            AddInfo("exif:subifd1:image::name", "Sample Format", "?");
            AddInfo("exif:exififd:image::name", "Sample Format", "?");
            AddInfo("exif:ifd0:image::name", "S Min Sample Value", "?");
            AddInfo("exif:subifd1:image::name", "S Min Sample Value", "?");
            AddInfo("exif:exififd:image::name", "S Min Sample Value", "?");
            AddInfo("exif:ifd0:image::name", "S Max Sample Value", "?");
            AddInfo("exif:subifd1:image::name", "S Max Sample Value", "?");
            AddInfo("exif:exififd:image::name", "S Max Sample Value", "?");
            AddInfo("exif:ifd0:image::name", "Transfer Range", "?");
            AddInfo("exif:subifd1:image::name", "Transfer Range", "?");
            AddInfo("exif:exififd:image::name", "Transfer Range", "?");
            AddInfo("exif:ifd0:image::name", "Clip Path", "?");
            AddInfo("exif:subifd1:image::name", "Clip Path", "?");
            AddInfo("exif:exififd:image::name", "Clip Path", "?");
            AddInfo("exif:ifd0:image::name", "X Clip Path Units", "?");
            AddInfo("exif:subifd1:image::name", "X Clip Path Units", "?");
            AddInfo("exif:exififd:image::name", "X Clip Path Units", "?");
            AddInfo("exif:ifd0:image::name", "Y Clip Path Units", "?");
            AddInfo("exif:subifd1:image::name", "Y Clip Path Units", "?");
            AddInfo("exif:exififd:image::name", "Y Clip Path Units", "?");
            AddInfo("exif:ifd0:image::name", "Indexed", "?");
            AddInfo("exif:subifd1:image::name", "Indexed", "?");
            AddInfo("exif:exififd:image::name", "Indexed", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Tables", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Tables", "?");
            AddInfo("exif:exififd:image::name", "JPEG Tables", "?");
            AddInfo("exif:ifd0:image::name", "OPI Proxy", "?");
            AddInfo("exif:subifd1:image::name", "OPI Proxy", "?");
            AddInfo("exif:exififd:image::name", "OPI Proxy", "?");
            AddInfo("exif:ifd0:image::name", "Profile Type", "?");
            AddInfo("exif:subifd1:image::name", "Profile Type", "?");
            AddInfo("exif:exififd:image::name", "Profile Type", "?");
            AddInfo("exif:ifd0:image::name", "Fax Profile", "?");
            AddInfo("exif:subifd1:image::name", "Fax Profile", "?");
            AddInfo("exif:exififd:image::name", "Fax Profile", "?");
            AddInfo("exif:ifd0:image::name", "Coding Methods", "?");
            AddInfo("exif:subifd1:image::name", "Coding Methods", "?");
            AddInfo("exif:exififd:image::name", "Coding Methods", "?");
            AddInfo("exif:ifd0:image::name", "Version Year", "?");
            AddInfo("exif:subifd1:image::name", "Version Year", "?");
            AddInfo("exif:exififd:image::name", "Version Year", "?");
            AddInfo("exif:ifd0:image::name", "Mode Number", "?");
            AddInfo("exif:subifd1:image::name", "Mode Number", "?");
            AddInfo("exif:exififd:image::name", "Mode Number", "?");
            AddInfo("exif:ifd0:image::name", "Decode", "?");
            AddInfo("exif:subifd1:image::name", "Decode", "?");
            AddInfo("exif:exififd:image::name", "Decode", "?");
            AddInfo("exif:ifd0:image::name", "Default Image Color", "?");
            AddInfo("exif:subifd1:image::name", "Default Image Color", "?");
            AddInfo("exif:exififd:image::name", "Default Image Color", "?");
            AddInfo("exif:ifd0:image::name", "T82 Options", "?");
            AddInfo("exif:subifd1:image::name", "T82 Options", "?");
            AddInfo("exif:exififd:image::name", "T82 Options", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Tables", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Tables", "?");
            AddInfo("exif:exififd:image::name", "JPEG Tables", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Proc", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Proc", "?");
            AddInfo("exif:exififd:image::name", "JPEG Proc", "?");
            AddInfo("exif:ifd0:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:ifd0:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:ifd0:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Offset", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Other Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Other Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Start", "int32u");
            AddInfo("exif:subifd1:image::name", "Other Image Start", "int32u");
            AddInfo("exif:exififd:image::name", "Other Image Start", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Start", "?");
            AddInfo("exif:subifd1:image::name", "Other Image Start", "?");
            AddInfo("exif:exififd:image::name", "Other Image Start", "?");
            AddInfo("exif:ifd0:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:exififd:image::name", "Thumbnail Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:exififd:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Other Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Other Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Length", "int32u");
            AddInfo("exif:subifd1:image::name", "Other Image Length", "int32u");
            AddInfo("exif:exififd:image::name", "Other Image Length", "int32u");
            AddInfo("exif:ifd0:image::name", "Other Image Length", "?");
            AddInfo("exif:subifd1:image::name", "Other Image Length", "?");
            AddInfo("exif:exififd:image::name", "Other Image Length", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Restart Interval", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Restart Interval", "?");
            AddInfo("exif:exififd:image::name", "JPEG Restart Interval", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Lossless Predictors", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Lossless Predictors", "?");
            AddInfo("exif:exififd:image::name", "JPEG Lossless Predictors", "?");
            AddInfo("exif:ifd0:image::name", "JPEG Point Transforms", "?");
            AddInfo("exif:subifd1:image::name", "JPEG Point Transforms", "?");
            AddInfo("exif:exififd:image::name", "JPEG Point Transforms", "?");
            AddInfo("exif:ifd0:image::name", "JPEGQ Tables", "?");
            AddInfo("exif:subifd1:image::name", "JPEGQ Tables", "?");
            AddInfo("exif:exififd:image::name", "JPEGQ Tables", "?");
            AddInfo("exif:ifd0:image::name", "JPEGDC Tables", "?");
            AddInfo("exif:subifd1:image::name", "JPEGDC Tables", "?");
            AddInfo("exif:exififd:image::name", "JPEGDC Tables", "?");
            AddInfo("exif:ifd0:image::name", "JPEGAC Tables", "?");
            AddInfo("exif:subifd1:image::name", "JPEGAC Tables", "?");
            AddInfo("exif:exififd:image::name", "JPEGAC Tables", "?");
            AddInfo("exif:ifd0:image::name", "Y Cb Cr Coefficients", "rational64u");
            AddInfo("exif:subifd1:image::name", "Y Cb Cr Coefficients", "rational64u");
            AddInfo("exif:exififd:image::name", "Y Cb Cr Coefficients", "rational64u");
            AddInfo("exif:ifd0:image::name", "Y Cb Cr Sub Sampling", "int16u");
            AddInfo("exif:subifd1:image::name", "Y Cb Cr Sub Sampling", "int16u");
            AddInfo("exif:exififd:image::name", "Y Cb Cr Sub Sampling", "int16u");
            AddInfo("exif:ifd0:image::name", "Y Cb Cr Positioning", "int16u");
            AddInfo("exif:subifd1:image::name", "Y Cb Cr Positioning", "int16u");
            AddInfo("exif:exififd:image::name", "Y Cb Cr Positioning", "int16u");
            AddInfo("exif:ifd0:image::name", "Reference Black White", "rational64u");
            AddInfo("exif:subifd1:image::name", "Reference Black White", "rational64u");
            AddInfo("exif:exififd:image::name", "Reference Black White", "rational64u");
            AddInfo("exif:ifd0:image::name", "Strip Row Counts", "?");
            AddInfo("exif:subifd1:image::name", "Strip Row Counts", "?");
            AddInfo("exif:exififd:image::name", "Strip Row Counts", "?");
            AddInfo("exif:ifd0:image::name", "Application Notes", "int8u");
            AddInfo("exif:subifd1:image::name", "Application Notes", "int8u");
            AddInfo("exif:exififd:image::name", "Application Notes", "int8u");
            AddInfo("exif:ifd0:image::name", "USPTO Miscellaneous", "?");
            AddInfo("exif:subifd1:image::name", "USPTO Miscellaneous", "?");
            AddInfo("exif:exififd:image::name", "USPTO Miscellaneous", "?");
            AddInfo("exif:ifd0:image::name", "Related Image File Format", "string");
            AddInfo("exif:subifd1:image::name", "Related Image File Format", "string");
            AddInfo("exif:exififd:image::name", "Related Image File Format", "string");
            AddInfo("exif:ifd0:image::name", "Related Image Width", "int16u");
            AddInfo("exif:subifd1:image::name", "Related Image Width", "int16u");
            AddInfo("exif:exififd:image::name", "Related Image Width", "int16u");
            AddInfo("exif:ifd0:image::name", "Related Image Height", "int16u");
            AddInfo("exif:subifd1:image::name", "Related Image Height", "int16u");
            AddInfo("exif:exififd:image::name", "Related Image Height", "int16u");
            AddInfo("exif:ifd0:image::name", "Rating", "int16u");
            AddInfo("exif:subifd1:image::name", "Rating", "int16u");
            AddInfo("exif:exififd:image::name", "Rating", "int16u");
            AddInfo("exif:ifd0:image::name", "XP DIP XML", "undef");
            AddInfo("exif:subifd1:image::name", "XP DIP XML", "undef");
            AddInfo("exif:exififd:image::name", "XP DIP XML", "undef");
            AddInfo("exif:ifd0:image::name", "Rating Percent", "int16u");
            AddInfo("exif:subifd1:image::name", "Rating Percent", "int16u");
            AddInfo("exif:exififd:image::name", "Rating Percent", "int16u");
            AddInfo("exif:ifd0:image::name", "Chromatic Aberration Corr Params", "?");
            AddInfo("exif:subifd1:image::name", "Chromatic Aberration Corr Params", "?");
            AddInfo("exif:exififd:image::name", "Chromatic Aberration Corr Params", "?");
            AddInfo("exif:ifd0:image::name", "Distortion Corr Params", "?");
            AddInfo("exif:subifd1:image::name", "Distortion Corr Params", "?");
            AddInfo("exif:exififd:image::name", "Distortion Corr Params", "?");
            AddInfo("exif:ifd0:image::name", "Image ID", "?");
            AddInfo("exif:subifd1:image::name", "Image ID", "?");
            AddInfo("exif:exififd:image::name", "Image ID", "?");
            AddInfo("exif:ifd0:image::name", "Wang Tag 1", "?");
            AddInfo("exif:subifd1:image::name", "Wang Tag 1", "?");
            AddInfo("exif:exififd:image::name", "Wang Tag 1", "?");
            AddInfo("exif:ifd0:image::name", "Wang Annotation", "?");
            AddInfo("exif:subifd1:image::name", "Wang Annotation", "?");
            AddInfo("exif:exififd:image::name", "Wang Annotation", "?");
            AddInfo("exif:ifd0:image::name", "Wang Tag 3", "?");
            AddInfo("exif:subifd1:image::name", "Wang Tag 3", "?");
            AddInfo("exif:exififd:image::name", "Wang Tag 3", "?");
            AddInfo("exif:ifd0:image::name", "Wang Tag 4", "?");
            AddInfo("exif:subifd1:image::name", "Wang Tag 4", "?");
            AddInfo("exif:exififd:image::name", "Wang Tag 4", "?");
            AddInfo("exif:ifd0:image::name", "Image Reference Points", "?");
            AddInfo("exif:subifd1:image::name", "Image Reference Points", "?");
            AddInfo("exif:exififd:image::name", "Image Reference Points", "?");
            AddInfo("exif:ifd0:image::name", "Region Xform Tack Point", "?");
            AddInfo("exif:subifd1:image::name", "Region Xform Tack Point", "?");
            AddInfo("exif:exififd:image::name", "Region Xform Tack Point", "?");
            AddInfo("exif:ifd0:image::name", "Warp Quadrilateral", "?");
            AddInfo("exif:subifd1:image::name", "Warp Quadrilateral", "?");
            AddInfo("exif:exififd:image::name", "Warp Quadrilateral", "?");
            AddInfo("exif:ifd0:image::name", "Affine Transform Mat", "?");
            AddInfo("exif:subifd1:image::name", "Affine Transform Mat", "?");
            AddInfo("exif:exififd:image::name", "Affine Transform Mat", "?");
            AddInfo("exif:ifd0:image::name", "Matteing", "?");
            AddInfo("exif:subifd1:image::name", "Matteing", "?");
            AddInfo("exif:exififd:image::name", "Matteing", "?");
            AddInfo("exif:ifd0:image::name", "Data Type", "?");
            AddInfo("exif:subifd1:image::name", "Data Type", "?");
            AddInfo("exif:exififd:image::name", "Data Type", "?");
            AddInfo("exif:ifd0:image::name", "Image Depth", "?");
            AddInfo("exif:subifd1:image::name", "Image Depth", "?");
            AddInfo("exif:exififd:image::name", "Image Depth", "?");
            AddInfo("exif:ifd0:image::name", "Tile Depth", "?");
            AddInfo("exif:subifd1:image::name", "Tile Depth", "?");
            AddInfo("exif:exififd:image::name", "Tile Depth", "?");
            AddInfo("exif:ifd0:image::name", "Image Full Width", "?");
            AddInfo("exif:subifd1:image::name", "Image Full Width", "?");
            AddInfo("exif:exififd:image::name", "Image Full Width", "?");
            AddInfo("exif:ifd0:image::name", "Image Full Height", "?");
            AddInfo("exif:subifd1:image::name", "Image Full Height", "?");
            AddInfo("exif:exififd:image::name", "Image Full Height", "?");
            AddInfo("exif:ifd0:image::name", "Texture Format", "?");
            AddInfo("exif:subifd1:image::name", "Texture Format", "?");
            AddInfo("exif:exififd:image::name", "Texture Format", "?");
            AddInfo("exif:ifd0:image::name", "Wrap Modes", "?");
            AddInfo("exif:subifd1:image::name", "Wrap Modes", "?");
            AddInfo("exif:exififd:image::name", "Wrap Modes", "?");
            AddInfo("exif:ifd0:image::name", "Fov Cot", "?");
            AddInfo("exif:subifd1:image::name", "Fov Cot", "?");
            AddInfo("exif:exififd:image::name", "Fov Cot", "?");
            AddInfo("exif:ifd0:image::name", "Matrix World To Screen", "?");
            AddInfo("exif:subifd1:image::name", "Matrix World To Screen", "?");
            AddInfo("exif:exififd:image::name", "Matrix World To Screen", "?");
            AddInfo("exif:ifd0:image::name", "Matrix World To Camera", "?");
            AddInfo("exif:subifd1:image::name", "Matrix World To Camera", "?");
            AddInfo("exif:exififd:image::name", "Matrix World To Camera", "?");
            AddInfo("exif:ifd0:image::name", "Model 2", "?");
            AddInfo("exif:subifd1:image::name", "Model 2", "?");
            AddInfo("exif:exififd:image::name", "Model 2", "?");
            AddInfo("exif:ifd0:image::name", "CFA Repeat Pattern Dim", "int16u");
            AddInfo("exif:subifd1:image::name", "CFA Repeat Pattern Dim", "int16u");
            AddInfo("exif:exififd:image::name", "CFA Repeat Pattern Dim", "int16u");
            AddInfo("exif:ifd0:image::name", "CFA Pattern 2", "int8u");
            AddInfo("exif:subifd1:image::name", "CFA Pattern 2", "int8u");
            AddInfo("exif:exififd:image::name", "CFA Pattern 2", "int8u");
            AddInfo("exif:ifd0:image::name", "Battery Level", "?");
            AddInfo("exif:subifd1:image::name", "Battery Level", "?");
            AddInfo("exif:exififd:image::name", "Battery Level", "?");
            AddInfo("exif:ifd0:image::name", "Copyright", "string");
            AddInfo("exif:subifd1:image::name", "Copyright", "string");
            AddInfo("exif:exififd:image::name", "Copyright", "string");
            AddInfo("exif:ifd0:image::name", "Exposure Time", "rational64u");
            AddInfo("exif:subifd1:image::name", "Exposure Time", "rational64u");
            AddInfo("exif:exififd:image::name", "Exposure Time", "rational64u");
            AddInfo("exif:ifd0:image::name", "F Number", "rational64u");
            AddInfo("exif:subifd1:image::name", "F Number", "rational64u");
            AddInfo("exif:exififd:image::name", "F Number", "rational64u");
            AddInfo("exif:ifd0:image::name", "MD File Tag", "?");
            AddInfo("exif:subifd1:image::name", "MD File Tag", "?");
            AddInfo("exif:exififd:image::name", "MD File Tag", "?");
            AddInfo("exif:ifd0:image::name", "MD Scale Pixel", "?");
            AddInfo("exif:subifd1:image::name", "MD Scale Pixel", "?");
            AddInfo("exif:exififd:image::name", "MD Scale Pixel", "?");
            AddInfo("exif:ifd0:image::name", "MD Color Table", "?");
            AddInfo("exif:subifd1:image::name", "MD Color Table", "?");
            AddInfo("exif:exififd:image::name", "MD Color Table", "?");
            AddInfo("exif:ifd0:image::name", "MD Lab Name", "?");
            AddInfo("exif:subifd1:image::name", "MD Lab Name", "?");
            AddInfo("exif:exififd:image::name", "MD Lab Name", "?");
            AddInfo("exif:ifd0:image::name", "MD Sample Info", "?");
            AddInfo("exif:subifd1:image::name", "MD Sample Info", "?");
            AddInfo("exif:exififd:image::name", "MD Sample Info", "?");
            AddInfo("exif:ifd0:image::name", "MD Prep Date", "?");
            AddInfo("exif:subifd1:image::name", "MD Prep Date", "?");
            AddInfo("exif:exififd:image::name", "MD Prep Date", "?");
            AddInfo("exif:ifd0:image::name", "MD Prep Time", "?");
            AddInfo("exif:subifd1:image::name", "MD Prep Time", "?");
            AddInfo("exif:exififd:image::name", "MD Prep Time", "?");
            AddInfo("exif:ifd0:image::name", "MD File Units", "?");
            AddInfo("exif:subifd1:image::name", "MD File Units", "?");
            AddInfo("exif:exififd:image::name", "MD File Units", "?");
            AddInfo("exif:ifd0:image::name", "Pixel Scale", "?");
            AddInfo("exif:subifd1:image::name", "Pixel Scale", "?");
            AddInfo("exif:exififd:image::name", "Pixel Scale", "?");
            AddInfo("exif:ifd0:image::name", "Advent Scale", "?");
            AddInfo("exif:subifd1:image::name", "Advent Scale", "?");
            AddInfo("exif:exififd:image::name", "Advent Scale", "?");
            AddInfo("exif:ifd0:image::name", "Advent Revision", "?");
            AddInfo("exif:subifd1:image::name", "Advent Revision", "?");
            AddInfo("exif:exififd:image::name", "Advent Revision", "?");
            AddInfo("exif:ifd0:image::name", "UIC1 Tag", "?");
            AddInfo("exif:subifd1:image::name", "UIC1 Tag", "?");
            AddInfo("exif:exififd:image::name", "UIC1 Tag", "?");
            AddInfo("exif:ifd0:image::name", "UIC2 Tag", "?");
            AddInfo("exif:subifd1:image::name", "UIC2 Tag", "?");
            AddInfo("exif:exififd:image::name", "UIC2 Tag", "?");
            AddInfo("exif:ifd0:image::name", "UIC3 Tag", "?");
            AddInfo("exif:subifd1:image::name", "UIC3 Tag", "?");
            AddInfo("exif:exififd:image::name", "UIC3 Tag", "?");
            AddInfo("exif:ifd0:image::name", "UIC4 Tag", "?");
            AddInfo("exif:subifd1:image::name", "UIC4 Tag", "?");
            AddInfo("exif:exififd:image::name", "UIC4 Tag", "?");
            AddInfo("exif:ifd0:image::name", "IPTC-NAA", "int32u");
            AddInfo("exif:subifd1:image::name", "IPTC-NAA", "int32u");
            AddInfo("exif:exififd:image::name", "IPTC-NAA", "int32u");
            AddInfo("exif:ifd0:image::name", "Intergraph Packet Data", "?");
            AddInfo("exif:subifd1:image::name", "Intergraph Packet Data", "?");
            AddInfo("exif:exififd:image::name", "Intergraph Packet Data", "?");
            AddInfo("exif:ifd0:image::name", "Intergraph Flag Registers", "?");
            AddInfo("exif:subifd1:image::name", "Intergraph Flag Registers", "?");
            AddInfo("exif:exififd:image::name", "Intergraph Flag Registers", "?");
            AddInfo("exif:ifd0:image::name", "Intergraph Matrix", "?");
            AddInfo("exif:subifd1:image::name", "Intergraph Matrix", "?");
            AddInfo("exif:exififd:image::name", "Intergraph Matrix", "?");
            AddInfo("exif:ifd0:image::name", "INGR Reserved", "?");
            AddInfo("exif:subifd1:image::name", "INGR Reserved", "?");
            AddInfo("exif:exififd:image::name", "INGR Reserved", "?");
            AddInfo("exif:ifd0:image::name", "Model Tie Point", "?");
            AddInfo("exif:subifd1:image::name", "Model Tie Point", "?");
            AddInfo("exif:exififd:image::name", "Model Tie Point", "?");
            AddInfo("exif:ifd0:image::name", "Site", "?");
            AddInfo("exif:subifd1:image::name", "Site", "?");
            AddInfo("exif:exififd:image::name", "Site", "?");
            AddInfo("exif:ifd0:image::name", "Color Sequence", "?");
            AddInfo("exif:subifd1:image::name", "Color Sequence", "?");
            AddInfo("exif:exififd:image::name", "Color Sequence", "?");
            AddInfo("exif:ifd0:image::name", "IT8 Header", "?");
            AddInfo("exif:subifd1:image::name", "IT8 Header", "?");
            AddInfo("exif:exififd:image::name", "IT8 Header", "?");
            AddInfo("exif:ifd0:image::name", "Raster Padding", "?");
            AddInfo("exif:subifd1:image::name", "Raster Padding", "?");
            AddInfo("exif:exififd:image::name", "Raster Padding", "?");
            AddInfo("exif:ifd0:image::name", "Bits Per Run Length", "?");
            AddInfo("exif:subifd1:image::name", "Bits Per Run Length", "?");
            AddInfo("exif:exififd:image::name", "Bits Per Run Length", "?");
            AddInfo("exif:ifd0:image::name", "Bits Per Extended Run Length", "?");
            AddInfo("exif:subifd1:image::name", "Bits Per Extended Run Length", "?");
            AddInfo("exif:exififd:image::name", "Bits Per Extended Run Length", "?");
            AddInfo("exif:ifd0:image::name", "Color Table", "?");
            AddInfo("exif:subifd1:image::name", "Color Table", "?");
            AddInfo("exif:exififd:image::name", "Color Table", "?");
            AddInfo("exif:ifd0:image::name", "Image Color Indicator", "?");
            AddInfo("exif:subifd1:image::name", "Image Color Indicator", "?");
            AddInfo("exif:exififd:image::name", "Image Color Indicator", "?");
            AddInfo("exif:ifd0:image::name", "Background Color Indicator", "?");
            AddInfo("exif:subifd1:image::name", "Background Color Indicator", "?");
            AddInfo("exif:exififd:image::name", "Background Color Indicator", "?");
            AddInfo("exif:ifd0:image::name", "Image Color Value", "?");
            AddInfo("exif:subifd1:image::name", "Image Color Value", "?");
            AddInfo("exif:exififd:image::name", "Image Color Value", "?");
            AddInfo("exif:ifd0:image::name", "Background Color Value", "?");
            AddInfo("exif:subifd1:image::name", "Background Color Value", "?");
            AddInfo("exif:exififd:image::name", "Background Color Value", "?");
            AddInfo("exif:ifd0:image::name", "Pixel Intensity Range", "?");
            AddInfo("exif:subifd1:image::name", "Pixel Intensity Range", "?");
            AddInfo("exif:exififd:image::name", "Pixel Intensity Range", "?");
            AddInfo("exif:ifd0:image::name", "Transparency Indicator", "?");
            AddInfo("exif:subifd1:image::name", "Transparency Indicator", "?");
            AddInfo("exif:exififd:image::name", "Transparency Indicator", "?");
            AddInfo("exif:ifd0:image::name", "Color Characterization", "?");
            AddInfo("exif:subifd1:image::name", "Color Characterization", "?");
            AddInfo("exif:exififd:image::name", "Color Characterization", "?");
            AddInfo("exif:ifd0:image::name", "HC Usage", "?");
            AddInfo("exif:subifd1:image::name", "HC Usage", "?");
            AddInfo("exif:exififd:image::name", "HC Usage", "?");
            AddInfo("exif:ifd0:image::name", "Trap Indicator", "?");
            AddInfo("exif:subifd1:image::name", "Trap Indicator", "?");
            AddInfo("exif:exififd:image::name", "Trap Indicator", "?");
            AddInfo("exif:ifd0:image::name", "CMYK Equivalent", "?");
            AddInfo("exif:subifd1:image::name", "CMYK Equivalent", "?");
            AddInfo("exif:exififd:image::name", "CMYK Equivalent", "?");
            AddInfo("exif:ifd0:image::name", "SEM Info", "string");
            AddInfo("exif:subifd1:image::name", "SEM Info", "string");
            AddInfo("exif:exififd:image::name", "SEM Info", "string");
            AddInfo("exif:ifd0:image::name", "Pixel Magic JBIG Options", "?");
            AddInfo("exif:subifd1:image::name", "Pixel Magic JBIG Options", "?");
            AddInfo("exif:exififd:image::name", "Pixel Magic JBIG Options", "?");
            AddInfo("exif:ifd0:image::name", "JPL Carto IFD", "?");
            AddInfo("exif:subifd1:image::name", "JPL Carto IFD", "?");
            AddInfo("exif:exififd:image::name", "JPL Carto IFD", "?");
            AddInfo("exif:ifd0:image::name", "Model Transform", "?");
            AddInfo("exif:subifd1:image::name", "Model Transform", "?");
            AddInfo("exif:exififd:image::name", "Model Transform", "?");
            AddInfo("exif:ifd0:image::name", "WB GRGB Levels", "?");
            AddInfo("exif:subifd1:image::name", "WB GRGB Levels", "?");
            AddInfo("exif:exififd:image::name", "WB GRGB Levels", "?");
            AddInfo("exif:ifd0:image::name", "TIFF FX Extensions", "?");
            AddInfo("exif:subifd1:image::name", "TIFF FX Extensions", "?");
            AddInfo("exif:exififd:image::name", "TIFF FX Extensions", "?");
            AddInfo("exif:ifd0:image::name", "Multi Profiles", "?");
            AddInfo("exif:subifd1:image::name", "Multi Profiles", "?");
            AddInfo("exif:exififd:image::name", "Multi Profiles", "?");
            AddInfo("exif:ifd0:image::name", "Shared Data", "?");
            AddInfo("exif:subifd1:image::name", "Shared Data", "?");
            AddInfo("exif:exififd:image::name", "Shared Data", "?");
            AddInfo("exif:ifd0:image::name", "T88 Options", "?");
            AddInfo("exif:subifd1:image::name", "T88 Options", "?");
            AddInfo("exif:exififd:image::name", "T88 Options", "?");
            AddInfo("exif:ifd0:image::name", "Image Layer", "?");
            AddInfo("exif:subifd1:image::name", "Image Layer", "?");
            AddInfo("exif:exififd:image::name", "Image Layer", "?");
            AddInfo("exif:ifd0:image::name", "Geo Tiff Directory", "undef");
            AddInfo("exif:subifd1:image::name", "Geo Tiff Directory", "undef");
            AddInfo("exif:exififd:image::name", "Geo Tiff Directory", "undef");
            AddInfo("exif:ifd0:image::name", "Geo Tiff Double Params", "undef");
            AddInfo("exif:subifd1:image::name", "Geo Tiff Double Params", "undef");
            AddInfo("exif:exififd:image::name", "Geo Tiff Double Params", "undef");
            AddInfo("exif:ifd0:image::name", "Geo Tiff Ascii Params", "string");
            AddInfo("exif:subifd1:image::name", "Geo Tiff Ascii Params", "string");
            AddInfo("exif:exififd:image::name", "Geo Tiff Ascii Params", "string");
            AddInfo("exif:ifd0:image::name", "JBIG Options", "?");
            AddInfo("exif:subifd1:image::name", "JBIG Options", "?");
            AddInfo("exif:exififd:image::name", "JBIG Options", "?");
            AddInfo("exif:ifd0:image::name", "Exposure Program", "int16u");
            AddInfo("exif:subifd1:image::name", "Exposure Program", "int16u");
            AddInfo("exif:exififd:image::name", "Exposure Program", "int16u");
            AddInfo("exif:ifd0:image::name", "Spectral Sensitivity", "string");
            AddInfo("exif:subifd1:image::name", "Spectral Sensitivity", "string");
            AddInfo("exif:exififd:image::name", "Spectral Sensitivity", "string");
            AddInfo("exif:ifd0:image::name", "ISO", "int16u");
            AddInfo("exif:subifd1:image::name", "ISO", "int16u");
            AddInfo("exif:exififd:image::name", "ISO", "int16u");
            AddInfo("exif:ifd0:image::name", "Opto-Electric Conv Factor", "?");
            AddInfo("exif:subifd1:image::name", "Opto-Electric Conv Factor", "?");
            AddInfo("exif:exififd:image::name", "Opto-Electric Conv Factor", "?");
            AddInfo("exif:ifd0:image::name", "Interlace", "?");
            AddInfo("exif:subifd1:image::name", "Interlace", "?");
            AddInfo("exif:exififd:image::name", "Interlace", "?");
            AddInfo("exif:ifd0:image::name", "Time Zone Offset", "int16s");
            AddInfo("exif:subifd1:image::name", "Time Zone Offset", "int16s");
            AddInfo("exif:exififd:image::name", "Time Zone Offset", "int16s");
            AddInfo("exif:ifd0:image::name", "Self Timer Mode", "int16u");
            AddInfo("exif:subifd1:image::name", "Self Timer Mode", "int16u");
            AddInfo("exif:exififd:image::name", "Self Timer Mode", "int16u");
            AddInfo("exif:ifd0:image::name", "Sensitivity Type", "int16u");
            AddInfo("exif:subifd1:image::name", "Sensitivity Type", "int16u");
            AddInfo("exif:exififd:image::name", "Sensitivity Type", "int16u");
            AddInfo("exif:ifd0:image::name", "Standard Output Sensitivity", "int32u");
            AddInfo("exif:subifd1:image::name", "Standard Output Sensitivity", "int32u");
            AddInfo("exif:exififd:image::name", "Standard Output Sensitivity", "int32u");
            AddInfo("exif:ifd0:image::name", "Recommended Exposure Index", "int32u");
            AddInfo("exif:subifd1:image::name", "Recommended Exposure Index", "int32u");
            AddInfo("exif:exififd:image::name", "Recommended Exposure Index", "int32u");
            AddInfo("exif:ifd0:image::name", "ISO Speed", "int32u");
            AddInfo("exif:subifd1:image::name", "ISO Speed", "int32u");
            AddInfo("exif:exififd:image::name", "ISO Speed", "int32u");
            AddInfo("exif:ifd0:image::name", "ISO Speed Latitude yyy", "int32u");
            AddInfo("exif:subifd1:image::name", "ISO Speed Latitude yyy", "int32u");
            AddInfo("exif:exififd:image::name", "ISO Speed Latitude yyy", "int32u");
            AddInfo("exif:ifd0:image::name", "ISO Speed Latitude zzz", "int32u");
            AddInfo("exif:subifd1:image::name", "ISO Speed Latitude zzz", "int32u");
            AddInfo("exif:exififd:image::name", "ISO Speed Latitude zzz", "int32u");
            AddInfo("exif:ifd0:image::name", "Fax Recv Params", "?");
            AddInfo("exif:subifd1:image::name", "Fax Recv Params", "?");
            AddInfo("exif:exififd:image::name", "Fax Recv Params", "?");
            AddInfo("exif:ifd0:image::name", "Fax Sub Address", "?");
            AddInfo("exif:subifd1:image::name", "Fax Sub Address", "?");
            AddInfo("exif:exififd:image::name", "Fax Sub Address", "?");
            AddInfo("exif:ifd0:image::name", "Fax Recv Time", "?");
            AddInfo("exif:subifd1:image::name", "Fax Recv Time", "?");
            AddInfo("exif:exififd:image::name", "Fax Recv Time", "?");
            AddInfo("exif:ifd0:image::name", "Fedex EDR", "?");
            AddInfo("exif:subifd1:image::name", "Fedex EDR", "?");
            AddInfo("exif:exififd:image::name", "Fedex EDR", "?");
            AddInfo("exif:ifd0:image::name", "Exif Version", "undef");
            AddInfo("exif:subifd1:image::name", "Exif Version", "undef");
            AddInfo("exif:exififd:image::name", "Exif Version", "undef");
            AddInfo("exif:ifd0:image::name", "Date/Time Original", "string");
            AddInfo("exif:subifd1:image::name", "Date/Time Original", "string");
            AddInfo("exif:exififd:image::name", "Date/Time Original", "string");
            AddInfo("exif:ifd0:image::name", "Create Date", "string");
            AddInfo("exif:subifd1:image::name", "Create Date", "string");
            AddInfo("exif:exififd:image::name", "Create Date", "string");
            AddInfo("exif:ifd0:image::name", "Google Plus Upload Code", "undef");
            AddInfo("exif:subifd1:image::name", "Google Plus Upload Code", "undef");
            AddInfo("exif:exififd:image::name", "Google Plus Upload Code", "undef");
            AddInfo("exif:ifd0:image::name", "Components Configuration", "undef");
            AddInfo("exif:subifd1:image::name", "Components Configuration", "undef");
            AddInfo("exif:exififd:image::name", "Components Configuration", "undef");
            AddInfo("exif:ifd0:image::name", "Compressed Bits Per Pixel", "rational64u");
            AddInfo("exif:subifd1:image::name", "Compressed Bits Per Pixel", "rational64u");
            AddInfo("exif:exififd:image::name", "Compressed Bits Per Pixel", "rational64u");
            AddInfo("exif:ifd0:image::name", "Shutter Speed Value", "rational64s");
            AddInfo("exif:subifd1:image::name", "Shutter Speed Value", "rational64s");
            AddInfo("exif:exififd:image::name", "Shutter Speed Value", "rational64s");
            AddInfo("exif:ifd0:image::name", "Aperture Value", "rational64u");
            AddInfo("exif:subifd1:image::name", "Aperture Value", "rational64u");
            AddInfo("exif:exififd:image::name", "Aperture Value", "rational64u");
            AddInfo("exif:ifd0:image::name", "Brightness Value", "rational64s");
            AddInfo("exif:subifd1:image::name", "Brightness Value", "rational64s");
            AddInfo("exif:exififd:image::name", "Brightness Value", "rational64s");
            AddInfo("exif:ifd0:image::name", "Exposure Compensation", "rational64s");
            AddInfo("exif:subifd1:image::name", "Exposure Compensation", "rational64s");
            AddInfo("exif:exififd:image::name", "Exposure Compensation", "rational64s");
            AddInfo("exif:ifd0:image::name", "Max Aperture Value", "rational64u");
            AddInfo("exif:subifd1:image::name", "Max Aperture Value", "rational64u");
            AddInfo("exif:exififd:image::name", "Max Aperture Value", "rational64u");
            AddInfo("exif:ifd0:image::name", "Subject Distance", "rational64u");
            AddInfo("exif:subifd1:image::name", "Subject Distance", "rational64u");
            AddInfo("exif:exififd:image::name", "Subject Distance", "rational64u");
            AddInfo("exif:ifd0:image::name", "Metering Mode", "int16u");
            AddInfo("exif:subifd1:image::name", "Metering Mode", "int16u");
            AddInfo("exif:exififd:image::name", "Metering Mode", "int16u");
            AddInfo("exif:ifd0:image::name", "Light Source", "int16u");
            AddInfo("exif:subifd1:image::name", "Light Source", "int16u");
            AddInfo("exif:exififd:image::name", "Light Source", "int16u");
            AddInfo("exif:ifd0:image::name", "Flash", "int16u");
            AddInfo("exif:subifd1:image::name", "Flash", "int16u");
            AddInfo("exif:exififd:image::name", "Flash", "int16u");
            AddInfo("exif:ifd0:image::name", "Focal Length", "rational64u");
            AddInfo("exif:subifd1:image::name", "Focal Length", "rational64u");
            AddInfo("exif:exififd:image::name", "Focal Length", "rational64u");
            AddInfo("exif:ifd0:image::name", "Flash Energy", "?");
            AddInfo("exif:subifd1:image::name", "Flash Energy", "?");
            AddInfo("exif:exififd:image::name", "Flash Energy", "?");
            AddInfo("exif:ifd0:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:subifd1:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:exififd:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:ifd0:image::name", "Noise", "?");
            AddInfo("exif:subifd1:image::name", "Noise", "?");
            AddInfo("exif:exififd:image::name", "Noise", "?");
            AddInfo("exif:ifd0:image::name", "Focal Plane X Resolution", "?");
            AddInfo("exif:subifd1:image::name", "Focal Plane X Resolution", "?");
            AddInfo("exif:exififd:image::name", "Focal Plane X Resolution", "?");
            AddInfo("exif:ifd0:image::name", "Focal Plane Y Resolution", "?");
            AddInfo("exif:subifd1:image::name", "Focal Plane Y Resolution", "?");
            AddInfo("exif:exififd:image::name", "Focal Plane Y Resolution", "?");
            AddInfo("exif:ifd0:image::name", "Focal Plane Resolution Unit", "?");
            AddInfo("exif:subifd1:image::name", "Focal Plane Resolution Unit", "?");
            AddInfo("exif:exififd:image::name", "Focal Plane Resolution Unit", "?");
            AddInfo("exif:ifd0:image::name", "Image Number", "int32u");
            AddInfo("exif:subifd1:image::name", "Image Number", "int32u");
            AddInfo("exif:exififd:image::name", "Image Number", "int32u");
            AddInfo("exif:ifd0:image::name", "Security Classification", "string");
            AddInfo("exif:subifd1:image::name", "Security Classification", "string");
            AddInfo("exif:exififd:image::name", "Security Classification", "string");
            AddInfo("exif:ifd0:image::name", "Image History", "string");
            AddInfo("exif:subifd1:image::name", "Image History", "string");
            AddInfo("exif:exififd:image::name", "Image History", "string");
            AddInfo("exif:ifd0:image::name", "Subject Area", "int16u");
            AddInfo("exif:subifd1:image::name", "Subject Area", "int16u");
            AddInfo("exif:exififd:image::name", "Subject Area", "int16u");
            AddInfo("exif:ifd0:image::name", "Exposure Index", "?");
            AddInfo("exif:subifd1:image::name", "Exposure Index", "?");
            AddInfo("exif:exififd:image::name", "Exposure Index", "?");
            AddInfo("exif:ifd0:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:subifd1:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:exififd:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:ifd0:image::name", "Sensing Method", "?");
            AddInfo("exif:subifd1:image::name", "Sensing Method", "?");
            AddInfo("exif:exififd:image::name", "Sensing Method", "?");
            AddInfo("exif:ifd0:image::name", "CIP3 Data File", "?");
            AddInfo("exif:subifd1:image::name", "CIP3 Data File", "?");
            AddInfo("exif:exififd:image::name", "CIP3 Data File", "?");
            AddInfo("exif:ifd0:image::name", "CIP3 Sheet", "?");
            AddInfo("exif:subifd1:image::name", "CIP3 Sheet", "?");
            AddInfo("exif:exififd:image::name", "CIP3 Sheet", "?");
            AddInfo("exif:ifd0:image::name", "CIP3 Side", "?");
            AddInfo("exif:subifd1:image::name", "CIP3 Side", "?");
            AddInfo("exif:exififd:image::name", "CIP3 Side", "?");
            AddInfo("exif:ifd0:image::name", "Sto Nits", "?");
            AddInfo("exif:subifd1:image::name", "Sto Nits", "?");
            AddInfo("exif:exififd:image::name", "Sto Nits", "?");
            AddInfo("exif:ifd0:image::name", "Maker Note Apple", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Apple", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Apple", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Nikon", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Nikon", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Nikon", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Canon", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Canon", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Canon", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Casio", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Casio", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Casio", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Casio 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Casio 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Casio 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note FLIR", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note FLIR", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note FLIR", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Fuji Film", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Fuji Film", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Fuji Film", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note GE", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note GE", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note GE", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note GE2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note GE2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note GE2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Hasselblad", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Hasselblad", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Hasselblad", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note HP", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note HP", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note HP", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note HP2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note HP2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note HP2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note HP4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note HP4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note HP4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note HP6", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note HP6", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note HP6", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note ISL", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note ISL", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note ISL", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note JVC", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note JVC", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note JVC", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note JVC Text", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note JVC Text", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note JVC Text", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 1a", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 1a", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 1a", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 1b", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 1b", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 1b", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 5", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 5", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 5", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 6a", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 6a", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 6a", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 6b", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 6b", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 6b", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 7", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 7", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 7", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 8a", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 8a", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 8a", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 8b", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 8b", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 8b", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 8c", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 8c", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 8c", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 9", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 9", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 9", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 10", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 10", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 10", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak 11", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak 11", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak 11", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kodak Unknown", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kodak Unknown", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kodak Unknown", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Kyocera", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Kyocera", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Kyocera", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Minolta", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Minolta", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Minolta", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Minolta 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Minolta 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Minolta 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Minolta 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Minolta 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Minolta 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Nikon 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Nikon 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Nikon 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Nikon 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Nikon 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Nikon 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Nintendo", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Nintendo", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Nintendo", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Olympus", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Olympus", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Olympus", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Olympus 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Olympus 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Olympus 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 5", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 5", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 5", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 6", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 6", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 6", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 7", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 7", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 7", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Leica 8", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Leica 8", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Leica 8", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Panasonic", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Panasonic", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Panasonic", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Panasonic 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Panasonic 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Panasonic 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax 4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax 4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax 4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax 5", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax 5", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax 5", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Pentax 6", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Pentax 6", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Pentax 6", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Phase One", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Phase One", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Phase One", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Reconyx", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Reconyx", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Reconyx", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Ricoh", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Ricoh", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Ricoh", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Ricoh 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Ricoh 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Ricoh 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Ricoh Text", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Ricoh Text", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Ricoh Text", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Samsung 1a", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Samsung 1a", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Samsung 1a", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Samsung 1b", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Samsung 1b", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Samsung 1b", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Samsung 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Samsung 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Samsung 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sanyo", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sanyo", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sanyo", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sanyo C4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sanyo C4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sanyo C4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sanyo Patch", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sanyo Patch", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sanyo Patch", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sigma", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sigma", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sigma", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony 2", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony 2", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony 2", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony 3", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony 3", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony 3", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony 4", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony 4", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony 4", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony 5", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony 5", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony 5", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony Ericsson", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony Ericsson", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony Ericsson", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Sony SRF", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Sony SRF", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Sony SRF", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Unknown Text", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Unknown Text", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Unknown Text", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Unknown Binary", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Unknown Binary", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Unknown Binary", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Unknown", "undef");
            AddInfo("exif:subifd1:image::name", "Maker Note Unknown", "undef");
            AddInfo("exif:exififd:image::name", "Maker Note Unknown", "undef");
            AddInfo("exif:ifd0:image::name", "User Comment", "undef");
            AddInfo("exif:subifd1:image::name", "User Comment", "undef");
            AddInfo("exif:exififd:image::name", "User Comment", "undef");
            AddInfo("exif:ifd0:image::name", "Sub Sec Time", "string");
            AddInfo("exif:subifd1:image::name", "Sub Sec Time", "string");
            AddInfo("exif:exififd:image::name", "Sub Sec Time", "string");
            AddInfo("exif:ifd0:image::name", "Sub Sec Time Original", "string");
            AddInfo("exif:subifd1:image::name", "Sub Sec Time Original", "string");
            AddInfo("exif:exififd:image::name", "Sub Sec Time Original", "string");
            AddInfo("exif:ifd0:image::name", "Sub Sec Time Digitized", "string");
            AddInfo("exif:subifd1:image::name", "Sub Sec Time Digitized", "string");
            AddInfo("exif:exififd:image::name", "Sub Sec Time Digitized", "string");
            AddInfo("exif:ifd0:image::name", "MS Document Text", "?");
            AddInfo("exif:subifd1:image::name", "MS Document Text", "?");
            AddInfo("exif:exififd:image::name", "MS Document Text", "?");
            AddInfo("exif:ifd0:image::name", "MS Property Set Storage", "?");
            AddInfo("exif:subifd1:image::name", "MS Property Set Storage", "?");
            AddInfo("exif:exififd:image::name", "MS Property Set Storage", "?");
            AddInfo("exif:ifd0:image::name", "MS Document Text Position", "?");
            AddInfo("exif:subifd1:image::name", "MS Document Text Position", "?");
            AddInfo("exif:exififd:image::name", "MS Document Text Position", "?");
            AddInfo("exif:ifd0:image::name", "Image Source Data", "undef");
            AddInfo("exif:subifd1:image::name", "Image Source Data", "undef");
            AddInfo("exif:exififd:image::name", "Image Source Data", "undef");
            AddInfo("exif:ifd0:image::name", "XP Title", "int8u");
            AddInfo("exif:subifd1:image::name", "XP Title", "int8u");
            AddInfo("exif:exififd:image::name", "XP Title", "int8u");
            AddInfo("exif:ifd0:image::name", "XP Comment", "int8u");
            AddInfo("exif:subifd1:image::name", "XP Comment", "int8u");
            AddInfo("exif:exififd:image::name", "XP Comment", "int8u");
            AddInfo("exif:ifd0:image::name", "XP Author", "int8u");
            AddInfo("exif:subifd1:image::name", "XP Author", "int8u");
            AddInfo("exif:exififd:image::name", "XP Author", "int8u");
            AddInfo("exif:ifd0:image::name", "XP Keywords", "int8u");
            AddInfo("exif:subifd1:image::name", "XP Keywords", "int8u");
            AddInfo("exif:exififd:image::name", "XP Keywords", "int8u");
            AddInfo("exif:ifd0:image::name", "XP Subject", "int8u");
            AddInfo("exif:subifd1:image::name", "XP Subject", "int8u");
            AddInfo("exif:exififd:image::name", "XP Subject", "int8u");
            AddInfo("exif:ifd0:image::name", "Flashpix Version", "undef");
            AddInfo("exif:subifd1:image::name", "Flashpix Version", "undef");
            AddInfo("exif:exififd:image::name", "Flashpix Version", "undef");
            AddInfo("exif:ifd0:image::name", "Color Space", "int16u");
            AddInfo("exif:subifd1:image::name", "Color Space", "int16u");
            AddInfo("exif:exififd:image::name", "Color Space", "int16u");
            AddInfo("exif:ifd0:image::name", "Exif Image Width", "int16u");
            AddInfo("exif:subifd1:image::name", "Exif Image Width", "int16u");
            AddInfo("exif:exififd:image::name", "Exif Image Width", "int16u");
            AddInfo("exif:ifd0:image::name", "Exif Image Height", "int16u");
            AddInfo("exif:subifd1:image::name", "Exif Image Height", "int16u");
            AddInfo("exif:exififd:image::name", "Exif Image Height", "int16u");
            AddInfo("exif:ifd0:image::name", "Related Sound File", "string");
            AddInfo("exif:subifd1:image::name", "Related Sound File", "string");
            AddInfo("exif:exififd:image::name", "Related Sound File", "string");
            AddInfo("exif:ifd0:image::name", "Flash Energy", "rational64u");
            AddInfo("exif:subifd1:image::name", "Flash Energy", "rational64u");
            AddInfo("exif:exififd:image::name", "Flash Energy", "rational64u");
            AddInfo("exif:ifd0:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:subifd1:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:exififd:image::name", "Spatial Frequency Response", "?");
            AddInfo("exif:ifd0:image::name", "Noise", "?");
            AddInfo("exif:subifd1:image::name", "Noise", "?");
            AddInfo("exif:exififd:image::name", "Noise", "?");
            AddInfo("exif:ifd0:image::name", "Focal Plane X Resolution", "rational64u");
            AddInfo("exif:subifd1:image::name", "Focal Plane X Resolution", "rational64u");
            AddInfo("exif:exififd:image::name", "Focal Plane X Resolution", "rational64u");
            AddInfo("exif:ifd0:image::name", "Focal Plane Y Resolution", "rational64u");
            AddInfo("exif:subifd1:image::name", "Focal Plane Y Resolution", "rational64u");
            AddInfo("exif:exififd:image::name", "Focal Plane Y Resolution", "rational64u");
            AddInfo("exif:ifd0:image::name", "Focal Plane Resolution Unit", "int16u");
            AddInfo("exif:subifd1:image::name", "Focal Plane Resolution Unit", "int16u");
            AddInfo("exif:exififd:image::name", "Focal Plane Resolution Unit", "int16u");
            AddInfo("exif:ifd0:image::name", "Image Number", "?");
            AddInfo("exif:subifd1:image::name", "Image Number", "?");
            AddInfo("exif:exififd:image::name", "Image Number", "?");
            AddInfo("exif:ifd0:image::name", "Security Classification", "?");
            AddInfo("exif:subifd1:image::name", "Security Classification", "?");
            AddInfo("exif:exififd:image::name", "Security Classification", "?");
            AddInfo("exif:ifd0:image::name", "Image History", "?");
            AddInfo("exif:subifd1:image::name", "Image History", "?");
            AddInfo("exif:exififd:image::name", "Image History", "?");
            AddInfo("exif:ifd0:image::name", "Subject Location", "int16u");
            AddInfo("exif:subifd1:image::name", "Subject Location", "int16u");
            AddInfo("exif:exififd:image::name", "Subject Location", "int16u");
            AddInfo("exif:ifd0:image::name", "Exposure Index", "rational64u");
            AddInfo("exif:subifd1:image::name", "Exposure Index", "rational64u");
            AddInfo("exif:exififd:image::name", "Exposure Index", "rational64u");
            AddInfo("exif:ifd0:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:subifd1:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:exififd:image::name", "TIFF-EP Standard ID", "?");
            AddInfo("exif:ifd0:image::name", "Sensing Method", "int16u");
            AddInfo("exif:subifd1:image::name", "Sensing Method", "int16u");
            AddInfo("exif:exififd:image::name", "Sensing Method", "int16u");
            AddInfo("exif:ifd0:image::name", "File Source", "undef");
            AddInfo("exif:subifd1:image::name", "File Source", "undef");
            AddInfo("exif:exififd:image::name", "File Source", "undef");
            AddInfo("exif:ifd0:image::name", "Scene Type", "undef");
            AddInfo("exif:subifd1:image::name", "Scene Type", "undef");
            AddInfo("exif:exififd:image::name", "Scene Type", "undef");
            AddInfo("exif:ifd0:image::name", "CFA Pattern", "undef");
            AddInfo("exif:subifd1:image::name", "CFA Pattern", "undef");
            AddInfo("exif:exififd:image::name", "CFA Pattern", "undef");
            AddInfo("exif:ifd0:image::name", "Custom Rendered", "int16u");
            AddInfo("exif:subifd1:image::name", "Custom Rendered", "int16u");
            AddInfo("exif:exififd:image::name", "Custom Rendered", "int16u");
            AddInfo("exif:ifd0:image::name", "Exposure Mode", "int16u");
            AddInfo("exif:subifd1:image::name", "Exposure Mode", "int16u");
            AddInfo("exif:exififd:image::name", "Exposure Mode", "int16u");
            AddInfo("exif:ifd0:image::name", "White Balance", "int16u");
            AddInfo("exif:subifd1:image::name", "White Balance", "int16u");
            AddInfo("exif:exififd:image::name", "White Balance", "int16u");
            AddInfo("exif:ifd0:image::name", "Digital Zoom Ratio", "rational64u");
            AddInfo("exif:subifd1:image::name", "Digital Zoom Ratio", "rational64u");
            AddInfo("exif:exififd:image::name", "Digital Zoom Ratio", "rational64u");
            AddInfo("exif:ifd0:image::name", "Focal Length In 35mm Format", "int16u");
            AddInfo("exif:subifd1:image::name", "Focal Length In 35mm Format", "int16u");
            AddInfo("exif:exififd:image::name", "Focal Length In 35mm Format", "int16u");
            AddInfo("exif:ifd0:image::name", "Scene Capture Type", "int16u");
            AddInfo("exif:subifd1:image::name", "Scene Capture Type", "int16u");
            AddInfo("exif:exififd:image::name", "Scene Capture Type", "int16u");
            AddInfo("exif:ifd0:image::name", "Gain Control", "int16u");
            AddInfo("exif:subifd1:image::name", "Gain Control", "int16u");
            AddInfo("exif:exififd:image::name", "Gain Control", "int16u");
            AddInfo("exif:ifd0:image::name", "Contrast", "int16u");
            AddInfo("exif:subifd1:image::name", "Contrast", "int16u");
            AddInfo("exif:exififd:image::name", "Contrast", "int16u");
            AddInfo("exif:ifd0:image::name", "Saturation", "int16u");
            AddInfo("exif:subifd1:image::name", "Saturation", "int16u");
            AddInfo("exif:exififd:image::name", "Saturation", "int16u");
            AddInfo("exif:ifd0:image::name", "Sharpness", "int16u");
            AddInfo("exif:subifd1:image::name", "Sharpness", "int16u");
            AddInfo("exif:exififd:image::name", "Sharpness", "int16u");
            AddInfo("exif:ifd0:image::name", "Device Setting Description", "?");
            AddInfo("exif:subifd1:image::name", "Device Setting Description", "?");
            AddInfo("exif:exififd:image::name", "Device Setting Description", "?");
            AddInfo("exif:ifd0:image::name", "Subject Distance Range", "int16u");
            AddInfo("exif:subifd1:image::name", "Subject Distance Range", "int16u");
            AddInfo("exif:exififd:image::name", "Subject Distance Range", "int16u");
            AddInfo("exif:ifd0:image::name", "Image Unique ID", "string");
            AddInfo("exif:subifd1:image::name", "Image Unique ID", "string");
            AddInfo("exif:exififd:image::name", "Image Unique ID", "string");
            AddInfo("exif:ifd0:image::name", "Owner Name", "string");
            AddInfo("exif:subifd1:image::name", "Owner Name", "string");
            AddInfo("exif:exififd:image::name", "Owner Name", "string");
            AddInfo("exif:ifd0:image::name", "Serial Number", "string");
            AddInfo("exif:subifd1:image::name", "Serial Number", "string");
            AddInfo("exif:exififd:image::name", "Serial Number", "string");
            AddInfo("exif:ifd0:image::name", "Lens Info", "rational64u");
            AddInfo("exif:subifd1:image::name", "Lens Info", "rational64u");
            AddInfo("exif:exififd:image::name", "Lens Info", "rational64u");
            AddInfo("exif:ifd0:image::name", "Lens Make", "string");
            AddInfo("exif:subifd1:image::name", "Lens Make", "string");
            AddInfo("exif:exififd:image::name", "Lens Make", "string");
            AddInfo("exif:ifd0:image::name", "Lens Model", "string");
            AddInfo("exif:subifd1:image::name", "Lens Model", "string");
            AddInfo("exif:exififd:image::name", "Lens Model", "string");
            AddInfo("exif:ifd0:image::name", "Lens Serial Number", "string");
            AddInfo("exif:subifd1:image::name", "Lens Serial Number", "string");
            AddInfo("exif:exififd:image::name", "Lens Serial Number", "string");
            AddInfo("exif:ifd0:image::name", "GDAL Metadata", "?");
            AddInfo("exif:subifd1:image::name", "GDAL Metadata", "?");
            AddInfo("exif:exififd:image::name", "GDAL Metadata", "?");
            AddInfo("exif:ifd0:image::name", "GDAL No Data", "?");
            AddInfo("exif:subifd1:image::name", "GDAL No Data", "?");
            AddInfo("exif:exififd:image::name", "GDAL No Data", "?");
            AddInfo("exif:ifd0:image::name", "Gamma", "rational64u");
            AddInfo("exif:subifd1:image::name", "Gamma", "rational64u");
            AddInfo("exif:exififd:image::name", "Gamma", "rational64u");
            AddInfo("exif:ifd0:image::name", "Expand Software", "?");
            AddInfo("exif:subifd1:image::name", "Expand Software", "?");
            AddInfo("exif:exififd:image::name", "Expand Software", "?");
            AddInfo("exif:ifd0:image::name", "Expand Lens", "?");
            AddInfo("exif:subifd1:image::name", "Expand Lens", "?");
            AddInfo("exif:exififd:image::name", "Expand Lens", "?");
            AddInfo("exif:ifd0:image::name", "Expand Film", "?");
            AddInfo("exif:subifd1:image::name", "Expand Film", "?");
            AddInfo("exif:exififd:image::name", "Expand Film", "?");
            AddInfo("exif:ifd0:image::name", "Expand Filter Lens", "?");
            AddInfo("exif:subifd1:image::name", "Expand Filter Lens", "?");
            AddInfo("exif:exififd:image::name", "Expand Filter Lens", "?");
            AddInfo("exif:ifd0:image::name", "Expand Scanner", "?");
            AddInfo("exif:subifd1:image::name", "Expand Scanner", "?");
            AddInfo("exif:exififd:image::name", "Expand Scanner", "?");
            AddInfo("exif:ifd0:image::name", "Expand Flash Lamp", "?");
            AddInfo("exif:subifd1:image::name", "Expand Flash Lamp", "?");
            AddInfo("exif:exififd:image::name", "Expand Flash Lamp", "?");
            AddInfo("exif:ifd0:image::name", "Pixel Format", "undef");
            AddInfo("exif:subifd1:image::name", "Pixel Format", "undef");
            AddInfo("exif:exififd:image::name", "Pixel Format", "undef");
            AddInfo("exif:ifd0:image::name", "Transformation", "?");
            AddInfo("exif:subifd1:image::name", "Transformation", "?");
            AddInfo("exif:exififd:image::name", "Transformation", "?");
            AddInfo("exif:ifd0:image::name", "Uncompressed", "?");
            AddInfo("exif:subifd1:image::name", "Uncompressed", "?");
            AddInfo("exif:exififd:image::name", "Uncompressed", "?");
            AddInfo("exif:ifd0:image::name", "Image Type", "?");
            AddInfo("exif:subifd1:image::name", "Image Type", "?");
            AddInfo("exif:exififd:image::name", "Image Type", "?");
            AddInfo("exif:ifd0:image::name", "Image Width", "?");
            AddInfo("exif:subifd1:image::name", "Image Width", "?");
            AddInfo("exif:exififd:image::name", "Image Width", "?");
            AddInfo("exif:ifd0:image::name", "Image Height", "?");
            AddInfo("exif:subifd1:image::name", "Image Height", "?");
            AddInfo("exif:exififd:image::name", "Image Height", "?");
            AddInfo("exif:ifd0:image::name", "Width Resolution", "?");
            AddInfo("exif:subifd1:image::name", "Width Resolution", "?");
            AddInfo("exif:exififd:image::name", "Width Resolution", "?");
            AddInfo("exif:ifd0:image::name", "Height Resolution", "?");
            AddInfo("exif:subifd1:image::name", "Height Resolution", "?");
            AddInfo("exif:exififd:image::name", "Height Resolution", "?");
            AddInfo("exif:ifd0:image::name", "Image Offset", "?");
            AddInfo("exif:subifd1:image::name", "Image Offset", "?");
            AddInfo("exif:exififd:image::name", "Image Offset", "?");
            AddInfo("exif:ifd0:image::name", "Image Byte Count", "?");
            AddInfo("exif:subifd1:image::name", "Image Byte Count", "?");
            AddInfo("exif:exififd:image::name", "Image Byte Count", "?");
            AddInfo("exif:ifd0:image::name", "Alpha Offset", "?");
            AddInfo("exif:subifd1:image::name", "Alpha Offset", "?");
            AddInfo("exif:exififd:image::name", "Alpha Offset", "?");
            AddInfo("exif:ifd0:image::name", "Alpha Byte Count", "?");
            AddInfo("exif:subifd1:image::name", "Alpha Byte Count", "?");
            AddInfo("exif:exififd:image::name", "Alpha Byte Count", "?");
            AddInfo("exif:ifd0:image::name", "Image Data Discard", "?");
            AddInfo("exif:subifd1:image::name", "Image Data Discard", "?");
            AddInfo("exif:exififd:image::name", "Image Data Discard", "?");
            AddInfo("exif:ifd0:image::name", "Alpha Data Discard", "?");
            AddInfo("exif:subifd1:image::name", "Alpha Data Discard", "?");
            AddInfo("exif:exififd:image::name", "Alpha Data Discard", "?");
            AddInfo("exif:ifd0:image::name", "Oce Scanjob Desc", "?");
            AddInfo("exif:subifd1:image::name", "Oce Scanjob Desc", "?");
            AddInfo("exif:exififd:image::name", "Oce Scanjob Desc", "?");
            AddInfo("exif:ifd0:image::name", "Oce Application Selector", "?");
            AddInfo("exif:subifd1:image::name", "Oce Application Selector", "?");
            AddInfo("exif:exififd:image::name", "Oce Application Selector", "?");
            AddInfo("exif:ifd0:image::name", "Oce ID Number", "?");
            AddInfo("exif:subifd1:image::name", "Oce ID Number", "?");
            AddInfo("exif:exififd:image::name", "Oce ID Number", "?");
            AddInfo("exif:ifd0:image::name", "Oce Image Logic", "?");
            AddInfo("exif:subifd1:image::name", "Oce Image Logic", "?");
            AddInfo("exif:exififd:image::name", "Oce Image Logic", "?");
            AddInfo("exif:ifd0:image::name", "Annotations", "?");
            AddInfo("exif:subifd1:image::name", "Annotations", "?");
            AddInfo("exif:exififd:image::name", "Annotations", "?");
            AddInfo("exif:ifd0:image::name", "Print Image Matching", "undef");
            AddInfo("exif:subifd1:image::name", "Print Image Matching", "undef");
            AddInfo("exif:exififd:image::name", "Print Image Matching", "undef");
            AddInfo("exif:ifd0:image::name", "Original File Name", "?");
            AddInfo("exif:subifd1:image::name", "Original File Name", "?");
            AddInfo("exif:exififd:image::name", "Original File Name", "?");
            AddInfo("exif:ifd0:image::name", "USPTO Original Content Type", "?");
            AddInfo("exif:subifd1:image::name", "USPTO Original Content Type", "?");
            AddInfo("exif:exififd:image::name", "USPTO Original Content Type", "?");
            AddInfo("exif:ifd0:image::name", "DNG Version", "int8u");
            AddInfo("exif:subifd1:image::name", "DNG Version", "int8u");
            AddInfo("exif:exififd:image::name", "DNG Version", "int8u");
            AddInfo("exif:ifd0:image::name", "DNG Backward Version", "int8u");
            AddInfo("exif:subifd1:image::name", "DNG Backward Version", "int8u");
            AddInfo("exif:exififd:image::name", "DNG Backward Version", "int8u");
            AddInfo("exif:ifd0:image::name", "Unique Camera Model", "string");
            AddInfo("exif:subifd1:image::name", "Unique Camera Model", "string");
            AddInfo("exif:exififd:image::name", "Unique Camera Model", "string");
            AddInfo("exif:ifd0:image::name", "Localized Camera Model", "string");
            AddInfo("exif:subifd1:image::name", "Localized Camera Model", "string");
            AddInfo("exif:exififd:image::name", "Localized Camera Model", "string");
            AddInfo("exif:ifd0:image::name", "CFA Plane Color", "?");
            AddInfo("exif:subifd1:image::name", "CFA Plane Color", "?");
            AddInfo("exif:exififd:image::name", "CFA Plane Color", "?");
            AddInfo("exif:ifd0:image::name", "CFA Layout", "?");
            AddInfo("exif:subifd1:image::name", "CFA Layout", "?");
            AddInfo("exif:exififd:image::name", "CFA Layout", "?");
            AddInfo("exif:ifd0:image::name", "Linearization Table", "int16u");
            AddInfo("exif:subifd1:image::name", "Linearization Table", "int16u");
            AddInfo("exif:exififd:image::name", "Linearization Table", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level Repeat Dim", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level Repeat Dim", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level Repeat Dim", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level", "rational64u");
            AddInfo("exif:subifd1:image::name", "Black Level", "rational64u");
            AddInfo("exif:exififd:image::name", "Black Level", "rational64u");
            AddInfo("exif:ifd0:image::name", "Black Level Delta H", "rational64s");
            AddInfo("exif:subifd1:image::name", "Black Level Delta H", "rational64s");
            AddInfo("exif:exififd:image::name", "Black Level Delta H", "rational64s");
            AddInfo("exif:ifd0:image::name", "Black Level Delta V", "rational64s");
            AddInfo("exif:subifd1:image::name", "Black Level Delta V", "rational64s");
            AddInfo("exif:exififd:image::name", "Black Level Delta V", "rational64s");
            AddInfo("exif:ifd0:image::name", "White Level", "int32u");
            AddInfo("exif:subifd1:image::name", "White Level", "int32u");
            AddInfo("exif:exififd:image::name", "White Level", "int32u");
            AddInfo("exif:ifd0:image::name", "Default Scale", "rational64u");
            AddInfo("exif:subifd1:image::name", "Default Scale", "rational64u");
            AddInfo("exif:exififd:image::name", "Default Scale", "rational64u");
            AddInfo("exif:ifd0:image::name", "Default Crop Origin", "int32u");
            AddInfo("exif:subifd1:image::name", "Default Crop Origin", "int32u");
            AddInfo("exif:exififd:image::name", "Default Crop Origin", "int32u");
            AddInfo("exif:ifd0:image::name", "Default Crop Size", "int32u");
            AddInfo("exif:subifd1:image::name", "Default Crop Size", "int32u");
            AddInfo("exif:exififd:image::name", "Default Crop Size", "int32u");
            AddInfo("exif:ifd0:image::name", "Color Matrix 1", "rational64s");
            AddInfo("exif:subifd1:image::name", "Color Matrix 1", "rational64s");
            AddInfo("exif:exififd:image::name", "Color Matrix 1", "rational64s");
            AddInfo("exif:ifd0:image::name", "Color Matrix 2", "rational64s");
            AddInfo("exif:subifd1:image::name", "Color Matrix 2", "rational64s");
            AddInfo("exif:exififd:image::name", "Color Matrix 2", "rational64s");
            AddInfo("exif:ifd0:image::name", "Camera Calibration 1", "rational64s");
            AddInfo("exif:subifd1:image::name", "Camera Calibration 1", "rational64s");
            AddInfo("exif:exififd:image::name", "Camera Calibration 1", "rational64s");
            AddInfo("exif:ifd0:image::name", "Camera Calibration 2", "rational64s");
            AddInfo("exif:subifd1:image::name", "Camera Calibration 2", "rational64s");
            AddInfo("exif:exififd:image::name", "Camera Calibration 2", "rational64s");
            AddInfo("exif:ifd0:image::name", "Reduction Matrix 1", "rational64s");
            AddInfo("exif:subifd1:image::name", "Reduction Matrix 1", "rational64s");
            AddInfo("exif:exififd:image::name", "Reduction Matrix 1", "rational64s");
            AddInfo("exif:ifd0:image::name", "Reduction Matrix 2", "rational64s");
            AddInfo("exif:subifd1:image::name", "Reduction Matrix 2", "rational64s");
            AddInfo("exif:exififd:image::name", "Reduction Matrix 2", "rational64s");
            AddInfo("exif:ifd0:image::name", "Analog Balance", "rational64u");
            AddInfo("exif:subifd1:image::name", "Analog Balance", "rational64u");
            AddInfo("exif:exififd:image::name", "Analog Balance", "rational64u");
            AddInfo("exif:ifd0:image::name", "As Shot Neutral", "rational64u");
            AddInfo("exif:subifd1:image::name", "As Shot Neutral", "rational64u");
            AddInfo("exif:exififd:image::name", "As Shot Neutral", "rational64u");
            AddInfo("exif:ifd0:image::name", "As Shot White XY", "rational64u");
            AddInfo("exif:subifd1:image::name", "As Shot White XY", "rational64u");
            AddInfo("exif:exififd:image::name", "As Shot White XY", "rational64u");
            AddInfo("exif:ifd0:image::name", "Baseline Exposure", "rational64s");
            AddInfo("exif:subifd1:image::name", "Baseline Exposure", "rational64s");
            AddInfo("exif:exififd:image::name", "Baseline Exposure", "rational64s");
            AddInfo("exif:ifd0:image::name", "Baseline Noise", "rational64u");
            AddInfo("exif:subifd1:image::name", "Baseline Noise", "rational64u");
            AddInfo("exif:exififd:image::name", "Baseline Noise", "rational64u");
            AddInfo("exif:ifd0:image::name", "Baseline Sharpness", "rational64u");
            AddInfo("exif:subifd1:image::name", "Baseline Sharpness", "rational64u");
            AddInfo("exif:exififd:image::name", "Baseline Sharpness", "rational64u");
            AddInfo("exif:ifd0:image::name", "Bayer Green Split", "int32u");
            AddInfo("exif:subifd1:image::name", "Bayer Green Split", "int32u");
            AddInfo("exif:exififd:image::name", "Bayer Green Split", "int32u");
            AddInfo("exif:ifd0:image::name", "Linear Response Limit", "rational64u");
            AddInfo("exif:subifd1:image::name", "Linear Response Limit", "rational64u");
            AddInfo("exif:exififd:image::name", "Linear Response Limit", "rational64u");
            AddInfo("exif:ifd0:image::name", "Camera Serial Number", "string");
            AddInfo("exif:subifd1:image::name", "Camera Serial Number", "string");
            AddInfo("exif:exififd:image::name", "Camera Serial Number", "string");
            AddInfo("exif:ifd0:image::name", "DNG Lens Info", "rational64u");
            AddInfo("exif:subifd1:image::name", "DNG Lens Info", "rational64u");
            AddInfo("exif:exififd:image::name", "DNG Lens Info", "rational64u");
            AddInfo("exif:ifd0:image::name", "Chroma Blur Radius", "rational64u");
            AddInfo("exif:subifd1:image::name", "Chroma Blur Radius", "rational64u");
            AddInfo("exif:exififd:image::name", "Chroma Blur Radius", "rational64u");
            AddInfo("exif:ifd0:image::name", "Anti Alias Strength", "rational64u");
            AddInfo("exif:subifd1:image::name", "Anti Alias Strength", "rational64u");
            AddInfo("exif:exififd:image::name", "Anti Alias Strength", "rational64u");
            AddInfo("exif:ifd0:image::name", "Shadow Scale", "rational64u");
            AddInfo("exif:subifd1:image::name", "Shadow Scale", "rational64u");
            AddInfo("exif:exififd:image::name", "Shadow Scale", "rational64u");
            AddInfo("exif:ifd0:image::name", "DNG Adobe Data", "undef");
            AddInfo("exif:subifd1:image::name", "DNG Adobe Data", "undef");
            AddInfo("exif:exififd:image::name", "DNG Adobe Data", "undef");
            AddInfo("exif:ifd0:image::name", "DNG Private Data", "undef");
            AddInfo("exif:subifd1:image::name", "DNG Private Data", "undef");
            AddInfo("exif:exififd:image::name", "DNG Private Data", "undef");
            AddInfo("exif:ifd0:image::name", "Maker Note Safety", "int16u");
            AddInfo("exif:subifd1:image::name", "Maker Note Safety", "int16u");
            AddInfo("exif:exififd:image::name", "Maker Note Safety", "int16u");
            AddInfo("exif:ifd0:image::name", "Raw Image Segmentation", "?");
            AddInfo("exif:subifd1:image::name", "Raw Image Segmentation", "?");
            AddInfo("exif:exififd:image::name", "Raw Image Segmentation", "?");
            AddInfo("exif:ifd0:image::name", "Calibration Illuminant 1", "int16u");
            AddInfo("exif:subifd1:image::name", "Calibration Illuminant 1", "int16u");
            AddInfo("exif:exififd:image::name", "Calibration Illuminant 1", "int16u");
            AddInfo("exif:ifd0:image::name", "Calibration Illuminant 2", "int16u");
            AddInfo("exif:subifd1:image::name", "Calibration Illuminant 2", "int16u");
            AddInfo("exif:exififd:image::name", "Calibration Illuminant 2", "int16u");
            AddInfo("exif:ifd0:image::name", "Best Quality Scale", "rational64u");
            AddInfo("exif:subifd1:image::name", "Best Quality Scale", "rational64u");
            AddInfo("exif:exififd:image::name", "Best Quality Scale", "rational64u");
            AddInfo("exif:ifd0:image::name", "Raw Data Unique ID", "int8u");
            AddInfo("exif:subifd1:image::name", "Raw Data Unique ID", "int8u");
            AddInfo("exif:exififd:image::name", "Raw Data Unique ID", "int8u");
            AddInfo("exif:ifd0:image::name", "Alias Layer Metadata", "?");
            AddInfo("exif:subifd1:image::name", "Alias Layer Metadata", "?");
            AddInfo("exif:exififd:image::name", "Alias Layer Metadata", "?");
            AddInfo("exif:ifd0:image::name", "Original Raw File Name", "string");
            AddInfo("exif:subifd1:image::name", "Original Raw File Name", "string");
            AddInfo("exif:exififd:image::name", "Original Raw File Name", "string");
            AddInfo("exif:ifd0:image::name", "Original Raw File Data", "undef");
            AddInfo("exif:subifd1:image::name", "Original Raw File Data", "undef");
            AddInfo("exif:exififd:image::name", "Original Raw File Data", "undef");
            AddInfo("exif:ifd0:image::name", "Active Area", "int32u");
            AddInfo("exif:subifd1:image::name", "Active Area", "int32u");
            AddInfo("exif:exififd:image::name", "Active Area", "int32u");
            AddInfo("exif:ifd0:image::name", "Masked Areas", "int32u");
            AddInfo("exif:subifd1:image::name", "Masked Areas", "int32u");
            AddInfo("exif:exififd:image::name", "Masked Areas", "int32u");
            AddInfo("exif:ifd0:image::name", "As Shot ICC Profile", "undef");
            AddInfo("exif:subifd1:image::name", "As Shot ICC Profile", "undef");
            AddInfo("exif:exififd:image::name", "As Shot ICC Profile", "undef");
            AddInfo("exif:ifd0:image::name", "As Shot Pre Profile Matrix", "rational64s");
            AddInfo("exif:subifd1:image::name", "As Shot Pre Profile Matrix", "rational64s");
            AddInfo("exif:exififd:image::name", "As Shot Pre Profile Matrix", "rational64s");
            AddInfo("exif:ifd0:image::name", "Current ICC Profile", "undef");
            AddInfo("exif:subifd1:image::name", "Current ICC Profile", "undef");
            AddInfo("exif:exififd:image::name", "Current ICC Profile", "undef");
            AddInfo("exif:ifd0:image::name", "Current Pre Profile Matrix", "rational64s");
            AddInfo("exif:subifd1:image::name", "Current Pre Profile Matrix", "rational64s");
            AddInfo("exif:exififd:image::name", "Current Pre Profile Matrix", "rational64s");
            AddInfo("exif:ifd0:image::name", "Colorimetric Reference", "int16u");
            AddInfo("exif:subifd1:image::name", "Colorimetric Reference", "int16u");
            AddInfo("exif:exififd:image::name", "Colorimetric Reference", "int16u");
            AddInfo("exif:ifd0:image::name", "SRaw Type", "?");
            AddInfo("exif:subifd1:image::name", "SRaw Type", "?");
            AddInfo("exif:exififd:image::name", "SRaw Type", "?");
            AddInfo("exif:ifd0:image::name", "Panasonic Title", "undef");
            AddInfo("exif:subifd1:image::name", "Panasonic Title", "undef");
            AddInfo("exif:exififd:image::name", "Panasonic Title", "undef");
            AddInfo("exif:ifd0:image::name", "Panasonic Title 2", "undef");
            AddInfo("exif:subifd1:image::name", "Panasonic Title 2", "undef");
            AddInfo("exif:exififd:image::name", "Panasonic Title 2", "undef");
            AddInfo("exif:ifd0:image::name", "Camera Calibration Sig", "string");
            AddInfo("exif:subifd1:image::name", "Camera Calibration Sig", "string");
            AddInfo("exif:exififd:image::name", "Camera Calibration Sig", "string");
            AddInfo("exif:ifd0:image::name", "Profile Calibration Sig", "string");
            AddInfo("exif:subifd1:image::name", "Profile Calibration Sig", "string");
            AddInfo("exif:exififd:image::name", "Profile Calibration Sig", "string");
            AddInfo("exif:ifd0:image::name", "As Shot Profile Name", "string");
            AddInfo("exif:subifd1:image::name", "As Shot Profile Name", "string");
            AddInfo("exif:exififd:image::name", "As Shot Profile Name", "string");
            AddInfo("exif:ifd0:image::name", "Noise Reduction Applied", "rational64u");
            AddInfo("exif:subifd1:image::name", "Noise Reduction Applied", "rational64u");
            AddInfo("exif:exififd:image::name", "Noise Reduction Applied", "rational64u");
            AddInfo("exif:ifd0:image::name", "Profile Name", "string");
            AddInfo("exif:subifd1:image::name", "Profile Name", "string");
            AddInfo("exif:exififd:image::name", "Profile Name", "string");
            AddInfo("exif:ifd0:image::name", "Profile Hue Sat Map Dims", "int32u");
            AddInfo("exif:subifd1:image::name", "Profile Hue Sat Map Dims", "int32u");
            AddInfo("exif:exififd:image::name", "Profile Hue Sat Map Dims", "int32u");
            AddInfo("exif:ifd0:image::name", "Profile Hue Sat Map Data 1", "float");
            AddInfo("exif:subifd1:image::name", "Profile Hue Sat Map Data 1", "float");
            AddInfo("exif:exififd:image::name", "Profile Hue Sat Map Data 1", "float");
            AddInfo("exif:ifd0:image::name", "Profile Hue Sat Map Data 2", "float");
            AddInfo("exif:subifd1:image::name", "Profile Hue Sat Map Data 2", "float");
            AddInfo("exif:exififd:image::name", "Profile Hue Sat Map Data 2", "float");
            AddInfo("exif:ifd0:image::name", "Profile Tone Curve", "float");
            AddInfo("exif:subifd1:image::name", "Profile Tone Curve", "float");
            AddInfo("exif:exififd:image::name", "Profile Tone Curve", "float");
            AddInfo("exif:ifd0:image::name", "Profile Embed Policy", "int32u");
            AddInfo("exif:subifd1:image::name", "Profile Embed Policy", "int32u");
            AddInfo("exif:exififd:image::name", "Profile Embed Policy", "int32u");
            AddInfo("exif:ifd0:image::name", "Profile Copyright", "string");
            AddInfo("exif:subifd1:image::name", "Profile Copyright", "string");
            AddInfo("exif:exififd:image::name", "Profile Copyright", "string");
            AddInfo("exif:ifd0:image::name", "Forward Matrix 1", "rational64s");
            AddInfo("exif:subifd1:image::name", "Forward Matrix 1", "rational64s");
            AddInfo("exif:exififd:image::name", "Forward Matrix 1", "rational64s");
            AddInfo("exif:ifd0:image::name", "Forward Matrix 2", "rational64s");
            AddInfo("exif:subifd1:image::name", "Forward Matrix 2", "rational64s");
            AddInfo("exif:exififd:image::name", "Forward Matrix 2", "rational64s");
            AddInfo("exif:ifd0:image::name", "Preview Application Name", "string");
            AddInfo("exif:subifd1:image::name", "Preview Application Name", "string");
            AddInfo("exif:exififd:image::name", "Preview Application Name", "string");
            AddInfo("exif:ifd0:image::name", "Preview Application Version", "string");
            AddInfo("exif:subifd1:image::name", "Preview Application Version", "string");
            AddInfo("exif:exififd:image::name", "Preview Application Version", "string");
            AddInfo("exif:ifd0:image::name", "Preview Settings Name", "string");
            AddInfo("exif:subifd1:image::name", "Preview Settings Name", "string");
            AddInfo("exif:exififd:image::name", "Preview Settings Name", "string");
            AddInfo("exif:ifd0:image::name", "Preview Settings Digest", "int8u");
            AddInfo("exif:subifd1:image::name", "Preview Settings Digest", "int8u");
            AddInfo("exif:exififd:image::name", "Preview Settings Digest", "int8u");
            AddInfo("exif:ifd0:image::name", "Preview Color Space", "int32u");
            AddInfo("exif:subifd1:image::name", "Preview Color Space", "int32u");
            AddInfo("exif:exififd:image::name", "Preview Color Space", "int32u");
            AddInfo("exif:ifd0:image::name", "Preview Date Time", "string");
            AddInfo("exif:subifd1:image::name", "Preview Date Time", "string");
            AddInfo("exif:exififd:image::name", "Preview Date Time", "string");
            AddInfo("exif:ifd0:image::name", "Raw Image Digest", "int8u");
            AddInfo("exif:subifd1:image::name", "Raw Image Digest", "int8u");
            AddInfo("exif:exififd:image::name", "Raw Image Digest", "int8u");
            AddInfo("exif:ifd0:image::name", "Original Raw File Digest", "int8u");
            AddInfo("exif:subifd1:image::name", "Original Raw File Digest", "int8u");
            AddInfo("exif:exififd:image::name", "Original Raw File Digest", "int8u");
            AddInfo("exif:ifd0:image::name", "Sub Tile Block Size", "?");
            AddInfo("exif:subifd1:image::name", "Sub Tile Block Size", "?");
            AddInfo("exif:exififd:image::name", "Sub Tile Block Size", "?");
            AddInfo("exif:ifd0:image::name", "Row Interleave Factor", "?");
            AddInfo("exif:subifd1:image::name", "Row Interleave Factor", "?");
            AddInfo("exif:exififd:image::name", "Row Interleave Factor", "?");
            AddInfo("exif:ifd0:image::name", "Profile Look Table Dims", "int32u");
            AddInfo("exif:subifd1:image::name", "Profile Look Table Dims", "int32u");
            AddInfo("exif:exififd:image::name", "Profile Look Table Dims", "int32u");
            AddInfo("exif:ifd0:image::name", "Profile Look Table Data", "float");
            AddInfo("exif:subifd1:image::name", "Profile Look Table Data", "float");
            AddInfo("exif:exififd:image::name", "Profile Look Table Data", "float");
            AddInfo("exif:ifd0:image::name", "Opcode List 1", "?");
            AddInfo("exif:subifd1:image::name", "Opcode List 1", "?");
            AddInfo("exif:exififd:image::name", "Opcode List 1", "?");
            AddInfo("exif:ifd0:image::name", "Opcode List 2", "?");
            AddInfo("exif:subifd1:image::name", "Opcode List 2", "?");
            AddInfo("exif:exififd:image::name", "Opcode List 2", "?");
            AddInfo("exif:ifd0:image::name", "Opcode List 3", "?");
            AddInfo("exif:subifd1:image::name", "Opcode List 3", "?");
            AddInfo("exif:exififd:image::name", "Opcode List 3", "?");
            AddInfo("exif:ifd0:image::name", "Noise Profile", "double");
            AddInfo("exif:subifd1:image::name", "Noise Profile", "double");
            AddInfo("exif:exififd:image::name", "Noise Profile", "double");
            AddInfo("exif:ifd0:image::name", "Time Codes", "int8u");
            AddInfo("exif:subifd1:image::name", "Time Codes", "int8u");
            AddInfo("exif:exififd:image::name", "Time Codes", "int8u");
            AddInfo("exif:ifd0:image::name", "Frame Rate", "rational64s");
            AddInfo("exif:subifd1:image::name", "Frame Rate", "rational64s");
            AddInfo("exif:exififd:image::name", "Frame Rate", "rational64s");
            AddInfo("exif:ifd0:image::name", "T Stop", "rational64u");
            AddInfo("exif:subifd1:image::name", "T Stop", "rational64u");
            AddInfo("exif:exififd:image::name", "T Stop", "rational64u");
            AddInfo("exif:ifd0:image::name", "Reel Name", "string");
            AddInfo("exif:subifd1:image::name", "Reel Name", "string");
            AddInfo("exif:exififd:image::name", "Reel Name", "string");
            AddInfo("exif:ifd0:image::name", "Original Default Final Size", "int32u");
            AddInfo("exif:subifd1:image::name", "Original Default Final Size", "int32u");
            AddInfo("exif:exififd:image::name", "Original Default Final Size", "int32u");
            AddInfo("exif:ifd0:image::name", "Original Best Quality Size", "int32u");
            AddInfo("exif:subifd1:image::name", "Original Best Quality Size", "int32u");
            AddInfo("exif:exififd:image::name", "Original Best Quality Size", "int32u");
            AddInfo("exif:ifd0:image::name", "Original Default Crop Size", "rational64u");
            AddInfo("exif:subifd1:image::name", "Original Default Crop Size", "rational64u");
            AddInfo("exif:exififd:image::name", "Original Default Crop Size", "rational64u");
            AddInfo("exif:ifd0:image::name", "Camera Label", "string");
            AddInfo("exif:subifd1:image::name", "Camera Label", "string");
            AddInfo("exif:exififd:image::name", "Camera Label", "string");
            AddInfo("exif:ifd0:image::name", "Profile Hue Sat Map Encoding", "int32u");
            AddInfo("exif:subifd1:image::name", "Profile Hue Sat Map Encoding", "int32u");
            AddInfo("exif:exififd:image::name", "Profile Hue Sat Map Encoding", "int32u");
            AddInfo("exif:ifd0:image::name", "Profile Look Table Encoding", "int32u");
            AddInfo("exif:subifd1:image::name", "Profile Look Table Encoding", "int32u");
            AddInfo("exif:exififd:image::name", "Profile Look Table Encoding", "int32u");
            AddInfo("exif:ifd0:image::name", "Baseline Exposure Offset", "rational64s");
            AddInfo("exif:subifd1:image::name", "Baseline Exposure Offset", "rational64s");
            AddInfo("exif:exififd:image::name", "Baseline Exposure Offset", "rational64s");
            AddInfo("exif:ifd0:image::name", "Default Black Render", "int32u");
            AddInfo("exif:subifd1:image::name", "Default Black Render", "int32u");
            AddInfo("exif:exififd:image::name", "Default Black Render", "int32u");
            AddInfo("exif:ifd0:image::name", "New Raw Image Digest", "int8u");
            AddInfo("exif:subifd1:image::name", "New Raw Image Digest", "int8u");
            AddInfo("exif:exififd:image::name", "New Raw Image Digest", "int8u");
            AddInfo("exif:ifd0:image::name", "Raw To Preview Gain", "double");
            AddInfo("exif:subifd1:image::name", "Raw To Preview Gain", "double");
            AddInfo("exif:exififd:image::name", "Raw To Preview Gain", "double");
            AddInfo("exif:ifd0:image::name", "Default User Crop", "rational64u");
            AddInfo("exif:subifd1:image::name", "Default User Crop", "rational64u");
            AddInfo("exif:exififd:image::name", "Default User Crop", "rational64u");
            AddInfo("exif:ifd0:image::name", "Padding", "undef");
            AddInfo("exif:subifd1:image::name", "Padding", "undef");
            AddInfo("exif:exififd:image::name", "Padding", "undef");
            AddInfo("exif:ifd0:image::name", "Offset Schema", "int32s");
            AddInfo("exif:subifd1:image::name", "Offset Schema", "int32s");
            AddInfo("exif:exififd:image::name", "Offset Schema", "int32s");
            AddInfo("exif:ifd0:image::name", "Owner Name", "string");
            AddInfo("exif:subifd1:image::name", "Owner Name", "string");
            AddInfo("exif:exififd:image::name", "Owner Name", "string");
            AddInfo("exif:ifd0:image::name", "Serial Number", "string");
            AddInfo("exif:subifd1:image::name", "Serial Number", "string");
            AddInfo("exif:exififd:image::name", "Serial Number", "string");
            AddInfo("exif:ifd0:image::name", "Lens", "string");
            AddInfo("exif:subifd1:image::name", "Lens", "string");
            AddInfo("exif:exififd:image::name", "Lens", "string");
            AddInfo("exif:ifd0:image::name", "Raw File", "string");
            AddInfo("exif:subifd1:image::name", "Raw File", "string");
            AddInfo("exif:exififd:image::name", "Raw File", "string");
            AddInfo("exif:ifd0:image::name", "Converter", "string");
            AddInfo("exif:subifd1:image::name", "Converter", "string");
            AddInfo("exif:exififd:image::name", "Converter", "string");
            AddInfo("exif:ifd0:image::name", "White Balance", "string");
            AddInfo("exif:subifd1:image::name", "White Balance", "string");
            AddInfo("exif:exififd:image::name", "White Balance", "string");
            AddInfo("exif:ifd0:image::name", "Exposure", "string");
            AddInfo("exif:subifd1:image::name", "Exposure", "string");
            AddInfo("exif:exififd:image::name", "Exposure", "string");
            AddInfo("exif:ifd0:image::name", "Shadows", "string");
            AddInfo("exif:subifd1:image::name", "Shadows", "string");
            AddInfo("exif:exififd:image::name", "Shadows", "string");
            AddInfo("exif:ifd0:image::name", "Brightness", "string");
            AddInfo("exif:subifd1:image::name", "Brightness", "string");
            AddInfo("exif:exififd:image::name", "Brightness", "string");
            AddInfo("exif:ifd0:image::name", "Contrast", "string");
            AddInfo("exif:subifd1:image::name", "Contrast", "string");
            AddInfo("exif:exififd:image::name", "Contrast", "string");
            AddInfo("exif:ifd0:image::name", "Saturation", "string");
            AddInfo("exif:subifd1:image::name", "Saturation", "string");
            AddInfo("exif:exififd:image::name", "Saturation", "string");
            AddInfo("exif:ifd0:image::name", "Sharpness", "string");
            AddInfo("exif:subifd1:image::name", "Sharpness", "string");
            AddInfo("exif:exififd:image::name", "Sharpness", "string");
            AddInfo("exif:ifd0:image::name", "Smoothness", "string");
            AddInfo("exif:subifd1:image::name", "Smoothness", "string");
            AddInfo("exif:exififd:image::name", "Smoothness", "string");
            AddInfo("exif:ifd0:image::name", "Moire Filter", "string");
            AddInfo("exif:subifd1:image::name", "Moire Filter", "string");
            AddInfo("exif:exififd:image::name", "Moire Filter", "string");
        }


        static void InitTable164()
        {
            AddInfo("file:file:image::name", "Adobe", "?");
            AddInfo("file:file:image::name", "Canon DR4", "?");
            AddInfo("file:file:image::name", "Canon VRD", "?");
            AddInfo("file:file:image::name", "Comment", "?");
            AddInfo("file:file:image::name", "Current IPTC Digest", "?");
            AddInfo("file:file:image::name", "Directory", "?");
            AddInfo("file:file:image::name", "EXIF", "?");
            AddInfo("file:file:image::name", "Error", "?");
            AddInfo("file:file:image::name", "Exif Byte Order", "?");
            AddInfo("file:file:image::name", "ExifTool Version Number", "?");
            AddInfo("file:file:image::name", "Exif Unicode Byte Order", "?");
            AddInfo("file:file:image::name", "File Access Date/Time", "?");
            AddInfo("file:file:image::name", "File Attributes", "?");
            AddInfo("file:file:image::name", "File Block Count", "?");
            AddInfo("file:file:image::name", "File Block Size", "?");
            AddInfo("file:file:image::name", "File Creation Date/Time", "?");
            AddInfo("file:file:image::name", "File Device ID", "?");
            AddInfo("file:file:image::name", "File Device Number", "?");
            AddInfo("file:file:image::name", "File Group ID", "?");
            AddInfo("file:file:image::name", "File Hard Links", "?");
            AddInfo("file:file:image::name", "File Inode Change Date/Time", "?");
            AddInfo("file:file:image::name", "File Inode Number", "?");
            AddInfo("file:file:image::name", "File Modification Date/Time", "?");
            AddInfo("file:file:image::name", "File Name", "?");
            AddInfo("file:file:image::name", "File Path", "?");
            AddInfo("file:file:image::name", "File Permissions", "?");
            AddInfo("file:file:image::name", "File Sequence", "?");
            AddInfo("file:file:image::name", "File Size", "?");
            AddInfo("file:file:image::name", "File Type", "?");
            AddInfo("file:file:image::name", "File Type Extension", "?");
            AddInfo("file:file:image::name", "File User ID", "?");
            AddInfo("file:file:image::name", "Geosync", "?");
            AddInfo("file:file:image::name", "Geotag", "?");
            AddInfo("file:file:image::name", "Geotime", "?");
            AddInfo("file:file:image::name", "Hard Link", "?");
            AddInfo("file:file:image::name", "ICC Profile", "?");
            AddInfo("file:file:image::name", "ID3 Size", "?");
            AddInfo("file:file:image::name", "IPTC", "?");
            AddInfo("file:file:image::name", "Image Height", "?");
            AddInfo("file:file:image::name", "Image Width", "?");
            AddInfo("file:file:image::name", "JPEG Digest", "?");
            AddInfo("file:file:image::name", "MIME Type", "?");
            AddInfo("file:file:image::name", "Max Val", "?");
            AddInfo("file:file:image::name", "New GUID", "?");
            AddInfo("file:file:image::name", "Now", "?");
            AddInfo("file:file:image::name", "Preview Image", "?");
            AddInfo("file:file:image::name", "Preview PNG", "?");
            AddInfo("file:file:image::name", "Preview WMF", "?");
            AddInfo("file:file:image::name", "Processing Time", "?");
            AddInfo("file:file:image::name", "RAF Version", "?");
            AddInfo("file:file:image::name", "Resource Fork Size", "?");
            AddInfo("file:file:image::name", "Test Name", "?");
            AddInfo("file:file:image::name", "Warning", "?");
            AddInfo("file:file:image::name", "XMP", "?");
            AddInfo("file:file:image::name", "X Resolution", "?");
            AddInfo("file:file:image::name", "Y Resolution", "?");
        }


        static void InitTable165()
        {
            AddInfo("flac:flac:other::name", "Padding", "?");
            AddInfo("flac:flac:other::name", "Application", "?");
            AddInfo("flac:flac:other::name", "Seek Table", "?");
            AddInfo("flac:flac:other::name", "Cue Sheet", "?");
        }


        static void InitTable166()
        {
            AddInfo("flac:flac:image::name", "Picture Type", "int32u");
            AddInfo("flac:flac:image::name", "Picture MIME Type", "var_pstr32");
            AddInfo("flac:flac:image::name", "Picture Description", "var_pstr32");
            AddInfo("flac:flac:image::name", "Picture Width", "int32u");
            AddInfo("flac:flac:image::name", "Picture Height", "int32u");
            AddInfo("flac:flac:image::name", "Picture Bits Per Pixel", "int32u");
            AddInfo("flac:flac:image::name", "Picture Indexed Colors", "int32u");
            AddInfo("flac:flac:image::name", "Picture Length", "int32u");
            AddInfo("flac:flac:image::name", "Picture", "undef");
        }


        static void InitTable167()
        {
            AddInfo("flac:flac:audio::name", "Block Size Min", "?");
            AddInfo("flac:flac:audio::name", "Block Size Max", "?");
            AddInfo("flac:flac:audio::name", "Frame Size Min", "?");
            AddInfo("flac:flac:audio::name", "Frame Size Max", "?");
            AddInfo("flac:flac:audio::name", "Sample Rate", "?");
            AddInfo("flac:flac:audio::name", "Channels", "?");
            AddInfo("flac:flac:audio::name", "Bits Per Sample", "?");
            AddInfo("flac:flac:audio::name", "Total Samples", "?");
        }


        static void InitTable168()
        {
            AddInfo("flir:flir:camera::name", "Raw Data Byte Order", "int16u");
            AddInfo("flir:flir:camera::name", "Sensor Width", "int16u");
            AddInfo("flir:flir:camera::name", "Sensor Height", "int16u");
        }


        static void InitTable169()
        {
            AddInfo("flir:flir:camera::name", "Raw Data Byte Order", "int16u");
            AddInfo("flir:flir:camera::name", "Sensor Width", "int16u");
            AddInfo("flir:flir:camera::name", "Sensor Height", "int16u");
        }


        static void InitTable170()
        {
            AddInfo("app1:flir:camera::name", "Camera Info Byte Order", "int16u");
            AddInfo("app1:flir:camera::name", "Emissivity", "float");
            AddInfo("app1:flir:camera::name", "Object Distance", "float");
            AddInfo("app1:flir:camera::name", "Reflected Apparent Temperature", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Temperature", "float");
            AddInfo("app1:flir:camera::name", "IR Window Temperature", "float");
            AddInfo("app1:flir:camera::name", "IR Window Transmission", "float");
            AddInfo("app1:flir:camera::name", "Relative Humidity", "float");
            AddInfo("app1:flir:camera::name", "Planck R1", "float");
            AddInfo("app1:flir:camera::name", "Planck B", "float");
            AddInfo("app1:flir:camera::name", "Planck F", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Trans Alpha 1", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Trans Alpha 2", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Trans Beta 1", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Trans Beta 2", "float");
            AddInfo("app1:flir:camera::name", "Atmospheric Trans X", "float");
            AddInfo("app1:flir:camera::name", "Camera Temperature Range Max", "float");
            AddInfo("app1:flir:camera::name", "Camera Temperature Range Min", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 1", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 2", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 3", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 4", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 5", "float");
            AddInfo("app1:flir:camera::name", "Unknown Temperature 6", "float");
            AddInfo("app1:flir:camera::name", "Camera Model", "string");
            AddInfo("app1:flir:camera::name", "Camera Part Number", "string");
            AddInfo("app1:flir:camera::name", "Camera Serial Number", "string");
            AddInfo("app1:flir:camera::name", "Camera Software", "string");
            AddInfo("app1:flir:camera::name", "Lens Model", "string");
            AddInfo("app1:flir:camera::name", "Lens Part Number", "string");
            AddInfo("app1:flir:camera::name", "Lens Serial Number", "string");
            AddInfo("app1:flir:camera::name", "Field Of View", "float");
            AddInfo("app1:flir:camera::name", "Filter Model", "string");
            AddInfo("app1:flir:camera::name", "Filter Part Number", "string");
            AddInfo("app1:flir:camera::name", "Filter Serial Number", "string");
            AddInfo("app1:flir:camera::name", "Planck O", "int32s");
            AddInfo("app1:flir:camera::name", "Planck R2", "float");
            AddInfo("app1:flir:camera::name", "Raw Value Median", "int16u");
            AddInfo("app1:flir:camera::name", "Raw Value Range", "int16u");
            AddInfo("app1:flir:camera::name", "Date/Time Original", "undef");
            AddInfo("app1:flir:camera::name", "Focus Step Count", "int16u");
            AddInfo("app1:flir:camera::name", "Focus Distance", "float");
        }


        static void InitTable171()
        {
            AddInfo("app1:flir:image::name", "Coarse Map Byte Order", "int16u");
            AddInfo("app1:flir:image::name", "Coarse Map Image Width", "int16u");
            AddInfo("app1:flir:image::name", "Coarse Map Image Height", "int16u");
            AddInfo("app1:flir:image::name", "Coarse Map Image Type", "undef");
            AddInfo("app1:flir:image::name", "Coarse Map Image", "int16u");
        }


        static void InitTable172()
        {
            AddInfo("app1:flir:image::name", "Embedded Image Byte Order", "int16u");
            AddInfo("app1:flir:image::name", "Embedded Image Width", "int16u");
            AddInfo("app1:flir:image::name", "Embedded Image Height", "int16u");
            AddInfo("app1:flir:image::name", "Embedded Image Type", "undef");
            AddInfo("app1:flir:image::name", "Embedded Image", "undef");
        }


        static void InitTable173()
        {
            AddInfo("app1:flir:image::name", "Embedded Audio File", "?");
        }


        static void InitTable174()
        {
            AddInfo("flir:flir:image::name", "FPF Version", "int32u");
            AddInfo("flir:flir:image::name", "Image Data Offset", "int32u");
            AddInfo("flir:flir:image::name", "Image Type", "int16u");
            AddInfo("flir:flir:image::name", "Image Pixel Format", "int16u");
            AddInfo("flir:flir:image::name", "Image Width", "int16u");
            AddInfo("flir:flir:image::name", "Image Height", "int16u");
            AddInfo("flir:flir:image::name", "External Trigger Count", "int32u");
            AddInfo("flir:flir:image::name", "Sequence Frame Number", "int32u");
            AddInfo("flir:flir:image::name", "Camera Model", "string");
            AddInfo("flir:flir:image::name", "Camera Part Number", "string");
            AddInfo("flir:flir:image::name", "Camera Serial Number", "string");
            AddInfo("flir:flir:image::name", "Camera Temperature Range Min", "float");
            AddInfo("flir:flir:image::name", "Camera Temperature Range Max", "float");
            AddInfo("flir:flir:image::name", "Lens Model", "string");
            AddInfo("flir:flir:image::name", "Lens Part Number", "string");
            AddInfo("flir:flir:image::name", "Lens Serial Number", "string");
            AddInfo("flir:flir:image::name", "Filter Model", "string");
            AddInfo("flir:flir:image::name", "Filter Part Number", "string");
            AddInfo("flir:flir:image::name", "Filter Serial Number", "string");
            AddInfo("flir:flir:image::name", "Emissivity", "float");
            AddInfo("flir:flir:image::name", "Object Distance", "float");
            AddInfo("flir:flir:image::name", "Reflected Apparent Temperature", "float");
            AddInfo("flir:flir:image::name", "Atmospheric Temperature", "float");
            AddInfo("flir:flir:image::name", "Relative Humidity", "float");
            AddInfo("flir:flir:image::name", "Computed Atmospheric Trans", "float");
            AddInfo("flir:flir:image::name", "Estimated Atmospheric Trans", "float");
            AddInfo("flir:flir:image::name", "Reference Temperature", "float");
            AddInfo("flir:flir:image::name", "IR Window Temperature", "float");
            AddInfo("flir:flir:image::name", "IR Window Transmission", "float");
            AddInfo("flir:flir:image::name", "Date/Time Original", "int32u");
            AddInfo("flir:flir:image::name", "Camera Scale Min", "float");
            AddInfo("flir:flir:image::name", "Camera Scale Max", "float");
            AddInfo("flir:flir:image::name", "Calculated Scale Min", "float");
            AddInfo("flir:flir:image::name", "Calculated Scale Max", "float");
            AddInfo("flir:flir:image::name", "Actual Scale Min", "float");
            AddInfo("flir:flir:image::name", "Actual Scale Max", "float");
        }


        static void InitTable175()
        {
            AddInfo("app1:flir:image::name", "GPS Map Datum", "string");
        }


        static void InitTable176()
        {
            AddInfo("makernotes:flir:location::name", "GPS Latitude", "float");
            AddInfo("makernotes:flir:location::name", "GPS Longitude", "float");
            AddInfo("makernotes:flir:location::name", "GPS Altitude", "float");
        }


        static void InitTable177()
        {
            AddInfo("app1:flir:image::name", "Gain Dead Map Byte Order", "int16u");
            AddInfo("app1:flir:image::name", "Gain Dead Map Image Width", "int16u");
            AddInfo("app1:flir:image::name", "Gain Dead Map Image Height", "int16u");
            AddInfo("app1:flir:image::name", "Gain Dead Map Image Type", "undef");
            AddInfo("app1:flir:image::name", "Gain Dead Map Image", "int16u");
        }


        static void InitTable178()
        {
            AddInfo("app1:flir:image::name", "Creator Software", "string");
        }


        static void InitTable179()
        {
            AddInfo("makernotes:flir:camera::name", "Image Temperature Max", "rational64u");
            AddInfo("makernotes:flir:camera::name", "Image Temperature Min", "rational64u");
            AddInfo("makernotes:flir:camera::name", "Emissivity", "rational64u");
            AddInfo("makernotes:flir:camera::name", "Unknown Temperature", "rational64u");
            AddInfo("makernotes:flir:camera::name", "Camera Temperature Range Max", "rational64u");
            AddInfo("makernotes:flir:camera::name", "Camera Temperature Range Min", "rational64u");
        }


        static void InitTable180()
        {
            AddInfo("app1:flir:image::name", "Meas 1 Label", "int16u");
            AddInfo("app1:flir:image::name", "Meas 1 Params", "int16u");
            AddInfo("app1:flir:image::name", "Meas 1 Type", "int16u");
        }


        static void InitTable181()
        {
            AddInfo("app1:flir:image::name", "Reading 1 Units", "int8u");
            AddInfo("app1:flir:image::name", "Reading 1 Description", "int8u");
            AddInfo("app1:flir:image::name", "Reading 1 Device", "string");
            AddInfo("app1:flir:image::name", "Reading 1 Value", "double");
            AddInfo("app1:flir:image::name", "Reading 2 Units", "int8u");
            AddInfo("app1:flir:image::name", "Reading 2 Description", "int8u");
            AddInfo("app1:flir:image::name", "Reading 2 Device", "string");
            AddInfo("app1:flir:image::name", "Reading 2 Value", "double");
            AddInfo("app1:flir:image::name", "Reading 3 Units", "int8u");
            AddInfo("app1:flir:image::name", "Reading 3 Description", "int8u");
            AddInfo("app1:flir:image::name", "Reading 3 Device", "string");
            AddInfo("app1:flir:image::name", "Reading 3 Value", "double");
            AddInfo("app1:flir:image::name", "Reading 4 Units", "int8u");
            AddInfo("app1:flir:image::name", "Reading 4 Description", "int8u");
            AddInfo("app1:flir:image::name", "Reading 4 Device", "string");
            AddInfo("app1:flir:image::name", "Reading 4 Value", "double");
        }


        static void InitTable182()
        {
            AddInfo("makernotes:flir:camera::name", "Lens Model", "string");
            AddInfo("makernotes:flir:camera::name", "Unknown Temperature 1", "float");
            AddInfo("makernotes:flir:camera::name", "Unknown Temperature 2", "float");
        }


        static void InitTable183()
        {
            AddInfo("app1:flir:image::name", "Paint Byte Order", "int16u");
            AddInfo("app1:flir:image::name", "Paint Image Width", "int16u");
            AddInfo("app1:flir:image::name", "Paint Image Height", "int16u");
            AddInfo("app1:flir:image::name", "Paint Image Type", "undef");
            AddInfo("app1:flir:image::name", "Paint Image", "int16u");
        }


        static void InitTable184()
        {
            AddInfo("app1:flir:image::name", "Palette Colors", "int8u");
            AddInfo("app1:flir:image::name", "Above Color", "int8u");
            AddInfo("app1:flir:image::name", "Below Color", "int8u");
            AddInfo("app1:flir:image::name", "Overflow Color", "int8u");
            AddInfo("app1:flir:image::name", "Underflow Color", "int8u");
            AddInfo("app1:flir:image::name", "Isotherm 1 Color", "int8u");
            AddInfo("app1:flir:image::name", "Isotherm 2 Color", "int8u");
            AddInfo("app1:flir:image::name", "Palette Method", "int8u");
            AddInfo("app1:flir:image::name", "Palette Stretch", "int8u");
            AddInfo("app1:flir:image::name", "Palette File Name", "string");
            AddInfo("app1:flir:image::name", "Palette Name", "string");
            AddInfo("app1:flir:image::name", "Palette", "undef");
        }


        static void InitTable185()
        {
            AddInfo("app1:flir:image::name", "Date/Time Generated", "?");
            AddInfo("app1:flir:image::name", "Param 0", "?");
            AddInfo("app1:flir:image::name", "Param 1", "?");
            AddInfo("app1:flir:image::name", "Param 2", "?");
            AddInfo("app1:flir:image::name", "Param 3", "?");
        }


        static void InitTable186()
        {
            AddInfo("makernotes:flir:camera::name", "Reflected Apparent Temperature", "float");
            AddInfo("makernotes:flir:camera::name", "Atmospheric Temperature", "float");
            AddInfo("makernotes:flir:camera::name", "Emissivity", "float");
            AddInfo("makernotes:flir:camera::name", "Object Distance", "float");
            AddInfo("makernotes:flir:camera::name", "Relative Humidity", "float");
            AddInfo("makernotes:flir:camera::name", "Estimated Atmospheric Trans", "float");
            AddInfo("makernotes:flir:camera::name", "IR Window Temperature", "float");
            AddInfo("makernotes:flir:camera::name", "IR Window Transmission", "float");
        }


        static void InitTable187()
        {
            AddInfo("makernotes:flir:camera::name", "BAHP Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "BALP Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "Battery", "undef");
            AddInfo("makernotes:flir:camera::name", "BAVP Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "Cam Core", "undef");
            AddInfo("makernotes:flir:camera::name", "Detector Board", "undef");
            AddInfo("makernotes:flir:camera::name", "Detector", "undef");
            AddInfo("makernotes:flir:camera::name", "GIDC Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "GIDP Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "GIPC CPLD", "undef");
            AddInfo("makernotes:flir:camera::name", "GIPC Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "GIXI Ver", "undef");
            AddInfo("makernotes:flir:camera::name", "Main Board", "undef");
            AddInfo("makernotes:flir:camera::name", "Optics", "undef");
            AddInfo("makernotes:flir:camera::name", "Part Number", "undef");
        }


        static void InitTable188()
        {
            AddInfo("app1:flir:image::name", "Real 2 IR", "float");
            AddInfo("app1:flir:image::name", "Offset X", "int16s");
            AddInfo("app1:flir:image::name", "Offset Y", "int16s");
            AddInfo("app1:flir:image::name", "PiP X1", "int16s");
            AddInfo("app1:flir:image::name", "PiP X2", "int16s");
            AddInfo("app1:flir:image::name", "PiP Y1", "int16s");
            AddInfo("app1:flir:image::name", "PiP Y2", "int16s");
        }


        static void InitTable189()
        {
            AddInfo("app1:flir:image::name", "Raw Data Byte Order", "int16u");
            AddInfo("app1:flir:image::name", "Raw Thermal Image Width", "int16u");
            AddInfo("app1:flir:image::name", "Raw Thermal Image Height", "int16u");
            AddInfo("app1:flir:image::name", "Raw Thermal Image Type", "undef");
            AddInfo("app1:flir:image::name", "Raw Thermal Image", "int16u");
        }


        static void InitTable190()
        {
            AddInfo("makernotes:flir:camera::name", "Unknown Serial 1", "string");
            AddInfo("makernotes:flir:camera::name", "Unknown Serial 2", "string");
            AddInfo("makernotes:flir:camera::name", "Unknown Serial 3", "string");
            AddInfo("makernotes:flir:camera::name", "Unknown Serial 4", "string");
            AddInfo("makernotes:flir:camera::name", "Unknown Number", "string");
            AddInfo("makernotes:flir:camera::name", "Camera Serial Number", "string");
        }


        static void InitTable191()
        {
            AddInfo("app1:flir:image::name", "Label 0", "?");
            AddInfo("app1:flir:image::name", "Label 1", "?");
            AddInfo("app1:flir:image::name", "Label 2", "?");
            AddInfo("app1:flir:image::name", "Label 3", "?");
            AddInfo("app1:flir:image::name", "Value 0", "?");
            AddInfo("app1:flir:image::name", "Value 1", "?");
            AddInfo("app1:flir:image::name", "Value 2", "?");
            AddInfo("app1:flir:image::name", "Value 3", "?");
        }


        static void InitTable192()
        {
            AddInfo("flir:flir:camera::name", "Software Components", "?");
            AddInfo("flir:flir:camera::name", "FLIR Unknown", "?");
            AddInfo("flir:flir:camera::name", "Units", "?");
            AddInfo("flir:flir:camera::name", "Thumbnail Image", "?");
        }


        static void InitTable193()
        {
            AddInfo("flash:flash:audio::name", "Audio Encoding", "?");
            AddInfo("flash:flash:audio::name", "Audio Sample Rate", "?");
            AddInfo("flash:flash:audio::name", "Audio Bits Per Sample", "?");
            AddInfo("flash:flash:audio::name", "Audio Channels", "?");
        }


        static void InitTable194()
        {
            AddInfo("flash:flash:video::name", "Name", "?");
            AddInfo("flash:flash:video::name", "Time", "?");
            AddInfo("flash:flash:video::name", "Type", "?");
        }


        static void InitTable195()
        {
            AddInfo("flash:flash:video::name", "Compressed", "?");
            AddInfo("flash:flash:video::name", "Duration", "?");
            AddInfo("flash:flash:video::name", "Flash Version", "?");
            AddInfo("flash:flash:video::name", "Frame Count", "?");
            AddInfo("flash:flash:video::name", "Frame Rate", "?");
            AddInfo("flash:flash:video::name", "Image Height", "?");
            AddInfo("flash:flash:video::name", "Image Width", "?");
            AddInfo("flash:flash:video::name", "Flash Attributes", "?");
        }


        static void InitTable196()
        {
            AddInfo("flash:flash:video::name", "Audio Codec ID", "?");
            AddInfo("flash:flash:video::name", "Audio Bitrate", "?");
            AddInfo("flash:flash:video::name", "Audio Delay", "?");
            AddInfo("flash:flash:video::name", "Audio Sample Rate", "?");
            AddInfo("flash:flash:video::name", "Audio Sample Size", "?");
            AddInfo("flash:flash:video::name", "Audio Size", "?");
            AddInfo("flash:flash:video::name", "Byte Length", "?");
            AddInfo("flash:flash:video::name", "Can Seek To End", "?");
            AddInfo("flash:flash:video::name", "Can Seek On Time", "?");
            AddInfo("flash:flash:video::name", "Created By", "?");
            AddInfo("flash:flash:video::name", "Create Date", "?");
            AddInfo("flash:flash:video::name", "Data Size", "?");
            AddInfo("flash:flash:video::name", "Duration", "?");
            AddInfo("flash:flash:video::name", "File Size Bytes", "?");
            AddInfo("flash:flash:video::name", "Frame Rate", "?");
            AddInfo("flash:flash:video::name", "Has Audio", "?");
            AddInfo("flash:flash:video::name", "Has Cue Points", "?");
            AddInfo("flash:flash:video::name", "Has Key Frames", "?");
            AddInfo("flash:flash:video::name", "Has Metadata", "?");
            AddInfo("flash:flash:video::name", "Has Video", "?");
            AddInfo("flash:flash:video::name", "Image Height", "?");
            AddInfo("flash:flash:video::name", "HTTP Host Header", "?");
            AddInfo("flash:flash:video::name", "Key Frame Positions", "?");
            AddInfo("flash:flash:video::name", "Key Frames Times", "?");
            AddInfo("flash:flash:video::name", "Last Key Frame Time", "?");
            AddInfo("flash:flash:video::name", "Last Time Stamp", "?");
            AddInfo("flash:flash:video::name", "Metadata Creator", "?");
            AddInfo("flash:flash:video::name", "Metadata Date", "?");
            AddInfo("flash:flash:video::name", "Message", "?");
            AddInfo("flash:flash:video::name", "URL", "?");
            AddInfo("flash:flash:video::name", "Source Data", "?");
            AddInfo("flash:flash:video::name", "Start Time", "?");
            AddInfo("flash:flash:video::name", "Stereo", "?");
            AddInfo("flash:flash:video::name", "Total Data Rate", "?");
            AddInfo("flash:flash:video::name", "Total Duration", "?");
            AddInfo("flash:flash:video::name", "Video Codec ID", "?");
            AddInfo("flash:flash:video::name", "Video Bitrate", "?");
            AddInfo("flash:flash:video::name", "Video Size", "?");
            AddInfo("flash:flash:video::name", "Image Width", "?");
        }


        static void InitTable197()
        {
            AddInfo("flash:flash:video::name", "Video Encoding", "?");
        }


        static void InitTable198()
        {
            AddInfo("flashpix:flashpix:other::name", "Comp Obj User Type Len", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Comp Obj User Type", "string");
        }


        static void InitTable199()
        {
            AddInfo("flashpix:flashpix:other::name", "Data Object ID", "?");
            AddInfo("flashpix:flashpix:other::name", "Locked Property List", "?");
            AddInfo("flashpix:flashpix:other::name", "Data Object Title", "?");
            AddInfo("flashpix:flashpix:other::name", "Last Modifier", "?");
            AddInfo("flashpix:flashpix:other::name", "Revision Number", "?");
            AddInfo("flashpix:flashpix:other::name", "Data Create Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Data Modify Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Creating Application", "?");
            AddInfo("flashpix:flashpix:other::name", "Data Object Status", "?");
            AddInfo("flashpix:flashpix:other::name", "Creating Transform", "?");
            AddInfo("flashpix:flashpix:other::name", "Using Transforms", "?");
            AddInfo("flashpix:flashpix:other::name", "Cached Image Height", "?");
            AddInfo("flashpix:flashpix:other::name", "Cached Image Width", "?");
        }


        static void InitTable200()
        {
            AddInfo("flashpix:flashpix:document::name", "Category", "?");
            AddInfo("flashpix:flashpix:document::name", "Presentation Target", "?");
            AddInfo("flashpix:flashpix:document::name", "Bytes", "?");
            AddInfo("flashpix:flashpix:document::name", "Lines", "?");
            AddInfo("flashpix:flashpix:document::name", "Paragraphs", "?");
            AddInfo("flashpix:flashpix:document::name", "Slides", "?");
            AddInfo("flashpix:flashpix:document::name", "Notes", "?");
            AddInfo("flashpix:flashpix:document::name", "Hidden Slides", "?");
            AddInfo("flashpix:flashpix:document::name", "MM Clips", "?");
            AddInfo("flashpix:flashpix:document::name", "Scale Crop", "?");
            AddInfo("flashpix:flashpix:document::name", "Heading Pairs", "?");
            AddInfo("flashpix:flashpix:document::name", "Title Of Parts", "?");
            AddInfo("flashpix:flashpix:document::name", "Manager", "?");
            AddInfo("flashpix:flashpix:document::name", "Company", "?");
            AddInfo("flashpix:flashpix:document::name", "Links Up To Date", "?");
            AddInfo("flashpix:flashpix:document::name", "Char Count With Spaces", "?");
            AddInfo("flashpix:flashpix:document::name", "Shared Doc", "?");
            AddInfo("flashpix:flashpix:document::name", "Hyperlinks Changed", "?");
            AddInfo("flashpix:flashpix:document::name", "App Version", "?");
            AddInfo("flashpix:flashpix:document::name", "Hyperlinks", "?");
            AddInfo("flashpix:flashpix:document::name", "Hyperlink Base", "?");
        }


        static void InitTable201()
        {
            AddInfo("flashpix:flashpix:other::name", "Extension Name", "?");
            AddInfo("flashpix:flashpix:other::name", "Extension Class ID", "?");
            AddInfo("flashpix:flashpix:other::name", "Extension Persistence", "?");
            AddInfo("flashpix:flashpix:other::name", "Extension Create Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Extension Modify Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Creating Application", "?");
            AddInfo("flashpix:flashpix:other::name", "Extension Description", "?");
            AddInfo("flashpix:flashpix:other::name", "Storage-Stream Pathname", "?");
            AddInfo("flashpix:flashpix:other::name", "Flash Pix Stream Pathname", "?");
            AddInfo("flashpix:flashpix:other::name", "Flash Pix Stream Field Offset", "?");
            AddInfo("flashpix:flashpix:other::name", "Property Set Pathname", "?");
            AddInfo("flashpix:flashpix:other::name", "Property Set ID Codes", "?");
            AddInfo("flashpix:flashpix:other::name", "Property Vector Elements", "?");
            AddInfo("flashpix:flashpix:other::name", "Subimage Resolutions", "?");
            AddInfo("flashpix:flashpix:other::name", "Used Extension Numbers", "?");
        }


        static void InitTable202()
        {
            AddInfo("flashpix:flashpix:other::name", "Locked Property List", "?");
            AddInfo("flashpix:flashpix:other::name", "Transformed Image Title", "?");
            AddInfo("flashpix:flashpix:other::name", "Last Modifier", "?");
            AddInfo("flashpix:flashpix:other::name", "Visible Outputs", "?");
            AddInfo("flashpix:flashpix:other::name", "Maximum Image Index", "?");
            AddInfo("flashpix:flashpix:other::name", "Maximum Transform Index", "?");
            AddInfo("flashpix:flashpix:other::name", "Maximum Operation Index", "?");
        }


        static void InitTable203()
        {
            AddInfo("flashpix:flashpix:image::name", "Number Of Resolutions", "?");
            AddInfo("flashpix:flashpix:image::name", "Image Width", "?");
            AddInfo("flashpix:flashpix:image::name", "Image Height", "?");
            AddInfo("flashpix:flashpix:image::name", "Default Display Height", "?");
            AddInfo("flashpix:flashpix:image::name", "Default Display Width", "?");
            AddInfo("flashpix:flashpix:image::name", "Display Units", "?");
            AddInfo("flashpix:flashpix:image::name", "Subimage Width", "?");
            AddInfo("flashpix:flashpix:image::name", "Subimage Height", "?");
            AddInfo("flashpix:flashpix:image::name", "Subimage Color", "?");
            AddInfo("flashpix:flashpix:image::name", "Subimage Numerical Format", "?");
            AddInfo("flashpix:flashpix:image::name", "Decimation Method", "?");
            AddInfo("flashpix:flashpix:image::name", "Decimation Prefilter Width", "?");
            AddInfo("flashpix:flashpix:image::name", "Subimage ICC Profile", "?");
            AddInfo("flashpix:flashpix:image::name", "JPEG Tables", "?");
            AddInfo("flashpix:flashpix:image::name", "Max JPEG Table Index", "?");
        }


        static void InitTable204()
        {
            AddInfo("flashpix:flashpix:image::name", "File Source", "?");
            AddInfo("flashpix:flashpix:image::name", "Scene Type", "?");
            AddInfo("flashpix:flashpix:image::name", "Creation Path Vector", "?");
            AddInfo("flashpix:flashpix:image::name", "Software Release", "?");
            AddInfo("flashpix:flashpix:image::name", "User Defined ID", "?");
            AddInfo("flashpix:flashpix:image::name", "Sharpness Approximation", "?");
            AddInfo("flashpix:flashpix:image::name", "Copyright", "?");
            AddInfo("flashpix:flashpix:image::name", "Original Image Broker", "?");
            AddInfo("flashpix:flashpix:image::name", "Digital Image Broker", "?");
            AddInfo("flashpix:flashpix:image::name", "Authorship", "?");
            AddInfo("flashpix:flashpix:image::name", "Intellectual Property Notes", "?");
            AddInfo("flashpix:flashpix:image::name", "Test Target", "?");
            AddInfo("flashpix:flashpix:image::name", "Group Caption", "?");
            AddInfo("flashpix:flashpix:image::name", "Caption Text", "?");
            AddInfo("flashpix:flashpix:image::name", "People", "?");
            AddInfo("flashpix:flashpix:image::name", "Things", "?");
            AddInfo("flashpix:flashpix:image::name", "Date/Time Original", "?");
            AddInfo("flashpix:flashpix:image::name", "Events", "?");
            AddInfo("flashpix:flashpix:image::name", "Places", "?");
            AddInfo("flashpix:flashpix:image::name", "Content Description Notes", "?");
            AddInfo("flashpix:flashpix:image::name", "Make", "?");
            AddInfo("flashpix:flashpix:image::name", "Camera Model Name", "?");
            AddInfo("flashpix:flashpix:image::name", "Serial Number", "?");
            AddInfo("flashpix:flashpix:image::name", "Create Date", "?");
            AddInfo("flashpix:flashpix:image::name", "Exposure Time", "?");
            AddInfo("flashpix:flashpix:image::name", "F Number", "?");
            AddInfo("flashpix:flashpix:image::name", "Exposure Program", "?");
            AddInfo("flashpix:flashpix:image::name", "Brightness Value", "?");
            AddInfo("flashpix:flashpix:image::name", "Exposure Compensation", "?");
            AddInfo("flashpix:flashpix:image::name", "Subject Distance", "?");
            AddInfo("flashpix:flashpix:image::name", "Metering Mode", "?");
            AddInfo("flashpix:flashpix:image::name", "Light Source", "?");
            AddInfo("flashpix:flashpix:image::name", "Focal Length", "?");
            AddInfo("flashpix:flashpix:image::name", "Max Aperture Value", "?");
            AddInfo("flashpix:flashpix:image::name", "Flash", "?");
            AddInfo("flashpix:flashpix:image::name", "Flash Energy", "?");
            AddInfo("flashpix:flashpix:image::name", "Flash Return", "?");
            AddInfo("flashpix:flashpix:image::name", "Back Light", "?");
            AddInfo("flashpix:flashpix:image::name", "Subject Location", "?");
            AddInfo("flashpix:flashpix:image::name", "Exposure Index", "?");
            AddInfo("flashpix:flashpix:image::name", "Special Effects Optical Filter", "?");
            AddInfo("flashpix:flashpix:image::name", "Per Picture Notes", "?");
            AddInfo("flashpix:flashpix:image::name", "Sensing Method", "?");
            AddInfo("flashpix:flashpix:image::name", "Focal Plane X Resolution", "?");
            AddInfo("flashpix:flashpix:image::name", "Focal Plane Y Resolution", "?");
            AddInfo("flashpix:flashpix:image::name", "Focal Plane Resolution Unit", "?");
            AddInfo("flashpix:flashpix:image::name", "Spatial Frequency Response", "?");
            AddInfo("flashpix:flashpix:image::name", "CFA Pattern", "?");
            AddInfo("flashpix:flashpix:image::name", "ISO", "?");
            AddInfo("flashpix:flashpix:image::name", "Opto-Electric Conv Factor", "?");
            AddInfo("flashpix:flashpix:image::name", "Film Brand", "?");
            AddInfo("flashpix:flashpix:image::name", "Film Category", "?");
            AddInfo("flashpix:flashpix:image::name", "Film Size", "?");
            AddInfo("flashpix:flashpix:image::name", "Film Roll Number", "?");
            AddInfo("flashpix:flashpix:image::name", "Film Frame Number", "?");
            AddInfo("flashpix:flashpix:image::name", "Scanner Make", "?");
            AddInfo("flashpix:flashpix:image::name", "Scanner Model", "?");
            AddInfo("flashpix:flashpix:image::name", "Scanner Serial Number", "?");
            AddInfo("flashpix:flashpix:image::name", "Scan Software", "?");
            AddInfo("flashpix:flashpix:image::name", "Scan Software Revision Date", "?");
            AddInfo("flashpix:flashpix:image::name", "Service Organization Name", "?");
            AddInfo("flashpix:flashpix:image::name", "Scan Operator ID", "?");
            AddInfo("flashpix:flashpix:image::name", "Scan Date", "?");
            AddInfo("flashpix:flashpix:image::name", "Modify Date", "?");
            AddInfo("flashpix:flashpix:image::name", "Scanner Pixel Size", "?");
            AddInfo("flashpix:flashpix:image::name", "Original Scanned Image Size", "?");
            AddInfo("flashpix:flashpix:image::name", "Original Document Size", "?");
            AddInfo("flashpix:flashpix:image::name", "Original Medium", "?");
            AddInfo("flashpix:flashpix:image::name", "Type Of Original", "?");
        }


        static void InitTable205()
        {
            AddInfo("flashpix:flashpix:image::name", "Screen Nail", "?");
            AddInfo("flashpix:flashpix:image::name", "Audio Stream", "?");
            AddInfo("flashpix:flashpix:image::name", "Current User", "?");
            AddInfo("flashpix:flashpix:image::name", "Preview Image", "?");
        }


        static void InitTable206()
        {
            AddInfo("flashpix:flashpix:other::name", "Operation ID", "?");
        }


        static void InitTable207()
        {
            AddInfo("flashpix:flashpix:image::name", "Preview Image Width", "int16u");
            AddInfo("flashpix:flashpix:image::name", "Preview Image Height", "int16u");
        }


        static void InitTable208()
        {
            AddInfo("flashpix:flashpix:other::name", "Subimage Width", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Subimage Height", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Subimage Tile Count", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Subimage Tile Width", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Subimage Tile Height", "int32u");
            AddInfo("flashpix:flashpix:other::name", "Num Channels", "int32u");
        }


        static void InitTable209()
        {
            AddInfo("flashpix:flashpix:document::name", "Dictionary", "?");
            AddInfo("flashpix:flashpix:document::name", "Code Page", "?");
            AddInfo("flashpix:flashpix:document::name", "Title", "?");
            AddInfo("flashpix:flashpix:document::name", "Subject", "?");
            AddInfo("flashpix:flashpix:document::name", "Author", "?");
            AddInfo("flashpix:flashpix:document::name", "Keywords", "?");
            AddInfo("flashpix:flashpix:document::name", "Comments", "?");
            AddInfo("flashpix:flashpix:document::name", "Template", "?");
            AddInfo("flashpix:flashpix:document::name", "Last Modified By", "?");
            AddInfo("flashpix:flashpix:document::name", "Revision Number", "?");
            AddInfo("flashpix:flashpix:document::name", "Total Edit Time", "?");
            AddInfo("flashpix:flashpix:document::name", "Last Printed", "?");
            AddInfo("flashpix:flashpix:document::name", "Create Date", "?");
            AddInfo("flashpix:flashpix:document::name", "Modify Date", "?");
            AddInfo("flashpix:flashpix:document::name", "Pages", "?");
            AddInfo("flashpix:flashpix:document::name", "Words", "?");
            AddInfo("flashpix:flashpix:document::name", "Characters", "?");
            AddInfo("flashpix:flashpix:document::name", "Thumbnail Clip", "?");
            AddInfo("flashpix:flashpix:document::name", "Software", "?");
            AddInfo("flashpix:flashpix:document::name", "Security", "?");
            AddInfo("flashpix:flashpix:document::name", "Locale Indicator", "?");
        }


        static void InitTable210()
        {
            AddInfo("flashpix:flashpix:other::name", "Transform Node ID", "?");
            AddInfo("flashpix:flashpix:other::name", "Operation Class ID", "?");
            AddInfo("flashpix:flashpix:other::name", "Locked Property List", "?");
            AddInfo("flashpix:flashpix:other::name", "Transform Title", "?");
            AddInfo("flashpix:flashpix:other::name", "Last Modifier", "?");
            AddInfo("flashpix:flashpix:other::name", "Revision Number", "?");
            AddInfo("flashpix:flashpix:other::name", "Transform Create Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Transform Modify Date", "?");
            AddInfo("flashpix:flashpix:other::name", "Creating Application", "?");
            AddInfo("flashpix:flashpix:other::name", "Input Data Object List", "?");
            AddInfo("flashpix:flashpix:other::name", "Output Data Object List", "?");
            AddInfo("flashpix:flashpix:other::name", "Operation Number", "?");
            AddInfo("flashpix:flashpix:other::name", "Result Aspect Ratio", "?");
            AddInfo("flashpix:flashpix:other::name", "Rectangle Of Interest", "?");
            AddInfo("flashpix:flashpix:other::name", "Filtering", "?");
            AddInfo("flashpix:flashpix:other::name", "Spatial Orientation", "?");
            AddInfo("flashpix:flashpix:other::name", "Color Twist Matrix", "?");
            AddInfo("flashpix:flashpix:other::name", "Contrast Adjustment", "?");
        }


        static void InitTable211()
        {
            AddInfo("font:font:document::name", "Ascender", "?");
            AddInfo("font:font:document::name", "Cap Height", "?");
            AddInfo("font:font:document::name", "Character Set", "?");
            AddInfo("font:font:document::name", "Characters", "?");
            AddInfo("font:font:document::name", "Create Date", "?");
            AddInfo("font:font:document::name", "Descender", "?");
            AddInfo("font:font:document::name", "Encoding Scheme", "?");
            AddInfo("font:font:document::name", "Esc Char", "?");
            AddInfo("font:font:document::name", "Font Family", "?");
            AddInfo("font:font:document::name", "Font Name", "?");
            AddInfo("font:font:document::name", "Full Name", "?");
            AddInfo("font:font:document::name", "Is Base Font", "?");
            AddInfo("font:font:document::name", "Is Fixed V", "?");
            AddInfo("font:font:document::name", "Mapping Scheme", "?");
            AddInfo("font:font:document::name", "Notice", "?");
            AddInfo("font:font:document::name", "Version", "?");
            AddInfo("font:font:document::name", "Weight", "?");
            AddInfo("font:font:document::name", "X Height", "?");
        }


        static void InitTable212()
        {
            AddInfo("font:font:document::name", "Font Name", "?");
            AddInfo("font:font:document::name", "Num Fonts", "?");
            AddInfo("font:font:document::name", "PostScript Font Name", "?");
        }


        static void InitTable213()
        {
            AddInfo("font:font:document::name", "Copyright", "?");
            AddInfo("font:font:document::name", "Font Family", "?");
            AddInfo("font:font:document::name", "Font Subfamily", "?");
            AddInfo("font:font:document::name", "Font Subfamily ID", "?");
            AddInfo("font:font:document::name", "Font Name", "?");
            AddInfo("font:font:document::name", "Name Table Version", "?");
            AddInfo("font:font:document::name", "PostScript Font Name", "?");
            AddInfo("font:font:document::name", "Trademark", "?");
            AddInfo("font:font:document::name", "Manufacturer", "?");
            AddInfo("font:font:document::name", "Designer", "?");
            AddInfo("font:font:document::name", "Description", "?");
            AddInfo("font:font:document::name", "Vendor URL", "?");
            AddInfo("font:font:document::name", "Designer URL", "?");
            AddInfo("font:font:document::name", "License", "?");
            AddInfo("font:font:document::name", "License Info URL", "?");
            AddInfo("font:font:document::name", "Preferred Family", "?");
            AddInfo("font:font:document::name", "Preferred Subfamily", "?");
            AddInfo("font:font:document::name", "Compatible Font Name", "?");
            AddInfo("font:font:document::name", "Sample Text", "?");
            AddInfo("font:font:document::name", "PostScript Font Name", "?");
            AddInfo("font:font:document::name", "WWS Family Name", "?");
            AddInfo("font:font:document::name", "WWS Subfamily Name", "?");
        }


        static void InitTable214()
        {
            AddInfo("font:font:document::name", "PFM Version", "int16u");
            AddInfo("font:font:document::name", "Copyright", "string");
            AddInfo("font:font:document::name", "Font Type", "int16u");
            AddInfo("font:font:document::name", "Point Size", "int16u");
            AddInfo("font:font:document::name", "Y Resolution", "int16u");
            AddInfo("font:font:document::name", "X Resolution", "int16u");
            AddInfo("font:font:document::name", "Ascent", "int16u");
            AddInfo("font:font:document::name", "Internal Leading", "int16u");
            AddInfo("font:font:document::name", "External Leading", "int16u");
            AddInfo("font:font:document::name", "Italic", "int8u");
            AddInfo("font:font:document::name", "Underline", "int8u");
            AddInfo("font:font:document::name", "Strikeout", "int8u");
            AddInfo("font:font:document::name", "Weight", "int16u");
            AddInfo("font:font:document::name", "Character Set", "int8u");
            AddInfo("font:font:document::name", "Pix Width", "int16u");
            AddInfo("font:font:document::name", "Pix Height", "int16u");
            AddInfo("font:font:document::name", "Pitch And Family", "int8u");
            AddInfo("font:font:document::name", "Avg Width", "int16u");
            AddInfo("font:font:document::name", "Max Width", "int16u");
            AddInfo("font:font:document::name", "First Char", "int8u");
            AddInfo("font:font:document::name", "Last Char", "int8u");
            AddInfo("font:font:document::name", "Default Char", "int8u");
            AddInfo("font:font:document::name", "Break Char", "int8u");
            AddInfo("font:font:document::name", "Width Bytes", "int16u");
        }


        static void InitTable215()
        {
            AddInfo("font:font:document::name", "Copyright", "?");
            AddInfo("font:font:document::name", "FS Type", "?");
            AddInfo("font:font:document::name", "Font Family", "?");
            AddInfo("font:font:document::name", "Font Name", "?");
            AddInfo("font:font:document::name", "Font Type", "?");
            AddInfo("font:font:document::name", "Full Name", "?");
            AddInfo("font:font:document::name", "Italic Angle", "?");
            AddInfo("font:font:document::name", "Notice", "?");
            AddInfo("font:font:document::name", "Underline Position", "?");
            AddInfo("font:font:document::name", "Underline Thickness", "?");
            AddInfo("font:font:document::name", "Weight", "?");
            AddInfo("font:font:document::name", "Is Fixed Pitch", "?");
            AddInfo("font:font:document::name", "Version", "?");
        }


        static void InitTable216()
        {
            AddInfo("fotostation:fotostation:image::name", "Thumbnail Image", "?");
            AddInfo("fotostation:fotostation:image::name", "Preview Image", "?");
        }


        static void InitTable217()
        {
            AddInfo("fotostation:fotostation:image::name", "Original Image Width", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Original Image Height", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Color Planes", "int32s");
            AddInfo("fotostation:fotostation:image::name", "XY Resolution", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Rotation", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Crop Left", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Crop Top", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Crop Right", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Crop Bottom", "int32s");
            AddInfo("fotostation:fotostation:image::name", "Crop Rotation", "int32s");
        }


        static void InitTable218()
        {
            AddInfo("makernotes:fujifilm:camera::name", "Movie Stream Name", "string");
        }


        static void InitTable219()
        {
            AddInfo("makernotes:fujifilm:image::name", "Face 1 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 1 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 1 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 2 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 2 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 2 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 3 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 3 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 3 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 4 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 4 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 4 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 5 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 5 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 5 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 6 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 6 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 6 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 7 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 7 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 7 Name", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 8 Birthday", "?");
            AddInfo("makernotes:fujifilm:image::name", "Face 8 Category", "int8u");
            AddInfo("makernotes:fujifilm:image::name", "Face 8 Name", "?");
        }


        static void InitTable220()
        {
            AddInfo("raf:fujiifd:image::name", "Raw Image Full Width", "?");
            AddInfo("raf:fujiifd:image::name", "Raw Image Full Height", "?");
            AddInfo("raf:fujiifd:image::name", "Bits Per Sample", "?");
            AddInfo("raf:fujiifd:image::name", "Strip Offsets", "?");
            AddInfo("raf:fujiifd:image::name", "Strip Byte Counts", "?");
            AddInfo("raf:fujiifd:image::name", "Black Level", "?");
            AddInfo("raf:fujiifd:image::name", "WB GRB Levels Standard", "?");
            AddInfo("raf:fujiifd:image::name", "WB GRB Levels Auto", "?");
            AddInfo("raf:fujiifd:image::name", "WB GRB Levels", "?");
        }


        static void InitTable221()
        {
            AddInfo("makernotes:fujifilm:camera::name", "Make", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:fujifilm:camera::name", "Exposure Compensation", "rational64s");
        }


        static void InitTable222()
        {
            AddInfo("makernotes:fujifilm:camera::name", "Version", "undef");
            AddInfo("makernotes:fujifilm:camera::name", "Internal Serial Number", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Quality", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "White Balance Fine Tune", "int32s");
            AddInfo("makernotes:fujifilm:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "High ISO Noise Reduction", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Fuji Flash Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:fujifilm:camera::name", "Macro", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "AF Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Focus Pixel", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Slow Sync", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Picture Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Exposure Count", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "EXR Auto", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "EXR Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Shadow Tone", "int32s");
            AddInfo("makernotes:fujifilm:camera::name", "Highlight Tone", "int32s");
            AddInfo("makernotes:fujifilm:camera::name", "Shutter Type", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Auto Bracketing", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Sequence Number", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Advanced Filter", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Blur Warning", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Focus Warning", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Exposure Warning", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "GE Image Size", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Dynamic Range", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Film Mode", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Dynamic Range Setting", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Development Dynamic Range", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Min Focal Length", "rational64s");
            AddInfo("makernotes:fujifilm:camera::name", "Max Focal Length", "rational64s");
            AddInfo("makernotes:fujifilm:camera::name", "Max Aperture At Min Focal", "rational64s");
            AddInfo("makernotes:fujifilm:camera::name", "Max Aperture At Max Focal", "rational64s");
            AddInfo("makernotes:fujifilm:camera::name", "Auto Dynamic Range", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Image Stabilization", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Rating", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Image Generation", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Image Count", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Frame Rate", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Frame Width", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Frame Height", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Faces Detected", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Face Positions", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "File Source", "string");
            AddInfo("makernotes:fujifilm:camera::name", "Order Number", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Frame Number", "int16u");
            AddInfo("makernotes:fujifilm:camera::name", "Parallax", "rational64s");
        }


        static void InitTable223()
        {
            AddInfo("raf:raf:image::name", "Raw Image Full Size", "int16u");
            AddInfo("raf:raf:image::name", "Raw Image Size", "int16u");
            AddInfo("raf:raf:image::name", "Raw Image Size", "int16u");
            AddInfo("raf:raf:image::name", "Fuji Layout", "int8u");
            AddInfo("raf:raf:image::name", "X-Trans Layout", "int8u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Auto", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Daylight", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Cloudy", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Daylight Fluor", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Day White Fluor", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels White Fluorescent", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Warm White Fluor", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Living Room Warm White Fluor", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels Tungsten", "int16u");
            AddInfo("raf:raf:image::name", "WB GRGB Levels", "int16u");
            AddInfo("raf:raf:image::name", "Raw Exposure Bias", "rational32s");
        }


        static void InitTable224()
        {
            AddInfo("makernotes:fujifilm:camera::name", "Raw Image Width", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Raw Image Width", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Raw Image Height", "int32u");
            AddInfo("makernotes:fujifilm:camera::name", "Raw Image Height", "int32u");
        }


        static void InitTable225()
        {
            AddInfo("makernotes:ge:camera::name", "Macro", "int16u");
            AddInfo("makernotes:ge:camera::name", "GE Model", "string");
            AddInfo("makernotes:ge:camera::name", "GE Make", "string");
        }


        static void InitTable226()
        {
            AddInfo("gif:gif:image::name", "Animation Iterations", "int16u");
        }


        static void InitTable227()
        {
            AddInfo("gif:gif:image::name", "Comment", "?");
            AddInfo("gif:gif:image::name", "Duration", "?");
            AddInfo("gif:gif:image::name", "Frame Count", "?");
            AddInfo("gif:gif:image::name", "GIF Version", "?");
            AddInfo("gif:gif:image::name", "Text", "?");
        }


        static void InitTable228()
        {
            AddInfo("gif:gif:image::name", "Image Width", "int16u");
            AddInfo("gif:gif:image::name", "Image Height", "int16u");
            AddInfo("gif:gif:image::name", "Has Color Map", "int8u");
            AddInfo("gif:gif:image::name", "Color Resolution Depth", "int8u");
            AddInfo("gif:gif:image::name", "Bits Per Pixel", "int8u");
            AddInfo("gif:gif:image::name", "Background Color", "int8u");
        }


        static void InitTable229()
        {
            AddInfo("gimp:gimp:image::name", "XCF Version", "string");
            AddInfo("gimp:gimp:image::name", "Image Width", "int32u");
            AddInfo("gimp:gimp:image::name", "Image Height", "int32u");
            AddInfo("gimp:gimp:image::name", "Color Mode", "int32u");
        }


        static void InitTable230()
        {
            AddInfo("gimp:gimp:image::name", "Compression", "int8u");
        }


        static void InitTable231()
        {
            AddInfo("gimp:gimp:image::name", "Comment", "string");
            AddInfo("gimp:gimp:image::name", "ICC Profile Name", "string");
        }


        static void InitTable232()
        {
            AddInfo("gimp:gimp:image::name", "X Resolution", "float");
            AddInfo("gimp:gimp:image::name", "Y Resolution", "float");
        }


        static void InitTable233()
        {
            AddInfo("exif:gps:location::name", "GPS Version ID", "int8u");
            AddInfo("exif:gps:location::name", "GPS Latitude Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Latitude", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Longitude Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Longitude", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Altitude Ref", "int8u");
            AddInfo("exif:gps:location::name", "GPS Altitude", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Time Stamp", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Satellites", "string");
            AddInfo("exif:gps:location::name", "GPS Status", "string");
            AddInfo("exif:gps:location::name", "GPS Measure Mode", "string");
            AddInfo("exif:gps:location::name", "GPS Dilution Of Precision", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Speed Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Speed", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Track Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Track", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Img Direction Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Img Direction", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Map Datum", "string");
            AddInfo("exif:gps:location::name", "GPS Dest Latitude Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Dest Latitude", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Dest Longitude Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Dest Longitude", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Dest Bearing Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Dest Bearing", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Dest Distance Ref", "string");
            AddInfo("exif:gps:location::name", "GPS Dest Distance", "rational64u");
            AddInfo("exif:gps:location::name", "GPS Processing Method", "undef");
            AddInfo("exif:gps:location::name", "GPS Area Information", "undef");
            AddInfo("exif:gps:location::name", "GPS Date Stamp", "string");
            AddInfo("exif:gps:location::name", "GPS Differential", "int16u");
            AddInfo("exif:gps:location::name", "GPS Horizontal Positioning Error", "rational64u");
        }


        static void InitTable234()
        {
            AddInfo("geotiff:geotiff:location::name", "Geo Tiff Version", "?");
            AddInfo("geotiff:geotiff:location::name", "GT Model Type", "?");
            AddInfo("geotiff:geotiff:location::name", "GT Raster Type", "?");
            AddInfo("geotiff:geotiff:location::name", "GT Citation", "?");
            AddInfo("geotiff:geotiff:location::name", "Geographic Type", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Citation", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Geodetic Datum", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Prime Meridian", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Linear Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Linear Unit Size", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Angular Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Angular Unit Size", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Ellipsoid", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Semi Major Axis", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Semi Minor Axis", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Inv Flattening", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Azimuth Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog Prime Meridian Long", "?");
            AddInfo("geotiff:geotiff:location::name", "Geog To WGS84", "?");
            AddInfo("geotiff:geotiff:location::name", "Projected CS Type", "?");
            AddInfo("geotiff:geotiff:location::name", "PCS Citation", "?");
            AddInfo("geotiff:geotiff:location::name", "Projection", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Coord Trans", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Linear Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Linear Unit Size", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Std Parallel 1", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Std Parallel 2", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Nat Origin Long", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Nat Origin Lat", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Easting", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Northing", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Origin Long", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Origin Lat", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Origin Easting", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj False Origin Northing", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Center Long", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Center Lat", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Center Easting", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Center Northing", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Scale At Nat Origin", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Scale At Center", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Azimuth Angle", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Straight Vert Pole Long", "?");
            AddInfo("geotiff:geotiff:location::name", "Proj Rectified Grid Angle", "?");
            AddInfo("geotiff:geotiff:location::name", "Vertical CS Type", "?");
            AddInfo("geotiff:geotiff:location::name", "Vertical Citation", "?");
            AddInfo("geotiff:geotiff:location::name", "Vertical Datum", "?");
            AddInfo("geotiff:geotiff:location::name", "Vertical Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Format", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Source", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Source Edition", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Source Date", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Corr Date", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Country Origin", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Raster Edition", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Sounding Datum", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Depth Units", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Mag Var", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Mag Var Year", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Mag Var Ann Change", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart WGSNS Shift", "?");
            AddInfo("geotiff:geotiff:location::name", "Inset NW Pixel X", "?");
            AddInfo("geotiff:geotiff:location::name", "Inset NW Pixel Y", "?");
            AddInfo("geotiff:geotiff:location::name", "Chart Contour Interval", "?");
        }


        static void InitTable235()
        {
            AddInfo("h264:h264:camera::name", "Aperture Setting", "int8u");
            AddInfo("h264:h264:camera::name", "Gain", "int8u");
            AddInfo("h264:h264:camera::name", "Exposure Program", "int8u");
            AddInfo("h264:h264:camera::name", "White Balance", "int8u");
            AddInfo("h264:h264:camera::name", "Focus", "int8u");
        }


        static void InitTable236()
        {
            AddInfo("h264:h264:camera::name", "Image Stabilization", "int8u");
        }


        static void InitTable237()
        {
            AddInfo("h264:h264:video::name", "Capture Frame Rate", "int8u");
            AddInfo("h264:h264:video::name", "Video Frame Rate", "int8u");
        }


        static void InitTable238()
        {
            AddInfo("h264:h264:camera::name", "Time Code", "?");
            AddInfo("h264:h264:camera::name", "Date/Time Original", "?");
            AddInfo("h264:h264:camera::name", "Exposure Time", "rational32u");
            AddInfo("h264:h264:camera::name", "F Number", "rational32u");
            AddInfo("h264:h264:camera::name", "Exposure Program", "int32u");
            AddInfo("h264:h264:camera::name", "Brightness Value", "rational32s");
            AddInfo("h264:h264:camera::name", "Exposure Compensation", "rational32s");
            AddInfo("h264:h264:camera::name", "Max Aperture Value", "rational32u");
            AddInfo("h264:h264:camera::name", "Flash", "int32u");
            AddInfo("h264:h264:camera::name", "Custom Rendered", "int32u");
            AddInfo("h264:h264:camera::name", "White Balance", "int32u");
            AddInfo("h264:h264:camera::name", "Focal Length In 35mm Format", "rational32u");
            AddInfo("h264:h264:camera::name", "Scene Capture Type", "int32u");
            AddInfo("h264:h264:camera::name", "GPS Version ID", "int8u");
            AddInfo("h264:h264:camera::name", "GPS Latitude Ref", "string");
            AddInfo("h264:h264:camera::name", "GPS Latitude", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Longitude Ref", "string");
            AddInfo("h264:h264:camera::name", "GPS Longitude", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Altitude Ref", "int32u");
            AddInfo("h264:h264:camera::name", "GPS Altitude", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Time Stamp", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Status", "string");
            AddInfo("h264:h264:camera::name", "GPS Measure Mode", "string");
            AddInfo("h264:h264:camera::name", "GPS Dilution Of Precision", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Speed Ref", "string");
            AddInfo("h264:h264:camera::name", "GPS Speed", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Track Ref", "string");
            AddInfo("h264:h264:camera::name", "GPS Track", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Img Direction Ref", "string");
            AddInfo("h264:h264:camera::name", "GPS Img Direction", "rational32u");
            AddInfo("h264:h264:camera::name", "GPS Map Datum", "string");
            AddInfo("h264:h264:camera::name", "Camera Model Name", "string");
        }


        static void InitTable239()
        {
            AddInfo("h264:h264:video::name", "Image Height", "?");
            AddInfo("h264:h264:video::name", "Image Width", "?");
        }


        static void InitTable240()
        {
            AddInfo("h264:h264:camera::name", "Make", "int16u");
        }


        static void InitTable241()
        {
            AddInfo("h264:h264:camera::name", "Recording Mode", "int8u");
        }


        static void InitTable242()
        {
            AddInfo("h264:h264:image::name", "Exposure Time", "int16u");
        }


        static void InitTable243()
        {
            AddInfo("makernotes:hp:camera::name", "Serial Number", "?");
            AddInfo("makernotes:hp:camera::name", "Firmware Version", "?");
        }


        static void InitTable244()
        {
            AddInfo("makernotes:hp:camera::name", "Lens Shading", "?");
            AddInfo("makernotes:hp:camera::name", "Preview Image", "?");
            AddInfo("makernotes:hp:camera::name", "Serial Number", "?");
        }


        static void InitTable245()
        {
            AddInfo("makernotes:hp:camera::name", "Max Aperture", "int16u");
            AddInfo("makernotes:hp:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:hp:camera::name", "Camera Date Time", "string");
            AddInfo("makernotes:hp:camera::name", "ISO", "int16u");
            AddInfo("makernotes:hp:camera::name", "Serial Number", "string");
        }


        static void InitTable246()
        {
            AddInfo("makernotes:hp:camera::name", "F Number", "int16u");
            AddInfo("makernotes:hp:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:hp:camera::name", "Camera Date Time", "string");
            AddInfo("makernotes:hp:camera::name", "ISO", "int16u");
            AddInfo("makernotes:hp:camera::name", "Serial Number", "string");
        }


        static void InitTable247()
        {
            AddInfo("html:html:document::name", "Abstract", "?");
            AddInfo("html:html:document::name", "Author", "?");
            AddInfo("html:html:document::name", "Classification", "?");
            AddInfo("html:html:document::name", "Content Language", "?");
            AddInfo("html:html:document::name", "Copyright", "?");
            AddInfo("html:html:document::name", "Description", "?");
            AddInfo("html:html:document::name", "Distribution", "?");
            AddInfo("html:html:document::name", "Doc Class", "?");
            AddInfo("html:html:document::name", "Doc Rights", "?");
            AddInfo("html:html:document::name", "Doc Type", "?");
            AddInfo("html:html:document::name", "Formatter", "?");
            AddInfo("html:html:document::name", "Generator", "?");
            AddInfo("html:html:document::name", "Generator Version", "?");
            AddInfo("html:html:document::name", "Google Bot", "?");
            AddInfo("html:html:document::name", "Keywords", "?");
            AddInfo("html:html:document::name", "No MS Smart Tags", "?");
            AddInfo("html:html:document::name", "Originator", "?");
            AddInfo("html:html:document::name", "Owner", "?");
            AddInfo("html:html:document::name", "Prog ID", "?");
            AddInfo("html:html:document::name", "Rating", "?");
            AddInfo("html:html:document::name", "Refresh", "?");
            AddInfo("html:html:document::name", "Resource Type", "?");
            AddInfo("html:html:document::name", "Revisit After", "?");
            AddInfo("html:html:document::name", "Robots", "?");
            AddInfo("html:html:document::name", "Title", "?");
        }


        static void InitTable248()
        {
            AddInfo("html:html-office:document::name", "Author", "?");
            AddInfo("html:html-office:document::name", "Category", "?");
            AddInfo("html:html-office:document::name", "Characters", "?");
            AddInfo("html:html-office:document::name", "Characters With Spaces", "?");
            AddInfo("html:html-office:document::name", "Company", "?");
            AddInfo("html:html-office:document::name", "Create Date", "?");
            AddInfo("html:html-office:document::name", "Description", "?");
            AddInfo("html:html-office:document::name", "Keywords", "?");
            AddInfo("html:html-office:document::name", "Last Author", "?");
            AddInfo("html:html-office:document::name", "Last Printed", "?");
            AddInfo("html:html-office:document::name", "Modify Date", "?");
            AddInfo("html:html-office:document::name", "Lines", "?");
            AddInfo("html:html-office:document::name", "Manager", "?");
            AddInfo("html:html-office:document::name", "Pages", "?");
            AddInfo("html:html-office:document::name", "Paragraphs", "?");
            AddInfo("html:html-office:document::name", "Revision Number", "?");
            AddInfo("html:html-office:document::name", "Subject", "?");
            AddInfo("html:html-office:document::name", "Template", "?");
            AddInfo("html:html-office:document::name", "Total Edit Time", "?");
            AddInfo("html:html-office:document::name", "Revision Number", "?");
            AddInfo("html:html-office:document::name", "Words", "?");
        }


        static void InitTable249()
        {
            AddInfo("html:html-dc:document::name", "Contributor", "?");
            AddInfo("html:html-dc:document::name", "Coverage", "?");
            AddInfo("html:html-dc:document::name", "Creator", "?");
            AddInfo("html:html-dc:document::name", "Date", "?");
            AddInfo("html:html-dc:document::name", "Description", "?");
            AddInfo("html:html-dc:document::name", "Format", "?");
            AddInfo("html:html-dc:document::name", "Identifier", "?");
            AddInfo("html:html-dc:document::name", "Language", "?");
            AddInfo("html:html-dc:document::name", "Publisher", "?");
            AddInfo("html:html-dc:document::name", "Relation", "?");
            AddInfo("html:html-dc:document::name", "Rights", "?");
            AddInfo("html:html-dc:document::name", "Source", "?");
            AddInfo("html:html-dc:document::name", "Subject", "?");
            AddInfo("html:html-dc:document::name", "Title", "?");
            AddInfo("html:html-dc:document::name", "Type", "?");
        }


        static void InitTable250()
        {
            AddInfo("html:http-equiv:document::name", "Cache Control", "?");
            AddInfo("html:http-equiv:document::name", "Content Disposition", "?");
            AddInfo("html:http-equiv:document::name", "Content Language", "?");
            AddInfo("html:http-equiv:document::name", "Content Script Type", "?");
            AddInfo("html:http-equiv:document::name", "Content Style Type", "?");
            AddInfo("html:http-equiv:document::name", "Content Type", "?");
            AddInfo("html:http-equiv:document::name", "Default Style", "?");
            AddInfo("html:http-equiv:document::name", "Expires", "?");
            AddInfo("html:http-equiv:document::name", "Ext Cache", "?");
            AddInfo("html:http-equiv:document::name", "Image Toolbar", "?");
            AddInfo("html:http-equiv:document::name", "Lotus", "?");
            AddInfo("html:http-equiv:document::name", "Page Enter", "?");
            AddInfo("html:http-equiv:document::name", "Page Exit", "?");
            AddInfo("html:http-equiv:document::name", "Pics Label", "?");
            AddInfo("html:http-equiv:document::name", "Pragma", "?");
            AddInfo("html:http-equiv:document::name", "Refresh", "?");
            AddInfo("html:http-equiv:document::name", "Reply To", "?");
            AddInfo("html:http-equiv:document::name", "Set Cookie", "?");
            AddInfo("html:http-equiv:document::name", "Site Enter", "?");
            AddInfo("html:http-equiv:document::name", "Site Exit", "?");
            AddInfo("html:http-equiv:document::name", "Vary", "?");
            AddInfo("html:http-equiv:document::name", "Window Target", "?");
        }


        static void InitTable251()
        {
            AddInfo("html:html-ncc:document::name", "Character Set", "?");
            AddInfo("html:html-ncc:document::name", "Depth", "?");
            AddInfo("html:html-ncc:document::name", "Files", "?");
            AddInfo("html:html-ncc:document::name", "Footnotes", "?");
            AddInfo("html:html-ncc:document::name", "Generator", "?");
            AddInfo("html:html-ncc:document::name", "K Byte Size", "?");
            AddInfo("html:html-ncc:document::name", "Max Page Normal", "?");
            AddInfo("html:html-ncc:document::name", "Multimedia Type", "?");
            AddInfo("html:html-ncc:document::name", "Narrator", "?");
            AddInfo("html:html-ncc:document::name", "Page Front", "?");
            AddInfo("html:html-ncc:document::name", "Page Normal", "?");
            AddInfo("html:html-ncc:document::name", "Page Special", "?");
            AddInfo("html:html-ncc:document::name", "Prod Notes", "?");
            AddInfo("html:html-ncc:document::name", "Produced Date", "?");
            AddInfo("html:html-ncc:document::name", "Producer", "?");
            AddInfo("html:html-ncc:document::name", "Revision", "?");
            AddInfo("html:html-ncc:document::name", "Revision Date", "?");
            AddInfo("html:html-ncc:document::name", "Set Info", "?");
            AddInfo("html:html-ncc:document::name", "Sidebars", "?");
            AddInfo("html:html-ncc:document::name", "Source Date", "?");
            AddInfo("html:html-ncc:document::name", "Source Edition", "?");
            AddInfo("html:html-ncc:document::name", "Source Publisher", "?");
            AddInfo("html:html-ncc:document::name", "Source Rights", "?");
            AddInfo("html:html-ncc:document::name", "Source Title", "?");
            AddInfo("html:html-ncc:document::name", "TOC Items", "?");
            AddInfo("html:html-ncc:document::name", "Duration", "?");
        }


        static void InitTable252()
        {
            AddInfo("html:html-prod:document::name", "Rec Engineer", "?");
            AddInfo("html:html-prod:document::name", "Rec Location", "?");
        }


        static void InitTable253()
        {
            AddInfo("html:html-vw96:document::name", "Object Type", "?");
        }


        static void InitTable254()
        {
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Channels", "int16u");
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Colorant", "int16u");
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Channel 1", "fixed32u");
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Channel 2", "fixed32u");
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Channel 3", "fixed32u");
            AddInfo("icc_profile:icc-chrm:image::name", "Chromaticity Channel 4", "fixed32u");
        }


        static void InitTable255()
        {
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant Count", "int32u");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 1 Name", "string");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 1 Coordinates", "int16u");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 2 Name", "string");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 2 Coordinates", "int16u");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 3 Name", "string");
            AddInfo("icc_profile:icc-clrt:image::name", "Colorant 3 Coordinates", "int16u");
        }


        static void InitTable256()
        {
            AddInfo("icc_profile:icc-header:image::name", "Profile CMM Type", "string");
            AddInfo("icc_profile:icc-header:image::name", "Profile Version", "int16s");
            AddInfo("icc_profile:icc-header:image::name", "Profile Class", "string");
            AddInfo("icc_profile:icc-header:image::name", "Color Space Data", "string");
            AddInfo("icc_profile:icc-header:image::name", "Profile Connection Space", "string");
            AddInfo("icc_profile:icc-header:image::name", "Profile Date Time", "int16u");
            AddInfo("icc_profile:icc-header:image::name", "Profile File Signature", "string");
            AddInfo("icc_profile:icc-header:image::name", "Primary Platform", "string");
            AddInfo("icc_profile:icc-header:image::name", "CMM Flags", "int32u");
            AddInfo("icc_profile:icc-header:image::name", "Device Manufacturer", "string");
            AddInfo("icc_profile:icc-header:image::name", "Device Model", "string");
            AddInfo("icc_profile:icc-header:image::name", "Device Attributes", "int32u");
            AddInfo("icc_profile:icc-header:image::name", "Rendering Intent", "int32u");
            AddInfo("icc_profile:icc-header:image::name", "Connection Space Illuminant", "fixed32s");
            AddInfo("icc_profile:icc-header:image::name", "Profile Creator", "string");
            AddInfo("icc_profile:icc-header:image::name", "Profile ID", "int8u");
        }


        static void InitTable257()
        {
            AddInfo("icc_profile:icc_profile:image::name", "A To B0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "A To B1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "A To B2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To A0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To A1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To A2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To D0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To D1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To D2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "B To D3", "?");
            AddInfo("icc_profile:icc_profile:image::name", "D To B0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "D To B1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "D To B2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "D To B3", "?");
            AddInfo("icc_profile:icc_profile:image::name", "WCS Profiles", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Blue Tone Reproduction Curve", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Blue Matrix Column", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Under Color Removal and Black Gen.", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Media Black Point", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Calibration Date Time", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Chromatic Adaptation", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Colorimetric Intent Image State", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Colorant Table Out", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Colorant Order", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Profile Copyright", "?");
            AddInfo("icc_profile:icc_profile:image::name", "CRD Info", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Profile Description", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Device Settings", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Device Model Desc", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Device Mfg Desc", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Profile Description ML", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Focal Plane Colorimetry Estimates", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Green Tone Reproduction Curve", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Green Matrix Column", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Gamut", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Gray Tone Reproduction Curve", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Luminance", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Make And Model", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Named Color 2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Named Color", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Native Display Info", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Preview 0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Preview 1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Preview 2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "PS2 Rendering Intent", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Post Script 2 CSA", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Post Script 2 CRD0", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Post Script 2 CRD1", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Post Script 2 CRD2", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Profile Sequence Desc", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Profile Sequence Identifier", "?");
            AddInfo("icc_profile:icc_profile:image::name", "PS2 CRDVM Size", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Red Tone Reproduction Curve", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Red Matrix Column", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Output Response", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Reflection Hardcopy Orig Colorimetry", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Perceptual Rendering Intent Gamut", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Saturation Rendering Intent Gamut", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Reflection Print Output Colorimetry", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Scene Appearance Estimates", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Scene Colorimetry Estimates", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Screening Desc", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Screening", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Char Target", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Technology", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Video Card Gamma", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Viewing Cond Desc", "?");
            AddInfo("icc_profile:icc_profile:image::name", "Media White Point", "?");
        }


        static void InitTable258()
        {
            AddInfo("icc_profile:icc-meas:image::name", "Measurement Observer", "int32u");
            AddInfo("icc_profile:icc-meas:image::name", "Measurement Backing", "fixed32s");
            AddInfo("icc_profile:icc-meas:image::name", "Measurement Geometry", "int32u");
            AddInfo("icc_profile:icc-meas:image::name", "Measurement Flare", "fixed32u");
            AddInfo("icc_profile:icc-meas:image::name", "Measurement Illuminant", "int32u");
        }


        static void InitTable259()
        {
            AddInfo("icc_profile:icc-meta:image::name", "Manufacturer Name", "?");
            AddInfo("icc_profile:icc-meta:image::name", "Media Color", "?");
            AddInfo("icc_profile:icc-meta:image::name", "Media Weight", "?");
        }


        static void InitTable260()
        {
            AddInfo("icc_profile:icc-view:image::name", "Viewing Cond Illuminant", "fixed32s");
            AddInfo("icc_profile:icc-view:image::name", "Viewing Cond Surround", "fixed32s");
            AddInfo("icc_profile:icc-view:image::name", "Viewing Cond Illuminant Type", "int32u");
        }


        static void InitTable261()
        {
            AddInfo("id3:id3:audio::name", "Average Level", "?");
            AddInfo("id3:id3:audio::name", "Peak Value", "?");
            AddInfo("id3:id3:audio::name", "WM Media Class Primary ID", "?");
            AddInfo("id3:id3:audio::name", "WM Media Class Secondary ID", "?");
            AddInfo("id3:id3:audio::name", "WM Provider", "?");
            AddInfo("id3:id3:audio::name", "WM Collection Group ID", "?");
            AddInfo("id3:id3:audio::name", "WM Collection ID", "?");
            AddInfo("id3:id3:audio::name", "WM Content ID", "?");
        }


        static void InitTable262()
        {
            AddInfo("id3:id3:audio::name", "Synchronized Lyrics Description", "?");
            AddInfo("id3:id3:audio::name", "Synchronized Lyrics Text", "?");
            AddInfo("id3:id3:audio::name", "Synchronized Lyrics Type", "?");
        }


        static void InitTable263()
        {
            AddInfo("id3:id3v1:audio::name", "Title", "string");
            AddInfo("id3:id3v1:audio::name", "Artist", "string");
            AddInfo("id3:id3v1:audio::name", "Album", "string");
            AddInfo("id3:id3v1:audio::name", "Year", "string");
            AddInfo("id3:id3v1:audio::name", "Comment", "string");
            AddInfo("id3:id3v1:audio::name", "Track", "int8u");
            AddInfo("id3:id3v1:audio::name", "Genre", "int8u");
        }


        static void InitTable264()
        {
            AddInfo("id3:id3v1_enh:audio::name", "Title 2", "string");
            AddInfo("id3:id3v1_enh:audio::name", "Artist 2", "string");
            AddInfo("id3:id3v1_enh:audio::name", "Album 2", "string");
            AddInfo("id3:id3v1_enh:audio::name", "Speed", "int8u");
            AddInfo("id3:id3v1_enh:audio::name", "Genre", "string");
            AddInfo("id3:id3v1_enh:audio::name", "Start Time", "string");
            AddInfo("id3:id3v1_enh:audio::name", "End Time", "string");
        }


        static void InitTable265()
        {
            AddInfo("id3:id3v2_2:audio::name", "Play Counter", "?");
            AddInfo("id3:id3v2_2:audio::name", "Comment", "?");
            AddInfo("id3:id3v2_2:audio::name", "Involved People", "?");
            AddInfo("id3:id3v2_2:audio::name", "iTunes U", "?");
            AddInfo("id3:id3v2_2:audio::name", "Podcast", "?");
            AddInfo("id3:id3v2_2:audio::name", "Picture", "?");
            AddInfo("id3:id3v2_2:audio::name", "Picture Format", "?");
            AddInfo("id3:id3v2_2:audio::name", "Picture Type", "?");
            AddInfo("id3:id3v2_2:audio::name", "Picture Description", "?");
            AddInfo("id3:id3v2_2:audio::name", "Popularimeter", "?");
            AddInfo("id3:id3v2_2:audio::name", "Relative Volume Adjustment", "?");
            AddInfo("id3:id3v2_2:audio::name", "Album", "?");
            AddInfo("id3:id3v2_2:audio::name", "Beats Per Minute", "?");
            AddInfo("id3:id3v2_2:audio::name", "Composer", "?");
            AddInfo("id3:id3v2_2:audio::name", "Genre", "?");
            AddInfo("id3:id3v2_2:audio::name", "Compilation", "?");
            AddInfo("id3:id3v2_2:audio::name", "Copyright", "?");
            AddInfo("id3:id3v2_2:audio::name", "Date", "?");
            AddInfo("id3:id3v2_2:audio::name", "Playlist Delay", "?");
            AddInfo("id3:id3v2_2:audio::name", "Encoded By", "?");
            AddInfo("id3:id3v2_2:audio::name", "File Type", "?");
            AddInfo("id3:id3v2_2:audio::name", "Time", "?");
            AddInfo("id3:id3v2_2:audio::name", "Initial Key", "?");
            AddInfo("id3:id3v2_2:audio::name", "Language", "?");
            AddInfo("id3:id3v2_2:audio::name", "Length", "?");
            AddInfo("id3:id3v2_2:audio::name", "Media", "?");
            AddInfo("id3:id3v2_2:audio::name", "Original Artist", "?");
            AddInfo("id3:id3v2_2:audio::name", "Original File Name", "?");
            AddInfo("id3:id3v2_2:audio::name", "Original Lyricist", "?");
            AddInfo("id3:id3v2_2:audio::name", "Original Release Year", "?");
            AddInfo("id3:id3v2_2:audio::name", "Original Album", "?");
            AddInfo("id3:id3v2_2:audio::name", "Artist", "?");
            AddInfo("id3:id3v2_2:audio::name", "Band", "?");
            AddInfo("id3:id3v2_2:audio::name", "Conductor", "?");
            AddInfo("id3:id3v2_2:audio::name", "Interpreted By", "?");
            AddInfo("id3:id3v2_2:audio::name", "Part Of Set", "?");
            AddInfo("id3:id3v2_2:audio::name", "Publisher", "?");
            AddInfo("id3:id3v2_2:audio::name", "ISRC", "?");
            AddInfo("id3:id3v2_2:audio::name", "Recording Dates", "?");
            AddInfo("id3:id3v2_2:audio::name", "Track", "?");
            AddInfo("id3:id3v2_2:audio::name", "Album Artist Sort Order", "?");
            AddInfo("id3:id3v2_2:audio::name", "Album Sort Order", "?");
            AddInfo("id3:id3v2_2:audio::name", "Composer Sort Order", "?");
            AddInfo("id3:id3v2_2:audio::name", "Size", "?");
            AddInfo("id3:id3v2_2:audio::name", "Performer Sort Order", "?");
            AddInfo("id3:id3v2_2:audio::name", "Encoder Settings", "?");
            AddInfo("id3:id3v2_2:audio::name", "Title Sort Order", "?");
            AddInfo("id3:id3v2_2:audio::name", "Grouping", "?");
            AddInfo("id3:id3v2_2:audio::name", "Title", "?");
            AddInfo("id3:id3v2_2:audio::name", "Subtitle", "?");
            AddInfo("id3:id3v2_2:audio::name", "Lyricist", "?");
            AddInfo("id3:id3v2_2:audio::name", "User Defined Text", "?");
            AddInfo("id3:id3v2_2:audio::name", "Year", "?");
            AddInfo("id3:id3v2_2:audio::name", "Lyrics", "?");
            AddInfo("id3:id3v2_2:audio::name", "File URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "Artist URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "Source URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "Commercial URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "Copyright URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "Publisher URL", "?");
            AddInfo("id3:id3v2_2:audio::name", "User Defined URL", "?");
        }


        static void InitTable266()
        {
            AddInfo("id3:id3v2_3:audio::name", "Picture", "?");
            AddInfo("id3:id3v2_3:audio::name", "Picture MIME Type", "?");
            AddInfo("id3:id3v2_3:audio::name", "Picture Type", "?");
            AddInfo("id3:id3v2_3:audio::name", "Picture Description", "?");
            AddInfo("id3:id3v2_3:audio::name", "Comment", "?");
            AddInfo("id3:id3v2_3:audio::name", "Involved People", "?");
            AddInfo("id3:id3v2_3:audio::name", "iTunes U", "?");
            AddInfo("id3:id3v2_3:audio::name", "Music CD Identifier", "?");
            AddInfo("id3:id3v2_3:audio::name", "Ownership", "?");
            AddInfo("id3:id3v2_3:audio::name", "Play Counter", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast", "?");
            AddInfo("id3:id3v2_3:audio::name", "Popularimeter", "?");
            AddInfo("id3:id3v2_3:audio::name", "Album", "?");
            AddInfo("id3:id3v2_3:audio::name", "Beats Per Minute", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast Category", "?");
            AddInfo("id3:id3v2_3:audio::name", "Compilation", "?");
            AddInfo("id3:id3v2_3:audio::name", "Composer", "?");
            AddInfo("id3:id3v2_3:audio::name", "Genre", "?");
            AddInfo("id3:id3v2_3:audio::name", "Copyright", "?");
            AddInfo("id3:id3v2_3:audio::name", "Date", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast Description", "?");
            AddInfo("id3:id3v2_3:audio::name", "Playlist Delay", "?");
            AddInfo("id3:id3v2_3:audio::name", "Encoded By", "?");
            AddInfo("id3:id3v2_3:audio::name", "Lyricist", "?");
            AddInfo("id3:id3v2_3:audio::name", "File Type", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast ID", "?");
            AddInfo("id3:id3v2_3:audio::name", "Time", "?");
            AddInfo("id3:id3v2_3:audio::name", "Grouping", "?");
            AddInfo("id3:id3v2_3:audio::name", "Title", "?");
            AddInfo("id3:id3v2_3:audio::name", "Subtitle", "?");
            AddInfo("id3:id3v2_3:audio::name", "Initial Key", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast Keywords", "?");
            AddInfo("id3:id3v2_3:audio::name", "Language", "?");
            AddInfo("id3:id3v2_3:audio::name", "Length", "?");
            AddInfo("id3:id3v2_3:audio::name", "Media", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original Album", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original File Name", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original Lyricist", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original Artist", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original Release Year", "?");
            AddInfo("id3:id3v2_3:audio::name", "File Owner", "?");
            AddInfo("id3:id3v2_3:audio::name", "Artist", "?");
            AddInfo("id3:id3v2_3:audio::name", "Band", "?");
            AddInfo("id3:id3v2_3:audio::name", "Conductor", "?");
            AddInfo("id3:id3v2_3:audio::name", "Interpreted By", "?");
            AddInfo("id3:id3v2_3:audio::name", "Part Of Set", "?");
            AddInfo("id3:id3v2_3:audio::name", "Publisher", "?");
            AddInfo("id3:id3v2_3:audio::name", "Track", "?");
            AddInfo("id3:id3v2_3:audio::name", "Recording Dates", "?");
            AddInfo("id3:id3v2_3:audio::name", "Internet Radio Station Name", "?");
            AddInfo("id3:id3v2_3:audio::name", "Internet Radio Station Owner", "?");
            AddInfo("id3:id3v2_3:audio::name", "Size", "?");
            AddInfo("id3:id3v2_3:audio::name", "Album Artist Sort Order", "?");
            AddInfo("id3:id3v2_3:audio::name", "Composer Sort Order", "?");
            AddInfo("id3:id3v2_3:audio::name", "ISRC", "?");
            AddInfo("id3:id3v2_3:audio::name", "Encoder Settings", "?");
            AddInfo("id3:id3v2_3:audio::name", "User Defined Text", "?");
            AddInfo("id3:id3v2_3:audio::name", "Year", "?");
            AddInfo("id3:id3v2_3:audio::name", "Terms Of Use", "?");
            AddInfo("id3:id3v2_3:audio::name", "Lyrics", "?");
            AddInfo("id3:id3v2_3:audio::name", "Commercial URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Copyright URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Podcast URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "File URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Artist URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Source URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Internet Radio Station URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Payment URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Publisher URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "User Defined URL", "?");
            AddInfo("id3:id3v2_3:audio::name", "Original Release Time", "?");
            AddInfo("id3:id3v2_3:audio::name", "Album Sort Order", "?");
            AddInfo("id3:id3v2_3:audio::name", "Performer Sort Order", "?");
            AddInfo("id3:id3v2_3:audio::name", "Title Sort Order", "?");
        }


        static void InitTable267()
        {
            AddInfo("id3:id3v2_4:audio::name", "Picture", "?");
            AddInfo("id3:id3v2_4:audio::name", "Picture MIME Type", "?");
            AddInfo("id3:id3v2_4:audio::name", "Picture Type", "?");
            AddInfo("id3:id3v2_4:audio::name", "Picture Description", "?");
            AddInfo("id3:id3v2_4:audio::name", "Comment", "?");
            AddInfo("id3:id3v2_4:audio::name", "iTunes U", "?");
            AddInfo("id3:id3v2_4:audio::name", "Music CD Identifier", "?");
            AddInfo("id3:id3v2_4:audio::name", "Ownership", "?");
            AddInfo("id3:id3v2_4:audio::name", "Play Counter", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast", "?");
            AddInfo("id3:id3v2_4:audio::name", "Popularimeter", "?");
            AddInfo("id3:id3v2_4:audio::name", "Relative Volume Adjustment", "?");
            AddInfo("id3:id3v2_4:audio::name", "Album", "?");
            AddInfo("id3:id3v2_4:audio::name", "Beats Per Minute", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast Category", "?");
            AddInfo("id3:id3v2_4:audio::name", "Compilation", "?");
            AddInfo("id3:id3v2_4:audio::name", "Composer", "?");
            AddInfo("id3:id3v2_4:audio::name", "Genre", "?");
            AddInfo("id3:id3v2_4:audio::name", "Copyright", "?");
            AddInfo("id3:id3v2_4:audio::name", "Encoding Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast Description", "?");
            AddInfo("id3:id3v2_4:audio::name", "Playlist Delay", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original Release Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Recording Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Release Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Tagging Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Encoded By", "?");
            AddInfo("id3:id3v2_4:audio::name", "Lyricist", "?");
            AddInfo("id3:id3v2_4:audio::name", "File Type", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast ID", "?");
            AddInfo("id3:id3v2_4:audio::name", "Involved People", "?");
            AddInfo("id3:id3v2_4:audio::name", "Grouping", "?");
            AddInfo("id3:id3v2_4:audio::name", "Title", "?");
            AddInfo("id3:id3v2_4:audio::name", "Subtitle", "?");
            AddInfo("id3:id3v2_4:audio::name", "Initial Key", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast Keywords", "?");
            AddInfo("id3:id3v2_4:audio::name", "Language", "?");
            AddInfo("id3:id3v2_4:audio::name", "Length", "?");
            AddInfo("id3:id3v2_4:audio::name", "Musician Credits", "?");
            AddInfo("id3:id3v2_4:audio::name", "Media", "?");
            AddInfo("id3:id3v2_4:audio::name", "Mood", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original Album", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original File Name", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original Lyricist", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original Artist", "?");
            AddInfo("id3:id3v2_4:audio::name", "File Owner", "?");
            AddInfo("id3:id3v2_4:audio::name", "Artist", "?");
            AddInfo("id3:id3v2_4:audio::name", "Band", "?");
            AddInfo("id3:id3v2_4:audio::name", "Conductor", "?");
            AddInfo("id3:id3v2_4:audio::name", "Interpreted By", "?");
            AddInfo("id3:id3v2_4:audio::name", "Part Of Set", "?");
            AddInfo("id3:id3v2_4:audio::name", "Produced Notice", "?");
            AddInfo("id3:id3v2_4:audio::name", "Publisher", "?");
            AddInfo("id3:id3v2_4:audio::name", "Track", "?");
            AddInfo("id3:id3v2_4:audio::name", "Internet Radio Station Name", "?");
            AddInfo("id3:id3v2_4:audio::name", "Internet Radio Station Owner", "?");
            AddInfo("id3:id3v2_4:audio::name", "Album Artist Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Album Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Composer Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Performer Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Title Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "ISRC", "?");
            AddInfo("id3:id3v2_4:audio::name", "Encoder Settings", "?");
            AddInfo("id3:id3v2_4:audio::name", "Set Subtitle", "?");
            AddInfo("id3:id3v2_4:audio::name", "User Defined Text", "?");
            AddInfo("id3:id3v2_4:audio::name", "Terms Of Use", "?");
            AddInfo("id3:id3v2_4:audio::name", "Lyrics", "?");
            AddInfo("id3:id3v2_4:audio::name", "Commercial URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Copyright URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Podcast URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "File URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Artist URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Source URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Internet Radio Station URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Payment URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Publisher URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "User Defined URL", "?");
            AddInfo("id3:id3v2_4:audio::name", "Original Release Time", "?");
            AddInfo("id3:id3v2_4:audio::name", "Album Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Performer Sort Order", "?");
            AddInfo("id3:id3v2_4:audio::name", "Title Sort Order", "?");
        }


        static void InitTable268()
        {
            AddInfo("iptc:iptc:other::name", "Application Record Version", "int16u");
            AddInfo("iptc:iptc:other::name", "Object Type Reference", "string");
            AddInfo("iptc:iptc:other::name", "Object Attribute Reference", "string");
            AddInfo("iptc:iptc:other::name", "Object Name", "string");
            AddInfo("iptc:iptc:other::name", "Edit Status", "string");
            AddInfo("iptc:iptc:other::name", "Editorial Update", "digits");
            AddInfo("iptc:iptc:other::name", "Urgency", "digits");
            AddInfo("iptc:iptc:other::name", "Subject Reference", "string");
            AddInfo("iptc:iptc:other::name", "Category", "string");
            AddInfo("iptc:iptc:other::name", "Supplemental Categories", "string");
            AddInfo("iptc:iptc:other::name", "Fixture Identifier", "string");
            AddInfo("iptc:iptc:other::name", "Keywords", "string");
            AddInfo("iptc:iptc:other::name", "Content Location Code", "string");
            AddInfo("iptc:iptc:other::name", "Content Location Name", "string");
            AddInfo("iptc:iptc:other::name", "Release Date", "digits");
            AddInfo("iptc:iptc:other::name", "Release Time", "string");
            AddInfo("iptc:iptc:other::name", "Expiration Date", "digits");
            AddInfo("iptc:iptc:other::name", "Expiration Time", "string");
            AddInfo("iptc:iptc:other::name", "Special Instructions", "string");
            AddInfo("iptc:iptc:other::name", "Action Advised", "digits");
            AddInfo("iptc:iptc:other::name", "Reference Service", "string");
            AddInfo("iptc:iptc:other::name", "Reference Date", "digits");
            AddInfo("iptc:iptc:other::name", "Reference Number", "digits");
            AddInfo("iptc:iptc:other::name", "Date Created", "digits");
            AddInfo("iptc:iptc:other::name", "Time Created", "string");
            AddInfo("iptc:iptc:other::name", "Digital Creation Date", "digits");
            AddInfo("iptc:iptc:other::name", "Digital Creation Time", "string");
            AddInfo("iptc:iptc:other::name", "Originating Program", "string");
            AddInfo("iptc:iptc:other::name", "Program Version", "string");
            AddInfo("iptc:iptc:other::name", "Object Cycle", "string");
            AddInfo("iptc:iptc:other::name", "By-line", "string");
            AddInfo("iptc:iptc:other::name", "By-line Title", "string");
            AddInfo("iptc:iptc:other::name", "City", "string");
            AddInfo("iptc:iptc:other::name", "Sub-location", "string");
            AddInfo("iptc:iptc:other::name", "Province-State", "string");
            AddInfo("iptc:iptc:other::name", "Country-Primary Location Code", "string");
            AddInfo("iptc:iptc:other::name", "Country-Primary Location Name", "string");
            AddInfo("iptc:iptc:other::name", "Original Transmission Reference", "string");
            AddInfo("iptc:iptc:other::name", "Headline", "string");
            AddInfo("iptc:iptc:other::name", "Credit", "string");
            AddInfo("iptc:iptc:other::name", "Source", "string");
            AddInfo("iptc:iptc:other::name", "Copyright Notice", "string");
            AddInfo("iptc:iptc:other::name", "Contact", "string");
            AddInfo("iptc:iptc:other::name", "Caption-Abstract", "string");
            AddInfo("iptc:iptc:other::name", "Local Caption", "string");
            AddInfo("iptc:iptc:other::name", "Writer-Editor", "string");
            AddInfo("iptc:iptc:other::name", "Rasterized Caption", "undef");
            AddInfo("iptc:iptc:other::name", "Image Type", "string");
            AddInfo("iptc:iptc:other::name", "Image Orientation", "string");
            AddInfo("iptc:iptc:other::name", "Language Identifier", "string");
            AddInfo("iptc:iptc:other::name", "Audio Type", "string");
            AddInfo("iptc:iptc:other::name", "Audio Sampling Rate", "digits");
            AddInfo("iptc:iptc:other::name", "Audio Sampling Resolution", "digits");
            AddInfo("iptc:iptc:other::name", "Audio Duration", "digits");
            AddInfo("iptc:iptc:other::name", "Audio Outcue", "string");
            AddInfo("iptc:iptc:other::name", "Job ID", "string");
            AddInfo("iptc:iptc:other::name", "Master Document ID", "string");
            AddInfo("iptc:iptc:other::name", "Short Document ID", "string");
            AddInfo("iptc:iptc:other::name", "Unique Document ID", "string");
            AddInfo("iptc:iptc:other::name", "Owner ID", "string");
            AddInfo("iptc:iptc:other::name", "Object Preview File Format", "int16u");
            AddInfo("iptc:iptc:other::name", "Object Preview File Version", "int16u");
            AddInfo("iptc:iptc:other::name", "Object Preview Data", "undef");
            AddInfo("iptc:iptc:other::name", "Prefs", "string");
            AddInfo("iptc:iptc:other::name", "Classify State", "string");
            AddInfo("iptc:iptc:other::name", "Similarity Index", "string");
            AddInfo("iptc:iptc:other::name", "Document Notes", "string");
            AddInfo("iptc:iptc:other::name", "Document History", "string");
            AddInfo("iptc:iptc:other::name", "Exif Camera Info", "string");
            AddInfo("iptc:iptc:other::name", "Catalog Sets", "string");
        }


        static void InitTable269()
        {
            AddInfo("iptc:iptc:other::name", "Envelope Record Version", "int16u");
            AddInfo("iptc:iptc:other::name", "Destination", "string");
            AddInfo("iptc:iptc:other::name", "File Format", "int16u");
            AddInfo("iptc:iptc:other::name", "File Version", "int16u");
            AddInfo("iptc:iptc:other::name", "Service Identifier", "string");
            AddInfo("iptc:iptc:other::name", "Envelope Number", "digits");
            AddInfo("iptc:iptc:other::name", "Product ID", "string");
            AddInfo("iptc:iptc:other::name", "Envelope Priority", "digits");
            AddInfo("iptc:iptc:other::name", "Date Sent", "digits");
            AddInfo("iptc:iptc:other::name", "Time Sent", "string");
            AddInfo("iptc:iptc:other::name", "Coded Character Set", "string");
            AddInfo("iptc:iptc:other::name", "Unique Object Name", "string");
            AddInfo("iptc:iptc:other::name", "ARM Identifier", "int16u");
            AddInfo("iptc:iptc:other::name", "ARM Version", "int16u");
        }


        static void InitTable270()
        {
            AddInfo("iptc:iptc:image::name", "News Photo Version", "int16u");
            AddInfo("iptc:iptc:image::name", "IPTC Picture Number", "string");
            AddInfo("iptc:iptc:image::name", "IPTC Image Width", "int16u");
            AddInfo("iptc:iptc:image::name", "IPTC Image Height", "int16u");
            AddInfo("iptc:iptc:image::name", "IPTC Pixel Width", "int16u");
            AddInfo("iptc:iptc:image::name", "IPTC Pixel Height", "int16u");
            AddInfo("iptc:iptc:image::name", "Supplemental Type", "int8u");
            AddInfo("iptc:iptc:image::name", "Color Representation", "int16u");
            AddInfo("iptc:iptc:image::name", "Interchange Color Space", "int8u");
            AddInfo("iptc:iptc:image::name", "Color Sequence", "int8u");
            AddInfo("iptc:iptc:image::name", "ICC Profile", "?");
            AddInfo("iptc:iptc:image::name", "Color Calibration Matrix", "?");
            AddInfo("iptc:iptc:image::name", "Lookup Table", "?");
            AddInfo("iptc:iptc:image::name", "Num Index Entries", "int16u");
            AddInfo("iptc:iptc:image::name", "Color Palette", "?");
            AddInfo("iptc:iptc:image::name", "IPTC Bits Per Sample", "int8u");
            AddInfo("iptc:iptc:image::name", "Sample Structure", "int8u");
            AddInfo("iptc:iptc:image::name", "Scanning Direction", "int8u");
            AddInfo("iptc:iptc:image::name", "IPTC Image Rotation", "int8u");
            AddInfo("iptc:iptc:image::name", "Data Compression Method", "int32u");
            AddInfo("iptc:iptc:image::name", "Quantization Method", "int8u");
            AddInfo("iptc:iptc:image::name", "End Points", "?");
            AddInfo("iptc:iptc:image::name", "Excursion Tolerance", "int8u");
            AddInfo("iptc:iptc:image::name", "Bits Per Component", "int8u");
            AddInfo("iptc:iptc:image::name", "Maximum Density Range", "int16u");
            AddInfo("iptc:iptc:image::name", "Gamma Compensated Value", "int16u");
        }


        static void InitTable271()
        {
            AddInfo("iptc:iptc:other::name", "Sub File", "?");
        }


        static void InitTable272()
        {
            AddInfo("iptc:iptc:other::name", "Confirmed Object Size", "int32u");
        }


        static void InitTable273()
        {
            AddInfo("iptc:iptc:other::name", "Size Mode", "int8u");
            AddInfo("iptc:iptc:other::name", "Max Subfile Size", "int32u");
            AddInfo("iptc:iptc:other::name", "Object Size Announced", "int32u");
            AddInfo("iptc:iptc:other::name", "Maximum Object Size", "int32u");
        }


        static void InitTable274()
        {
            AddInfo("itc:itc:image::name", "Data Type", "undef");
        }


        static void InitTable275()
        {
            AddInfo("itc:itc:image::name", "Library ID", "undef");
            AddInfo("itc:itc:image::name", "Track ID", "undef");
            AddInfo("itc:itc:image::name", "Data Location", "undef");
            AddInfo("itc:itc:image::name", "Image Type", "undef");
            AddInfo("itc:itc:image::name", "Image Width", "int32u");
            AddInfo("itc:itc:image::name", "Image Height", "int32u");
        }


        static void InitTable276()
        {
            AddInfo("itc:itc:other::name", "Image Data", "?");
        }


        static void InitTable277()
        {
            AddInfo("jfif:jfif:image::name", "Thumbnail Image", "?");
        }


        static void InitTable278()
        {
            AddInfo("jfif:jfif:image::name", "JFIF Version", "int8u");
            AddInfo("jfif:jfif:image::name", "Resolution Unit", "int8u");
            AddInfo("jfif:jfif:image::name", "X Resolution", "int16u");
            AddInfo("jfif:jfif:image::name", "Y Resolution", "int16u");
        }


        static void InitTable279()
        {
            AddInfo("app0:avi1:image::name", "Interleaved Field", "int8u");
        }


        static void InitTable280()
        {
            AddInfo("app14:adobe:image::name", "DCT Encode Version", "int16u");
            AddInfo("app14:adobe:image::name", "APP14 Flags 0", "int16u");
            AddInfo("app14:adobe:image::name", "APP14 Flags 1", "int16u");
            AddInfo("app14:adobe:image::name", "Color Transform", "int8u");
        }


        static void InitTable281()
        {
            AddInfo("app13:adobecm:image::name", "Adobe CM Type", "int16u");
        }


        static void InitTable282()
        {
            AddInfo("app6:eppim:image::name", "Print Image Matching", "undef");
        }


        static void InitTable283()
        {
            AddInfo("app15:graphconv:image::name", "Quality", "?");
        }


        static void InitTable284()
        {
            AddInfo("app11:jpeg-hdr:image::name", "Ratio Image", "?");
            AddInfo("app11:jpeg-hdr:image::name", "Alpha", "?");
            AddInfo("app11:jpeg-hdr:image::name", "Beta", "?");
            AddInfo("app11:jpeg-hdr:image::name", "Correction Method", "?");
            AddInfo("app11:jpeg-hdr:image::name", "Ln0", "?");
            AddInfo("app11:jpeg-hdr:image::name", "Ln1", "?");
            AddInfo("app11:jpeg-hdr:image::name", "S2n", "?");
            AddInfo("app11:jpeg-hdr:image::name", "JPEG-HDR Version", "?");
        }


        static void InitTable285()
        {
            AddInfo("jpeg:jpeg:other::name", "Preview Image", "?");
            AddInfo("jpeg:jpeg:other::name", "Preview Image", "?");
            AddInfo("jpeg:jpeg:other::name", "Preview Image", "?");
            AddInfo("jpeg:jpeg:other::name", "Preview Image", "?");
            AddInfo("jpeg:jpeg:other::name", "Comment", "?");
            AddInfo("jpeg:jpeg:other::name", "Adobe", "?");
            AddInfo("jpeg:jpeg:other::name", "Comment", "?");
            AddInfo("jpeg:jpeg:other::name", "Define Quantization Table", "?");
            AddInfo("jpeg:jpeg:other::name", "Preview Image", "?");
        }


        static void InitTable286()
        {
            AddInfo("xml:mediajukebox:image::name", "Album", "?");
            AddInfo("xml:mediajukebox:image::name", "Caption", "?");
            AddInfo("xml:mediajukebox:image::name", "Date", "?");
            AddInfo("xml:mediajukebox:image::name", "Keywords", "?");
            AddInfo("xml:mediajukebox:image::name", "Name", "?");
            AddInfo("xml:mediajukebox:image::name", "People", "?");
            AddInfo("xml:mediajukebox:image::name", "Places", "?");
            AddInfo("xml:mediajukebox:image::name", "Tool Name", "?");
            AddInfo("xml:mediajukebox:image::name", "Tool Version", "?");
        }


        static void InitTable287()
        {
            AddInfo("app6:nitf:image::name", "NITF Version", "int8u");
            AddInfo("app6:nitf:image::name", "Image Format", "int8u");
            AddInfo("app6:nitf:image::name", "Blocks Per Row", "int16u");
            AddInfo("app6:nitf:image::name", "Blocks Per Column", "int16u");
            AddInfo("app6:nitf:image::name", "Image Color", "int8u");
            AddInfo("app6:nitf:image::name", "Bit Depth", "int8u");
            AddInfo("app6:nitf:image::name", "Image Class", "int8u");
            AddInfo("app6:nitf:image::name", "JPEG Process", "int8u");
            AddInfo("app6:nitf:image::name", "Quality", "int8u");
            AddInfo("app6:nitf:image::name", "Stream Color", "int8u");
            AddInfo("app6:nitf:image::name", "Stream Bit Depth", "int8u");
            AddInfo("app6:nitf:image::name", "Flags", "int32u");
        }


        static void InitTable288()
        {
            AddInfo("app0:ocad:image::name", "Ocad Revision", "string");
        }


        static void InitTable289()
        {
            AddInfo("file:file:image::name", "Bits Per Sample", "?");
            AddInfo("file:file:image::name", "Color Components", "?");
            AddInfo("file:file:image::name", "Encoding Process", "?");
            AddInfo("file:file:image::name", "Image Height", "?");
            AddInfo("file:file:image::name", "Image Width", "?");
            AddInfo("file:file:image::name", "Y Cb Cr Sub Sampling", "?");
        }


        static void InitTable290()
        {
            AddInfo("app8:spiff:image::name", "SPIFF Version", "int8u");
            AddInfo("app8:spiff:image::name", "Profile ID", "int8u");
            AddInfo("app8:spiff:image::name", "Color Components", "int8u");
            AddInfo("app8:spiff:image::name", "Image Height", "int32u");
            AddInfo("app8:spiff:image::name", "Image Width", "int32u");
            AddInfo("app8:spiff:image::name", "Color Space", "int8u");
            AddInfo("app8:spiff:image::name", "Bits Per Sample", "int8u");
            AddInfo("app8:spiff:image::name", "Compression", "int8u");
            AddInfo("app8:spiff:image::name", "Resolution Unit", "int8u");
            AddInfo("app8:spiff:image::name", "Y Resolution", "int32u");
            AddInfo("app8:spiff:image::name", "X Resolution", "int32u");
        }


        static void InitTable291()
        {
            AddInfo("makernotes:jvc:camera::name", "CPU Versions", "?");
            AddInfo("makernotes:jvc:camera::name", "Quality", "?");
        }


        static void InitTable292()
        {
            AddInfo("makernotes:jvc:camera::name", "Quality", "?");
            AddInfo("makernotes:jvc:camera::name", "Maker Note Version", "?");
        }


        static void InitTable293()
        {
            AddInfo("jpeg2000:jpeg2000:image::name", "Capture Y Resolution", "rational32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Capture X Resolution", "rational32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Capture Y Resolution Unit", "int8s");
            AddInfo("jpeg2000:jpeg2000:image::name", "Capture X Resolution Unit", "int8s");
        }


        static void InitTable294()
        {
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Spec Method", "int8s");
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Spec Precedence", "int8s");
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Spec Approximation", "int8s");
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Space", "int32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Spec Data", "undef");
        }


        static void InitTable295()
        {
            AddInfo("jpeg2000:jpeg2000:image::name", "Display Y Resolution", "rational32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Display X Resolution", "rational32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Display Y Resolution Unit", "int8s");
            AddInfo("jpeg2000:jpeg2000:image::name", "Display X Resolution Unit", "int8s");
        }


        static void InitTable296()
        {
            AddInfo("jpeg2000:jpeg2000:video::name", "Major Brand", "undef");
            AddInfo("jpeg2000:jpeg2000:video::name", "Minor Version", "undef");
            AddInfo("jpeg2000:jpeg2000:video::name", "Compatible Brands", "undef");
        }


        static void InitTable297()
        {
            AddInfo("jpeg2000:jpeg2000:image::name", "Image Height", "int32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Image Width", "int32u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Number Of Components", "int16u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Bits Per Component", "int8u");
            AddInfo("jpeg2000:jpeg2000:image::name", "Compression", "int8u");
        }


        static void InitTable298()
        {
            AddInfo("jpeg2000:jpeg2000:image::name", "Association", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Binary Filter", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Bits Per Component", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Component Definition", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Color Group", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Digital Signature", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Component Mapping", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Composition", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Composition Options", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Cross-Reference", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Codestream Registration", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Desired Reproductions", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Data Reference", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Fragment List", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Free", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Fragment Table", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Graphics Technology Standard Output", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Instruction Set", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "JP2 Signature", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "JP2 Signature", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Contiguous Codestream", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Label", "string");
            AddInfo("jpeg2000:jpeg2000:image::name", "Media Data", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "MPEG7 Binary", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Number List", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Opacity", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Palette", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Profile", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "ROI Description", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "Reader Requirements", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "UUID List", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "URL", "string");
            AddInfo("jpeg2000:jpeg2000:image::name", "UUID-Unknown", "?");
            AddInfo("jpeg2000:jpeg2000:image::name", "XML", "undef");
        }


        static void InitTable299()
        {
            AddInfo("meta:kodakbordersifd:image::name", "Borders Version", "?");
            AddInfo("meta:kodakbordersifd:image::name", "Border Name", "?");
            AddInfo("meta:kodakbordersifd:image::name", "Border ID", "?");
            AddInfo("meta:kodakbordersifd:image::name", "Border Location", "?");
            AddInfo("meta:kodakbordersifd:image::name", "Border Type", "?");
            AddInfo("meta:kodakbordersifd:image::name", "Watermark Type", "?");
        }


        static void InitTable300()
        {
            AddInfo("makernotes:kodak:camera::name", "Sensor Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sensor Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Bayer Pattern", "string");
            AddInfo("makernotes:kodak:camera::name", "Sensor Full Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sensor Full Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Info Type", "string");
            AddInfo("makernotes:kodak:camera::name", "Serial Number", "string");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
        }


        static void InitTable301()
        {
            AddInfo("makernotes:kodak:video::name", "Camera Byte Order", "?");
            AddInfo("makernotes:kodak:video::name", "Camera Byte Order", "?");
        }


        static void InitTable302()
        {
            AddInfo("makernotes:kodak:video::name", "Aperture Value", "int16s");
            AddInfo("makernotes:kodak:video::name", "Brightness Value", "int32s");
            AddInfo("makernotes:kodak:video::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:kodak:video::name", "Exposure Time", "rational32u");
            AddInfo("makernotes:kodak:video::name", "Focal Length In 35mm Format", "int16u");
            AddInfo("makernotes:kodak:video::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:video::name", "Focal Length", "int16u");
            AddInfo("makernotes:kodak:video::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:video::name", "Firmware Version", "?");
            AddInfo("makernotes:kodak:video::name", "Serial Number", "?");
            AddInfo("makernotes:kodak:video::name", "Shutter Speed Value", "int16s");
        }


        static void InitTable303()
        {
            AddInfo("makernotes:kodakifd:image::name", "Unknown EV", "rational64u");
            AddInfo("makernotes:kodakifd:image::name", "Exposure Value", "rational64u");
            AddInfo("makernotes:kodakifd:image::name", "Original File Name", "string");
            AddInfo("makernotes:kodakifd:image::name", "Sensor Left Border", "?");
            AddInfo("makernotes:kodakifd:image::name", "Sensor Top Border", "?");
            AddInfo("makernotes:kodakifd:image::name", "Sensor Image Width", "?");
            AddInfo("makernotes:kodakifd:image::name", "Sensor Image Height", "?");
            AddInfo("makernotes:kodakifd:image::name", "White Balance", "int16u");
            AddInfo("makernotes:kodakifd:image::name", "Time", "string");
            AddInfo("makernotes:kodakifd:image::name", "Camera Temperature", "rational64s");
            AddInfo("makernotes:kodakifd:image::name", "Adapter Voltage", "rational64u");
            AddInfo("makernotes:kodakifd:image::name", "Battery Voltage", "rational64u");
            AddInfo("makernotes:kodakifd:image::name", "NCD File Info", "string");
            AddInfo("makernotes:kodakifd:image::name", "Color Temperature", "int16u");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Daylight", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Tungsten", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Fluorescent", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Flash", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Custom", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Levels Auto", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Mul 0", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Mul 1", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Mul 2", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Mul 3", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Coeffs 0", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Coeffs 1", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Coeffs 2", "?");
            AddInfo("makernotes:kodakifd:image::name", "WB RGB Coeffs 3", "?");
            AddInfo("makernotes:kodakifd:image::name", "Base ISO", "rational64u");
            AddInfo("makernotes:kodakifd:image::name", "Sensor Serial Number", "string");
            AddInfo("makernotes:kodakifd:image::name", "Firmware Version", "string");
            AddInfo("makernotes:kodakifd:image::name", "Kodak Look", "string");
            AddInfo("makernotes:kodakifd:image::name", "Input Profile", "undef");
            AddInfo("makernotes:kodakifd:image::name", "Kodak Look Profile", "undef");
            AddInfo("makernotes:kodakifd:image::name", "Output Profile", "undef");
            AddInfo("makernotes:kodakifd:image::name", "Tone Curve File Name", "string");
            AddInfo("makernotes:kodakifd:image::name", "ISO", "int32u");
        }


        static void InitTable304()
        {
            AddInfo("makernotes:kdc_ifd:image::name", "Serial Number", "string");
            AddInfo("makernotes:kdc_ifd:image::name", "White Balance", "int8u");
            AddInfo("makernotes:kdc_ifd:image::name", "WB RGB Levels Auto", "?");
            AddInfo("makernotes:kdc_ifd:image::name", "WB RGB Levels Tungsten", "?");
            AddInfo("makernotes:kdc_ifd:image::name", "WB RGB Levels Fluorescent", "?");
            AddInfo("makernotes:kdc_ifd:image::name", "WB RGB Levels Daylight", "?");
            AddInfo("makernotes:kdc_ifd:image::name", "WB RGB Levels Shade", "?");
        }


        static void InitTable305()
        {
            AddInfo("makernotes:kodak:camera::name", "Make", "string");
            AddInfo("makernotes:kodak:camera::name", "Model", "string");
            AddInfo("makernotes:kodak:camera::name", "Model Type", "string");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:kodak:camera::name", "Focal Length", "rational64u");
        }


        static void InitTable306()
        {
            AddInfo("makernotes:kodak:camera::name", "Kodak Model", "string");
            AddInfo("makernotes:kodak:camera::name", "Quality", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Burst Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Year Created", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Month Day Created", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Time Created", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Burst Mode 2", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Shutter Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Metering Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Sequence Number", "int8u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:kodak:camera::name", "Various Modes", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Distance 1", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Distance 2", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Distance 3", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Distance 4", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Various Modes 2", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Panorama Mode", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Subject Distance", "int16u");
            AddInfo("makernotes:kodak:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Flash Fired", "int8u");
            AddInfo("makernotes:kodak:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Total Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Date Time Stamp", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Digital Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sharpness", "int8s");
        }


        static void InitTable307()
        {
            AddInfo("meta:metaifd:image::name", "Film Product Code", "?");
            AddInfo("meta:metaifd:image::name", "Image Source EK", "?");
            AddInfo("meta:metaifd:image::name", "Capture Conditions PAR", "?");
            AddInfo("meta:metaifd:image::name", "Camera Owner", "undef");
            AddInfo("meta:metaifd:image::name", "Serial Number", "undef");
            AddInfo("meta:metaifd:image::name", "User Select Group Title", "?");
            AddInfo("meta:metaifd:image::name", "Dealer ID Number", "?");
            AddInfo("meta:metaifd:image::name", "Capture Device FID", "?");
            AddInfo("meta:metaifd:image::name", "Envelope Number", "?");
            AddInfo("meta:metaifd:image::name", "Frame Number", "?");
            AddInfo("meta:metaifd:image::name", "Film Category", "?");
            AddInfo("meta:metaifd:image::name", "Film Gencode", "?");
            AddInfo("meta:metaifd:image::name", "Model And Version", "?");
            AddInfo("meta:metaifd:image::name", "Film Size", "?");
            AddInfo("meta:metaifd:image::name", "SBA RGB Shifts", "?");
            AddInfo("meta:metaifd:image::name", "SBA Input Image Colorspace", "?");
            AddInfo("meta:metaifd:image::name", "SBA Input Image Bit Depth", "?");
            AddInfo("meta:metaifd:image::name", "SBA Exposure Record", "?");
            AddInfo("meta:metaifd:image::name", "User Adj SBA RGB Shifts", "?");
            AddInfo("meta:metaifd:image::name", "Image Rotation Status", "?");
            AddInfo("meta:metaifd:image::name", "Roll Guid Elements", "?");
            AddInfo("meta:metaifd:image::name", "Metadata Number", "?");
            AddInfo("meta:metaifd:image::name", "Edit Tag Array", "?");
            AddInfo("meta:metaifd:image::name", "Magnification", "?");
            AddInfo("meta:metaifd:image::name", "Native X Resolution", "?");
            AddInfo("meta:metaifd:image::name", "Native Y Resolution", "?");
            AddInfo("meta:metaifd:image::name", "Native Resolution Unit", "?");
            AddInfo("meta:metaifd:image::name", "Source Image Directory", "?");
            AddInfo("meta:metaifd:image::name", "Source Image File Name", "?");
            AddInfo("meta:metaifd:image::name", "Source Image Volume Name", "?");
            AddInfo("meta:metaifd:image::name", "Print Quality", "?");
            AddInfo("meta:metaifd:image::name", "Image Print Status", "?");
        }


        static void InitTable308()
        {
            AddInfo("makernotes:kodak:camera::name", "WB RGB Levels", "int16u");
        }


        static void InitTable309()
        {
            AddInfo("makernotes:kodak:image::name", "Preview Image Width", "int16u");
            AddInfo("makernotes:kodak:image::name", "Preview Image Height", "int16u");
            AddInfo("makernotes:kodak:image::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:kodak:image::name", "Preview Image", "undef");
        }


        static void InitTable310()
        {
            AddInfo("meta:kodakeffectsifd:image::name", "Digital Effects Version", "?");
            AddInfo("meta:kodakeffectsifd:image::name", "Digital Effects Name", "?");
            AddInfo("meta:kodakeffectsifd:image::name", "Digital Effects Type", "?");
        }


        static void InitTable311()
        {
            AddInfo("makernotes:kodak:camera::name", "Scene Mode", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Serial Number", "string");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sensor Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sensor Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Thumbnail Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Thumbnail Height", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Preview Image Width", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Preview Image Height", "int16u");
        }


        static void InitTable312()
        {
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
        }


        static void InitTable313()
        {
            AddInfo("makernotes:kodak:camera::name", "Scene Mode Used", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Max Aperture", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Scene Mode Used", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int32u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int32u");
        }


        static void InitTable314()
        {
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x2007", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x2008", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x2009", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x200a", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x200b", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x3020", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x3030", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x3040", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x3050", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x3060", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8001", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8002", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8003", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8004", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8005", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8006", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8007", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8008", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x8009", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x800a", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x800b", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Sub IFD3 0x800c", "?");
        }


        static void InitTable315()
        {
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
        }


        static void InitTable316()
        {
            AddInfo("makernotes:kodak:image::name", "AF Mode", "?");
            AddInfo("makernotes:kodak:image::name", "Actual Compensation", "?");
            AddInfo("makernotes:kodak:image::name", "Aperture", "?");
            AddInfo("makernotes:kodak:image::name", "Auto Bracket", "?");
            AddInfo("makernotes:kodak:image::name", "Brightness Value", "?");
            AddInfo("makernotes:kodak:image::name", "Camera Model", "?");
            AddInfo("makernotes:kodak:image::name", "Camera Body", "?");
            AddInfo("makernotes:kodak:image::name", "Exposure Compensation", "?");
            AddInfo("makernotes:kodak:image::name", "Date", "?");
            AddInfo("makernotes:kodak:image::name", "Exposure Bias", "?");
            AddInfo("makernotes:kodak:image::name", "Exposure Mode", "?");
            AddInfo("makernotes:kodak:image::name", "Firmware Version", "?");
            AddInfo("makernotes:kodak:image::name", "Flash Exposure Comp", "?");
            AddInfo("makernotes:kodak:image::name", "Flash Fired", "?");
            AddInfo("makernotes:kodak:image::name", "Flash Sync Mode", "?");
            AddInfo("makernotes:kodak:image::name", "Focal Length", "?");
            AddInfo("makernotes:kodak:image::name", "Kodak Image Height", "?");
            AddInfo("makernotes:kodak:image::name", "ISO", "?");
            AddInfo("makernotes:kodak:image::name", "ISO", "?");
            AddInfo("makernotes:kodak:image::name", "Image Number", "?");
            AddInfo("makernotes:kodak:image::name", "Max Aperture", "?");
            AddInfo("makernotes:kodak:image::name", "Meter Mode", "?");
            AddInfo("makernotes:kodak:image::name", "Min Aperture", "?");
            AddInfo("makernotes:kodak:image::name", "Popup Flash", "?");
            AddInfo("makernotes:kodak:image::name", "Serial Number", "?");
            AddInfo("makernotes:kodak:image::name", "Shooting Mode", "?");
            AddInfo("makernotes:kodak:image::name", "Shutter Speed", "?");
            AddInfo("makernotes:kodak:image::name", "Temperature", "?");
            AddInfo("makernotes:kodak:image::name", "Time", "?");
            AddInfo("makernotes:kodak:image::name", "White Balance", "?");
            AddInfo("makernotes:kodak:image::name", "Kodak Image Width", "?");
            AddInfo("makernotes:kodak:image::name", "Other Info", "?");
        }


        static void InitTable317()
        {
            AddInfo("makernotes:kodak:camera::name", "Preview Image Size", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Focal Length", "int32u");
        }


        static void InitTable318()
        {
            AddInfo("makernotes:kodak:camera::name", "Picture Effect", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Model", "?");
            AddInfo("makernotes:kodak:camera::name", "Kodak Make", "?");
            AddInfo("makernotes:kodak:camera::name", "Lens Serial Number", "?");
            AddInfo("makernotes:kodak:camera::name", "Lens Model", "?");
        }


        static void InitTable319()
        {
            AddInfo("makernotes:kodak:camera::name", "Kodak Maker", "string");
            AddInfo("makernotes:kodak:camera::name", "Kodak Model", "string");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Width", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Kodak Image Height", "int32u");
        }


        static void InitTable320()
        {
            AddInfo("makernotes:kodak:camera::name", "Year Created", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Month Day Created", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Time Created", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Sharpness", "int8s");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
        }


        static void InitTable321()
        {
            AddInfo("makernotes:kodak:camera::name", "Original File Name", "string");
        }


        static void InitTable322()
        {
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "White Balance", "int8u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Digital Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Image Rotated", "int8u");
            AddInfo("makernotes:kodak:camera::name", "Macro", "int8u");
        }


        static void InitTable323()
        {
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "ISO Setting", "int32u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Optical Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Digital Zoom", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Flash", "int16u");
        }


        static void InitTable324()
        {
            AddInfo("makernotes:kodak:camera::name", "Serial Number", "string");
        }


        static void InitTable325()
        {
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "F Number", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kodak:camera::name", "Date/Time Original", "string");
            AddInfo("makernotes:kodak:camera::name", "ISO", "int16u");
            AddInfo("makernotes:kodak:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:kodak:camera::name", "Unknown Number", "string");
            AddInfo("makernotes:kodak:camera::name", "Unknown Number", "string");
        }


        static void InitTable326()
        {
            AddInfo("makernotes:kodak:image::name", "Preview Image", "?");
            AddInfo("makernotes:kodak:image::name", "Thumbnail Image", "?");
        }


        static void InitTable327()
        {
            AddInfo("makernotes:kyoceraraw:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:kyoceraraw:camera::name", "Model", "string");
            AddInfo("makernotes:kyoceraraw:camera::name", "Make", "string");
            AddInfo("makernotes:kyoceraraw:camera::name", "Date/Time Original", "string");
            AddInfo("makernotes:kyoceraraw:camera::name", "ISO", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "WB RGGB Levels", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "F Number", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "Max Aperture", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:kyoceraraw:camera::name", "Lens", "string");
        }


        static void InitTable328()
        {
            AddInfo("lnk:lnk:other::name", "Fill Attributes", "int16u");
            AddInfo("lnk:lnk:other::name", "Popup Fill Attributes", "int16u");
            AddInfo("lnk:lnk:other::name", "Screen Buffer Size", "int16u");
            AddInfo("lnk:lnk:other::name", "Window Size", "int16u");
            AddInfo("lnk:lnk:other::name", "Window Origin", "int16u");
            AddInfo("lnk:lnk:other::name", "Font Size", "int16u");
            AddInfo("lnk:lnk:other::name", "Font Family", "int32u");
            AddInfo("lnk:lnk:other::name", "Font Weight", "int32u");
            AddInfo("lnk:lnk:other::name", "Font Name", "undef");
            AddInfo("lnk:lnk:other::name", "Cursor Size", "int32u");
            AddInfo("lnk:lnk:other::name", "Full Screen", "int32u");
            AddInfo("lnk:lnk:other::name", "Quick Edit", "int32u");
            AddInfo("lnk:lnk:other::name", "Insert Mode", "int32u");
            AddInfo("lnk:lnk:other::name", "Window Origin Auto", "int32u");
            AddInfo("lnk:lnk:other::name", "History Buffer Size", "int32u");
            AddInfo("lnk:lnk:other::name", "Num History Buffers", "int32u");
            AddInfo("lnk:lnk:other::name", "Remove History Duplicates", "int32u");
        }


        static void InitTable329()
        {
            AddInfo("lnk:lnk:other::name", "Code Page", "int32u");
        }


        static void InitTable330()
        {
            AddInfo("lnk:lnk:other::name", "Target File DOS Name", "var_string");
        }


        static void InitTable331()
        {
            AddInfo("lnk:lnk:other::name", "Common Network Rel Link", "int32u");
            AddInfo("lnk:lnk:other::name", "Common Path Suffix", "int32u");
            AddInfo("lnk:lnk:other::name", "Device Name", "int32u");
            AddInfo("lnk:lnk:other::name", "Drive Serial Number", "int32u");
            AddInfo("lnk:lnk:other::name", "Drive Type", "int32u");
            AddInfo("lnk:lnk:other::name", "Local Base Path", "int32u");
            AddInfo("lnk:lnk:other::name", "Net Name", "int32u");
            AddInfo("lnk:lnk:other::name", "Net Provider Type", "int32u");
            AddInfo("lnk:lnk:other::name", "Volume ID", "int32u");
            AddInfo("lnk:lnk:other::name", "Volume Label", "int32u");
        }


        static void InitTable332()
        {
            AddInfo("lnk:lnk:other::name", "Flags", "int32u");
            AddInfo("lnk:lnk:other::name", "File Attributes", "int32u");
            AddInfo("lnk:lnk:other::name", "Create Date", "int64u");
            AddInfo("lnk:lnk:other::name", "Access Date", "int64u");
            AddInfo("lnk:lnk:other::name", "Modify Date", "int64u");
            AddInfo("lnk:lnk:other::name", "Target File Size", "int32u");
            AddInfo("lnk:lnk:other::name", "Icon Index", "int32u");
            AddInfo("lnk:lnk:other::name", "Run Window", "int32u");
            AddInfo("lnk:lnk:other::name", "Hot Key", "int32u");
            AddInfo("lnk:lnk:other::name", "Description", "int8u");
            AddInfo("lnk:lnk:other::name", "Relative Path", "int8u");
            AddInfo("lnk:lnk:other::name", "Working Directory", "int8u");
            AddInfo("lnk:lnk:other::name", "Command Line Arguments", "int8u");
            AddInfo("lnk:lnk:other::name", "Icon File Name", "int8u");
        }


        static void InitTable333()
        {
            AddInfo("lnk:lnk:other::name", "Machine ID", "var_string");
        }


        static void InitTable334()
        {
            AddInfo("leaf:leaf:camera::name", "Camera Back Type", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Name", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Type", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Profile Version", "?");
        }


        static void InitTable335()
        {
            AddInfo("leaf:leaf:camera::name", "ISO Speed", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Obj Back Type", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Type", "?");
            AddInfo("leaf:leaf:camera::name", "Lens ID", "?");
            AddInfo("leaf:leaf:camera::name", "Lens Type", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Obj Name", "?");
            AddInfo("leaf:leaf:camera::name", "Strobe", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Obj Type", "?");
            AddInfo("leaf:leaf:camera::name", "Camera Obj Version", "?");
        }


        static void InitTable336()
        {
            AddInfo("leaf:leaf:image::name", "CCD Rect", "?");
            AddInfo("leaf:leaf:image::name", "CCD Valid Rect", "?");
            AddInfo("leaf:leaf:image::name", "CCD Video Rect", "?");
            AddInfo("leaf:leaf:image::name", "Capt Prof Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Center Dark Rect", "?");
            AddInfo("leaf:leaf:image::name", "Color Averages", "?");
            AddInfo("leaf:leaf:image::name", "Color Matrix", "?");
            AddInfo("leaf:leaf:image::name", "Dark Correction Type", "?");
            AddInfo("leaf:leaf:image::name", "Image Bounds", "?");
            AddInfo("leaf:leaf:image::name", "Image Fields", "?");
            AddInfo("leaf:leaf:image::name", "Image Offset", "?");
            AddInfo("leaf:leaf:image::name", "Left Dark Rect", "?");
            AddInfo("leaf:leaf:image::name", "Luminance Consts", "?");
            AddInfo("leaf:leaf:image::name", "Mosaic Pattern", "?");
            AddInfo("leaf:leaf:image::name", "Capt Prof Name", "?");
            AddInfo("leaf:leaf:image::name", "Number Of Planes", "?");
            AddInfo("leaf:leaf:image::name", "Raw Data Rotation", "?");
            AddInfo("leaf:leaf:image::name", "Reconstruction Type", "?");
            AddInfo("leaf:leaf:image::name", "Right Dark Rect", "?");
            AddInfo("leaf:leaf:image::name", "Capture Serial Number", "?");
            AddInfo("leaf:leaf:image::name", "Capt Prof Type", "?");
            AddInfo("leaf:leaf:image::name", "Capt Prof Version", "?");
            AddInfo("leaf:leaf:image::name", "XY Offset Info", "?");
        }


        static void InitTable337()
        {
            AddInfo("leaf:leaf:image::name", "Multi Quality", "?");
            AddInfo("leaf:leaf:image::name", "Capture Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Capture Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Single Quality", "?");
            AddInfo("leaf:leaf:image::name", "Capture Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Capture Obj Version", "?");
        }


        static void InitTable338()
        {
            AddInfo("leaf:leaf:image::name", "Color Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Color Mode", "?");
            AddInfo("leaf:leaf:image::name", "Color Type", "?");
            AddInfo("leaf:leaf:image::name", "Has ICC", "?");
            AddInfo("leaf:leaf:image::name", "Input Profile", "?");
            AddInfo("leaf:leaf:image::name", "Color Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Output Profile", "?");
            AddInfo("leaf:leaf:image::name", "Color Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Color Obj Version", "?");
        }


        static void InitTable339()
        {
            AddInfo("leaf:leaf:image::name", "Img Prof Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Image Status", "?");
            AddInfo("leaf:leaf:image::name", "Img Prof Name", "?");
            AddInfo("leaf:leaf:image::name", "Rotation Angle", "?");
            AddInfo("leaf:leaf:image::name", "Img Prof Type", "?");
            AddInfo("leaf:leaf:image::name", "Img Prof Version", "?");
        }


        static void InitTable340()
        {
            AddInfo("leaf:leaf:other::name", "Look Head Back Type", "?");
            AddInfo("leaf:leaf:other::name", "Look Head Name", "?");
            AddInfo("leaf:leaf:other::name", "Look Head Type", "?");
            AddInfo("leaf:leaf:other::name", "Look Head Version", "?");
        }


        static void InitTable341()
        {
            AddInfo("leaf:leaf:camera::name", "Preview Image", "undef");
            AddInfo("leaf:leaf:camera::name", "Preview Info", "?");
            AddInfo("leaf:leaf:camera::name", "PDA Histogram", "?");
            AddInfo("leaf:leaf:camera::name", "Back Serial Number", "?");
            AddInfo("leaf:leaf:camera::name", "ICC To Tone Matrix", "int8u");
            AddInfo("leaf:leaf:camera::name", "ICC To Tone Space Flow", "int16u");
            AddInfo("leaf:leaf:camera::name", "Image Offset", "int16u");
            AddInfo("leaf:leaf:camera::name", "Pattern Rotation Angle", "int16u");
        }


        static void InitTable342()
        {
            AddInfo("leaf:leaf:image::name", "Neut Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Color Casts", "?");
            AddInfo("leaf:leaf:image::name", "Highlight End Points", "?");
            AddInfo("leaf:leaf:image::name", "Neut Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Neutrals", "?");
            AddInfo("leaf:leaf:image::name", "Shadow End Points", "?");
            AddInfo("leaf:leaf:image::name", "Neut Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Neut Obj Version", "?");
        }


        static void InitTable343()
        {
            AddInfo("leaf:leaf:other::name", "Save Obj Back Type", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Auto Active", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Auto Base Name", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Hot Folder", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Open Proc HDR", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Output File Type", "?");
            AddInfo("leaf:leaf:other::name", "Leaf Save Selection", "?");
            AddInfo("leaf:leaf:other::name", "Save Obj Name", "?");
            AddInfo("leaf:leaf:other::name", "Std Auto Active", "?");
            AddInfo("leaf:leaf:other::name", "Std Base Name", "?");
            AddInfo("leaf:leaf:other::name", "Std Hot Folder", "?");
            AddInfo("leaf:leaf:other::name", "Std Open In Photoshop", "?");
            AddInfo("leaf:leaf:other::name", "Std Output Bit Depth", "?");
            AddInfo("leaf:leaf:other::name", "Std Output Color Mode", "?");
            AddInfo("leaf:leaf:other::name", "Std Output File Type", "?");
            AddInfo("leaf:leaf:other::name", "Std Oxygen", "?");
            AddInfo("leaf:leaf:other::name", "Std Save Selection", "?");
            AddInfo("leaf:leaf:other::name", "Std Scaled Output", "?");
            AddInfo("leaf:leaf:other::name", "Std Sharpen Output", "?");
            AddInfo("leaf:leaf:other::name", "Save Obj Type", "?");
            AddInfo("leaf:leaf:other::name", "Save Obj Version", "?");
        }


        static void InitTable344()
        {
            AddInfo("leaf:leaf:image::name", "Sel Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Locks", "?");
            AddInfo("leaf:leaf:image::name", "Sel Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Orientation", "?");
            AddInfo("leaf:leaf:image::name", "Rect", "?");
            AddInfo("leaf:leaf:image::name", "Resolution", "?");
            AddInfo("leaf:leaf:image::name", "Scale", "?");
            AddInfo("leaf:leaf:image::name", "Sel Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Sel Obj Version", "?");
        }


        static void InitTable345()
        {
            AddInfo("leaf:leaf:image::name", "Sharp Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Data Len", "?");
            AddInfo("leaf:leaf:image::name", "Sharp Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Sharp Info", "?");
            AddInfo("leaf:leaf:image::name", "Sharp Method", "?");
            AddInfo("leaf:leaf:image::name", "Sharp Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Sharp Obj Version", "?");
        }


        static void InitTable346()
        {
            AddInfo("leaf:leaf:image::name", "Shoot Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Shoot Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Shoot Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Shoot Obj Version", "?");
        }


        static void InitTable347()
        {
            AddInfo("leaf:leaf:image::name", "Tone Obj Back Type", "?");
            AddInfo("leaf:leaf:image::name", "Gamma", "?");
            AddInfo("leaf:leaf:image::name", "Tone Obj Name", "?");
            AddInfo("leaf:leaf:image::name", "Npts", "?");
            AddInfo("leaf:leaf:image::name", "Tones", "?");
            AddInfo("leaf:leaf:image::name", "Tone Obj Type", "?");
            AddInfo("leaf:leaf:image::name", "Tone Obj Version", "?");
        }


        static void InitTable348()
        {
            AddInfo("lytro:lytro:camera::name", "Firmware Version", "?");
            AddInfo("lytro:lytro:camera::name", "Make", "?");
            AddInfo("lytro:lytro:camera::name", "Camera Model Name", "?");
            AddInfo("lytro:lytro:camera::name", "Serial Number", "?");
            AddInfo("lytro:lytro:camera::name", "Accelerometer Time", "?");
            AddInfo("lytro:lytro:camera::name", "Accelerometer X", "?");
            AddInfo("lytro:lytro:camera::name", "Accelerometer Y", "?");
            AddInfo("lytro:lytro:camera::name", "Accelerometer Z", "?");
            AddInfo("lytro:lytro:camera::name", "Date Time Original", "?");
            AddInfo("lytro:lytro:camera::name", "F Number", "?");
            AddInfo("lytro:lytro:camera::name", "Focal Length", "?");
            AddInfo("lytro:lytro:camera::name", "Lens Temperature", "?");
            AddInfo("lytro:lytro:camera::name", "ISO", "?");
            AddInfo("lytro:lytro:camera::name", "Focal Plane X Resolution", "?");
            AddInfo("lytro:lytro:camera::name", "Sensor Serial Number", "?");
            AddInfo("lytro:lytro:camera::name", "Frame Exposure Time", "?");
            AddInfo("lytro:lytro:camera::name", "Exposure Time", "?");
            AddInfo("lytro:lytro:camera::name", "Soc Temperature", "?");
            AddInfo("lytro:lytro:camera::name", "Embedded Image", "?");
            AddInfo("lytro:lytro:camera::name", "Image Limit Exposure Bias", "?");
            AddInfo("lytro:lytro:camera::name", "Image Modulation Exposure Bias", "?");
            AddInfo("lytro:lytro:camera::name", "Orientation", "?");
            AddInfo("lytro:lytro:camera::name", "JSON Metadata", "?");
            AddInfo("lytro:lytro:camera::name", "Camera Type", "?");
        }


        static void InitTable349()
        {
            AddInfo("m2ts:ac3:audio::name", "Audio Bitrate", "?");
            AddInfo("m2ts:ac3:audio::name", "Audio Channels", "?");
            AddInfo("m2ts:ac3:audio::name", "Audio Sample Rate", "?");
            AddInfo("m2ts:ac3:audio::name", "Surround Mode", "?");
        }


        static void InitTable350()
        {
            AddInfo("m2ts:m2ts:video::name", "Audio Stream Type", "?");
            AddInfo("m2ts:m2ts:video::name", "Duration", "?");
            AddInfo("m2ts:m2ts:video::name", "Video Stream Type", "?");
        }


        static void InitTable351()
        {
            AddInfo("mie:mie-audio:audio::name", "Related Audio File Type", "string");
            AddInfo("mie:mie-audio:audio::name", "Related Audio File Name", "string");
            AddInfo("mie:mie-audio:audio::name", "Channels", "int8u");
            AddInfo("mie:mie-audio:audio::name", "Audio Compression", "string");
            AddInfo("mie:mie-audio:audio::name", "Duration", "rational64u");
            AddInfo("mie:mie-audio:audio::name", "Sample Bits", "int16u");
            AddInfo("mie:mie-audio:audio::name", "Sample Rate", "int32u");
            AddInfo("mie:mie-audio:audio::name", "Related Audio File", "undef");
        }


        static void InitTable352()
        {
            AddInfo("mie:mie-camera:camera::name", "Brightness", "int8s");
            AddInfo("mie:mie-camera:camera::name", "Color Balance", "rational64u");
            AddInfo("mie:mie-camera:camera::name", "Color Temperature", "int32u");
            AddInfo("mie:mie-camera:camera::name", "Contrast", "int8s");
            AddInfo("mie:mie-camera:camera::name", "Digital Zoom", "rational64u");
            AddInfo("mie:mie-camera:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("mie:mie-camera:camera::name", "Exposure Mode", "string");
            AddInfo("mie:mie-camera:camera::name", "Exposure Time", "rational64u");
            AddInfo("mie:mie-camera:camera::name", "Firmware Version", "string");
            AddInfo("mie:mie-camera:camera::name", "Focus Mode", "string");
            AddInfo("mie:mie-camera:camera::name", "ISO", "int16u");
            AddInfo("mie:mie-camera:camera::name", "ISO Setting", "int16u");
            AddInfo("mie:mie-camera:camera::name", "Image Number", "int32u");
            AddInfo("mie:mie-camera:camera::name", "Image Quality", "string");
            AddInfo("mie:mie-camera:camera::name", "Image Stabilization", "int8u");
            AddInfo("mie:mie-camera:camera::name", "Make", "string");
            AddInfo("mie:mie-camera:camera::name", "Measured EV", "rational64s");
            AddInfo("mie:mie-camera:camera::name", "Model", "string");
            AddInfo("mie:mie-camera:camera::name", "Owner Name", "string");
            AddInfo("mie:mie-camera:camera::name", "Saturation", "int8s");
            AddInfo("mie:mie-camera:camera::name", "Sensor Size", "rational64u");
            AddInfo("mie:mie-camera:camera::name", "Serial Number", "string");
            AddInfo("mie:mie-camera:camera::name", "Sharpness", "int8s");
            AddInfo("mie:mie-camera:camera::name", "Shooting Mode", "string");
        }


        static void InitTable353()
        {
            AddInfo("mie:mie-doc:document::name", "Author", "string");
            AddInfo("mie:mie-doc:document::name", "Comment", "string");
            AddInfo("mie:mie-doc:document::name", "Contributors", "string");
            AddInfo("mie:mie-doc:document::name", "Copyright", "string");
            AddInfo("mie:mie-doc:document::name", "Create Date", "string");
            AddInfo("mie:mie-doc:document::name", "Email", "string");
            AddInfo("mie:mie-doc:document::name", "Keywords", "string");
            AddInfo("mie:mie-doc:document::name", "Modify Date", "string");
            AddInfo("mie:mie-doc:document::name", "Date/Time Original", "string");
            AddInfo("mie:mie-doc:document::name", "Phone Number", "string");
            AddInfo("mie:mie-doc:document::name", "References", "string");
            AddInfo("mie:mie-doc:document::name", "Software", "string");
            AddInfo("mie:mie-doc:document::name", "Title", "string");
            AddInfo("mie:mie-doc:document::name", "URL", "string");
        }


        static void InitTable354()
        {
            AddInfo("mie:mie-extender:camera::name", "Extender Magnification", "rational64s");
            AddInfo("mie:mie-extender:camera::name", "Extender Make", "string");
            AddInfo("mie:mie-extender:camera::name", "Extender Model", "string");
            AddInfo("mie:mie-extender:camera::name", "Extender Serial Number", "string");
        }


        static void InitTable355()
        {
            AddInfo("mie:mie-flash:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("mie:mie-flash:camera::name", "Flash Fired", "int8u");
            AddInfo("mie:mie-flash:camera::name", "Flash Guide Number", "string");
            AddInfo("mie:mie-flash:camera::name", "Flash Make", "string");
            AddInfo("mie:mie-flash:camera::name", "Flash Mode", "string");
            AddInfo("mie:mie-flash:camera::name", "Flash Model", "string");
            AddInfo("mie:mie-flash:camera::name", "Flash Serial Number", "string");
            AddInfo("mie:mie-flash:camera::name", "Flash Type", "string");
        }


        static void InitTable356()
        {
            AddInfo("mie:mie-gps:location::name", "GPS Altitude", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Dest Bearing", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Date Time", "string");
            AddInfo("mie:mie-gps:location::name", "GPS Map Datum", "string");
            AddInfo("mie:mie-gps:location::name", "GPS Differential", "int8u");
            AddInfo("mie:mie-gps:location::name", "GPS Dest Distance", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Track", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Latitude", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Longitude", "rational64s");
            AddInfo("mie:mie-gps:location::name", "GPS Measure Mode", "int8u");
            AddInfo("mie:mie-gps:location::name", "GPS Satellites", "string");
            AddInfo("mie:mie-gps:location::name", "GPS Speed", "rational64s");
        }


        static void InitTable357()
        {
            AddInfo("mie:mie-geo:location::name", "Address", "string");
            AddInfo("mie:mie-geo:location::name", "City", "string");
            AddInfo("mie:mie-geo:location::name", "Country", "string");
            AddInfo("mie:mie-geo:location::name", "Postal Code", "string");
            AddInfo("mie:mie-geo:location::name", "State", "string");
        }


        static void InitTable358()
        {
            AddInfo("mie:mie-image:image::name", "Full Size Image Type", "string");
            AddInfo("mie:mie-image:image::name", "Full Size Image Name", "string");
            AddInfo("mie:mie-image:image::name", "Bit Depth", "int16u");
            AddInfo("mie:mie-image:image::name", "Color Space", "string");
            AddInfo("mie:mie-image:image::name", "Components Configuration", "string");
            AddInfo("mie:mie-image:image::name", "Compression Ratio", "rational32u");
            AddInfo("mie:mie-image:image::name", "Image Size", "int16u");
            AddInfo("mie:mie-image:image::name", "Resolution", "rational64u");
            AddInfo("mie:mie-image:image::name", "Full Size Image", "undef");
        }


        static void InitTable359()
        {
            AddInfo("mie:mie-lens:camera::name", "F Number", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Focal Length", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Focus Distance", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Lens Make", "string");
            AddInfo("mie:mie-lens:camera::name", "Max Aperture", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Max Aperture At Max Focal", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Max Focal Length", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Min Aperture", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Min Focal Length", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Lens Model", "string");
            AddInfo("mie:mie-lens:camera::name", "Optical Zoom", "rational64u");
            AddInfo("mie:mie-lens:camera::name", "Lens Serial Number", "string");
        }


        static void InitTable360()
        {
            AddInfo("mie:mie-main:other::name", "Subfile Type", "string");
            AddInfo("mie:mie-main:other::name", "MIE Version", "string");
            AddInfo("mie:mie-main:other::name", "Subfile Directory", "string");
            AddInfo("mie:mie-main:other::name", "Subfile Name", "string");
            AddInfo("mie:mie-main:other::name", "Subfile MIME Type", "string");
            AddInfo("mie:mie-main:other::name", "Subfile Data", "undef");
            AddInfo("mie:mie-main:other::name", "Subfile Resource", "undef");
            AddInfo("mie:mie-main:other::name", "MD5 Digest", "string");
            AddInfo("mie:mie-main:other::name", "Trailer Signature", "undef");
        }


        static void InitTable361()
        {
            AddInfo("mie:mie-orient:camera::name", "Azimuth", "rational64s");
            AddInfo("mie:mie-orient:camera::name", "Declination", "rational64s");
            AddInfo("mie:mie-orient:camera::name", "Elevation", "rational64s");
            AddInfo("mie:mie-orient:camera::name", "Right Ascension", "rational64s");
            AddInfo("mie:mie-orient:camera::name", "Rotation", "rational64s");
        }


        static void InitTable362()
        {
            AddInfo("mie:mie-preview:image::name", "Preview Image Type", "string");
            AddInfo("mie:mie-preview:image::name", "Preview Image Name", "string");
            AddInfo("mie:mie-preview:image::name", "Preview Image Size", "int16u");
            AddInfo("mie:mie-preview:image::name", "Preview Image", "undef");
        }


        static void InitTable363()
        {
            AddInfo("mie:mie-thumbnail:image::name", "Thumbnail Image Type", "string");
            AddInfo("mie:mie-thumbnail:image::name", "Thumbnail Image Name", "string");
            AddInfo("mie:mie-thumbnail:image::name", "Thumbnail Image Size", "int16u");
            AddInfo("mie:mie-thumbnail:image::name", "Thumbnail Image", "undef");
        }


        static void InitTable364()
        {
            AddInfo("mie:mie-utm:location::name", "UTM Map Datum", "string");
            AddInfo("mie:mie-utm:location::name", "UTM Easting", "string");
            AddInfo("mie:mie-utm:location::name", "UTM Northing", "string");
            AddInfo("mie:mie-utm:location::name", "UTM Zone", "int8s");
        }


        static void InitTable365()
        {
            AddInfo("mie:mie-video:video::name", "Related Video File Type", "string");
            AddInfo("mie:mie-video:video::name", "Related Video File Name", "string");
            AddInfo("mie:mie-video:video::name", "Codec", "string");
            AddInfo("mie:mie-video:video::name", "Duration", "rational64u");
            AddInfo("mie:mie-video:video::name", "Related Video File", "undef");
        }


        static void InitTable366()
        {
            AddInfo("miff:miff:image::name", "Background Color", "?");
            AddInfo("miff:miff:image::name", "Blue Primary", "?");
            AddInfo("miff:miff:image::name", "Border Color", "?");
            AddInfo("miff:miff:image::name", "Class", "?");
            AddInfo("miff:miff:image::name", "Colors", "?");
            AddInfo("miff:miff:image::name", "Color Space", "?");
            AddInfo("miff:miff:image::name", "Image Width", "?");
            AddInfo("miff:miff:image::name", "Compression", "?");
            AddInfo("miff:miff:image::name", "Delay", "?");
            AddInfo("miff:miff:image::name", "Depth", "?");
            AddInfo("miff:miff:image::name", "Dispose", "?");
            AddInfo("miff:miff:image::name", "Gamma", "?");
            AddInfo("miff:miff:image::name", "Green Primary", "?");
            AddInfo("miff:miff:image::name", "ID", "?");
            AddInfo("miff:miff:image::name", "Iterations", "?");
            AddInfo("miff:miff:image::name", "Label", "?");
            AddInfo("miff:miff:image::name", "Matt Color", "?");
            AddInfo("miff:miff:image::name", "Matte", "?");
            AddInfo("miff:miff:image::name", "Montage", "?");
            AddInfo("miff:miff:image::name", "Packets", "?");
            AddInfo("miff:miff:image::name", "Page", "?");
            AddInfo("miff:miff:image::name", "Red Primary", "?");
            AddInfo("miff:miff:image::name", "Rendering Intent", "?");
            AddInfo("miff:miff:image::name", "Resolution", "?");
            AddInfo("miff:miff:image::name", "Image Height", "?");
            AddInfo("miff:miff:image::name", "Scene", "?");
            AddInfo("miff:miff:image::name", "Signature", "?");
            AddInfo("miff:miff:image::name", "Units", "?");
            AddInfo("miff:miff:image::name", "White Point", "?");
        }


        static void InitTable367()
        {
            AddInfo("mng:mng:image::name", "Background Color", "int16u");
            AddInfo("mng:mng:image::name", "Mandatory Background", "int8u");
            AddInfo("mng:mng:image::name", "Background Image ID", "int16u");
            AddInfo("mng:mng:image::name", "Background Tiling", "int8u");
        }


        static void InitTable368()
        {
            AddInfo("mng:mng:image::name", "Image Width", "int32u");
            AddInfo("mng:mng:image::name", "Image Height", "int32u");
            AddInfo("mng:mng:image::name", "Bit Depth", "int8u");
            AddInfo("mng:mng:image::name", "Color Type", "int8u");
            AddInfo("mng:mng:image::name", "Compression", "int8u");
            AddInfo("mng:mng:image::name", "Filter", "int8u");
            AddInfo("mng:mng:image::name", "Interlace", "int8u");
            AddInfo("mng:mng:image::name", "Red Sample", "int32u");
            AddInfo("mng:mng:image::name", "Green Sample", "int32u");
            AddInfo("mng:mng:image::name", "Blue Sample", "int32u");
            AddInfo("mng:mng:image::name", "Alpha Sample", "int32u");
            AddInfo("mng:mng:image::name", "Viewable", "int8u");
        }


        static void InitTable369()
        {
            AddInfo("mng:mng:image::name", "First Object", "int16u");
            AddInfo("mng:mng:image::name", "Last Object", "int16u");
            AddInfo("mng:mng:image::name", "Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Clip Boundary", "int32u");
        }


        static void InitTable370()
        {
            AddInfo("mng:mng:image::name", "Source ID", "int16u");
            AddInfo("mng:mng:image::name", "Clone ID", "int16u");
            AddInfo("mng:mng:image::name", "Clone Type", "int8u");
            AddInfo("mng:mng:image::name", "Do Not Show", "int8u");
            AddInfo("mng:mng:image::name", "Concrete Flag", "int8u");
            AddInfo("mng:mng:image::name", "Local Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Delta XY", "int32u");
        }


        static void InitTable371()
        {
            AddInfo("mng:mng:image::name", "Object ID", "int16u");
            AddInfo("mng:mng:image::name", "Do Not Show", "int8u");
            AddInfo("mng:mng:image::name", "Concrete Flag", "int8u");
            AddInfo("mng:mng:image::name", "XY Location", "int32u");
            AddInfo("mng:mng:image::name", "Clipping Boundary", "int32u");
        }


        static void InitTable372()
        {
            AddInfo("mng:mng:image::name", "Object ID", "int16u");
            AddInfo("mng:mng:image::name", "Image Type", "int8u");
            AddInfo("mng:mng:image::name", "Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Block Size", "int32u");
            AddInfo("mng:mng:image::name", "Block Location", "int32u");
        }


        static void InitTable373()
        {
            AddInfo("mng:mng:image::name", "Snapshot ID", "int16u");
            AddInfo("mng:mng:image::name", "Snapshot Name", "string");
        }


        static void InitTable374()
        {
            AddInfo("mng:mng:image::name", "Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Priority", "int8u");
        }


        static void InitTable375()
        {
            AddInfo("mng:mng:image::name", "Image Width", "int32u");
            AddInfo("mng:mng:image::name", "Image Height", "int32u");
            AddInfo("mng:mng:image::name", "Color Type", "int8u");
            AddInfo("mng:mng:image::name", "Bit Depth", "int8u");
            AddInfo("mng:mng:image::name", "Compression", "int8u");
            AddInfo("mng:mng:image::name", "Interlace", "int8u");
            AddInfo("mng:mng:image::name", "Alpha Bit Depth", "int8u");
            AddInfo("mng:mng:image::name", "Alpha Compression", "int8u");
            AddInfo("mng:mng:image::name", "Alpha Filter", "int8u");
            AddInfo("mng:mng:image::name", "Alpha Interlace", "int8u");
        }


        static void InitTable376()
        {
            AddInfo("mng:mng:image::name", "Nest Level", "int8u");
            AddInfo("mng:mng:image::name", "Iteration Count", "int32u");
            AddInfo("mng:mng:image::name", "Termination Condition", "int8u");
            AddInfo("mng:mng:image::name", "Iteration Min Max", "int32u");
            AddInfo("mng:mng:image::name", "Signal Number", "int32u");
        }


        static void InitTable377()
        {
            AddInfo("mng:mng:image::name", "Image Width", "int32u");
            AddInfo("mng:mng:image::name", "Image Height", "int32u");
            AddInfo("mng:mng:image::name", "Ticks Per Second", "int32u");
            AddInfo("mng:mng:image::name", "Nominal Layer Count", "int32u");
            AddInfo("mng:mng:image::name", "Nominal Frame Count", "int32u");
            AddInfo("mng:mng:image::name", "Nominal Play Time", "int32u");
            AddInfo("mng:mng:image::name", "Simplicity Profile", "int32u");
        }


        static void InitTable378()
        {
            AddInfo("mng:mng:image::name", "First Object ID", "int16u");
            AddInfo("mng:mng:image::name", "Last Object ID", "int16u");
            AddInfo("mng:mng:image::name", "X Method", "int8u");
            AddInfo("mng:mng:image::name", "X Mag", "int16u");
            AddInfo("mng:mng:image::name", "Y Mag", "int16u");
            AddInfo("mng:mng:image::name", "Left Mag", "int16u");
            AddInfo("mng:mng:image::name", "Right Mag", "int16u");
            AddInfo("mng:mng:image::name", "Top Mag", "int16u");
            AddInfo("mng:mng:image::name", "Bottom Mag", "int16u");
            AddInfo("mng:mng:image::name", "Y Method", "int8u");
        }


        static void InitTable379()
        {
            AddInfo("mng:mng:image::name", "Drop By Keyword", "?");
            AddInfo("mng:mng:image::name", "Discard Objects", "?");
            AddInfo("mng:mng:image::name", "Drop Chunks", "?");
            AddInfo("mng:mng:image::name", "Frame", "?");
            AddInfo("mng:mng:image::name", "Ordering Restrictions", "?");
            AddInfo("mng:mng:image::name", "Partial Palette", "?");
            AddInfo("mng:mng:image::name", "Save Objects", "?");
            AddInfo("mng:mng:image::name", "Seek Point", "?");
            AddInfo("mng:mng:image::name", "Resources Needed", "?");
        }


        static void InitTable380()
        {
            AddInfo("mng:mng:image::name", "First Object", "int16u");
            AddInfo("mng:mng:image::name", "Last Object", "int16u");
            AddInfo("mng:mng:image::name", "Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Delta XY", "int32u");
        }


        static void InitTable381()
        {
            AddInfo("mng:mng:image::name", "Destination ID", "int16u");
            AddInfo("mng:mng:image::name", "Target Delta Type", "int8u");
            AddInfo("mng:mng:image::name", "Target XY", "int32u");
            AddInfo("mng:mng:image::name", "Source ID", "int16u");
            AddInfo("mng:mng:image::name", "Composition Mode", "int8u");
            AddInfo("mng:mng:image::name", "Orientation", "int8u");
            AddInfo("mng:mng:image::name", "Offset Origin", "int8u");
            AddInfo("mng:mng:image::name", "Offset XY", "int32u");
            AddInfo("mng:mng:image::name", "Boundary Origin", "int8u");
            AddInfo("mng:mng:image::name", "Past Clipping Boundary", "int32u");
        }


        static void InitTable382()
        {
            AddInfo("mng:mng:image::name", "New Color Type", "int8u");
            AddInfo("mng:mng:image::name", "New Bit Depth", "int8u");
            AddInfo("mng:mng:image::name", "Fill Method", "int8u");
        }


        static void InitTable383()
        {
            AddInfo("mng:mng:image::name", "First Object", "int16u");
            AddInfo("mng:mng:image::name", "Last Object", "int16u");
            AddInfo("mng:mng:image::name", "Show Mode", "int8u");
        }


        static void InitTable384()
        {
            AddInfo("mng:mng:image::name", "Termination Action", "int8u");
            AddInfo("mng:mng:image::name", "Iteration End Action", "int8u");
            AddInfo("mng:mng:image::name", "Delay", "int32u");
            AddInfo("mng:mng:image::name", "Iteration Max", "int32u");
        }


        static void InitTable385()
        {
            AddInfo("moi:moi:video::name", "MOI Version", "string");
            AddInfo("moi:moi:video::name", "Date Time Original", "undef");
            AddInfo("moi:moi:video::name", "Duration", "int32u");
            AddInfo("moi:moi:video::name", "Aspect Ratio", "int8u");
            AddInfo("moi:moi:video::name", "Audio Codec", "int16u");
            AddInfo("moi:moi:video::name", "Audio Bitrate", "int8u");
            AddInfo("moi:moi:video::name", "Video Bitrate", "int16u");
        }


        static void InitTable386()
        {
            AddInfo("mpc:mpc:audio::name", "Total Frames", "?");
            AddInfo("mpc:mpc:audio::name", "Sample Rate", "?");
            AddInfo("mpc:mpc:audio::name", "Quality", "?");
            AddInfo("mpc:mpc:audio::name", "Max Band", "?");
            AddInfo("mpc:mpc:audio::name", "Replay Gain Track Peak", "?");
            AddInfo("mpc:mpc:audio::name", "Replay Gain Track Gain", "?");
            AddInfo("mpc:mpc:audio::name", "Replay Gain Album Peak", "?");
            AddInfo("mpc:mpc:audio::name", "Replay Gain Album Gain", "?");
            AddInfo("mpc:mpc:audio::name", "Fast Seek", "?");
            AddInfo("mpc:mpc:audio::name", "Gapless", "?");
            AddInfo("mpc:mpc:audio::name", "Encoder Version", "?");
        }


        static void InitTable387()
        {
            AddInfo("mpeg:mpeg:audio::name", "MPEG Audio Version", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Layer", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Bitrate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Bitrate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Bitrate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Bitrate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Audio Bitrate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Sample Rate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Sample Rate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Sample Rate", "?");
            AddInfo("mpeg:mpeg:audio::name", "Channel Mode", "?");
            AddInfo("mpeg:mpeg:audio::name", "MS Stereo", "?");
            AddInfo("mpeg:mpeg:audio::name", "Mode Extension", "?");
            AddInfo("mpeg:mpeg:audio::name", "Intensity Stereo", "?");
            AddInfo("mpeg:mpeg:audio::name", "Copyright Flag", "?");
            AddInfo("mpeg:mpeg:audio::name", "Original Media", "?");
            AddInfo("mpeg:mpeg:audio::name", "Emphasis", "?");
        }


        static void InitTable388()
        {
            AddInfo("mpeg:mpeg:audio::name", "Lame Method", "int8u");
            AddInfo("mpeg:mpeg:audio::name", "Lame Low Pass Filter", "int8u");
            AddInfo("mpeg:mpeg:audio::name", "Lame Bitrate", "int8u");
            AddInfo("mpeg:mpeg:audio::name", "Lame Stereo Mode", "int8u");
        }


        static void InitTable389()
        {
            AddInfo("mpeg:mpeg:video::name", "Image Width", "?");
            AddInfo("mpeg:mpeg:video::name", "Image Height", "?");
            AddInfo("mpeg:mpeg:video::name", "Aspect Ratio", "?");
            AddInfo("mpeg:mpeg:video::name", "Frame Rate", "?");
            AddInfo("mpeg:mpeg:video::name", "Video Bitrate", "?");
        }


        static void InitTable390()
        {
            AddInfo("mpeg:mpeg:audio::name", "VBR Frames", "?");
            AddInfo("mpeg:mpeg:audio::name", "VBR Bytes", "?");
            AddInfo("mpeg:mpeg:audio::name", "VBR Scale", "?");
            AddInfo("mpeg:mpeg:audio::name", "Encoder", "?");
            AddInfo("mpeg:mpeg:audio::name", "Lame VBR Quality", "?");
            AddInfo("mpeg:mpeg:audio::name", "Lame Quality", "?");
        }


        static void InitTable391()
        {
            AddInfo("mpf:mpimage:image::name", "MP Image Flags", "int32u");
            AddInfo("mpf:mpimage:image::name", "MP Image Format", "int32u");
            AddInfo("mpf:mpimage:image::name", "MP Image Type", "int32u");
            AddInfo("mpf:mpimage:image::name", "MP Image Length", "int32u");
            AddInfo("mpf:mpimage:image::name", "MP Image Start", "int32u");
            AddInfo("mpf:mpimage:image::name", "Dependent Image 1 Entry Number", "int16u");
            AddInfo("mpf:mpimage:image::name", "Dependent Image 2 Entry Number", "int16u");
        }


        static void InitTable392()
        {
            AddInfo("mpf:mpf0:image::name", "MPF Version", "?");
            AddInfo("mpf:mpf0:image::name", "Number Of Images", "?");
            AddInfo("mpf:mpf0:image::name", "Image UID List", "?");
            AddInfo("mpf:mpf0:image::name", "Total Frames", "?");
            AddInfo("mpf:mpf0:image::name", "MP Individual Num", "?");
            AddInfo("mpf:mpf0:image::name", "Pan Orientation", "?");
            AddInfo("mpf:mpf0:image::name", "Pan Overlap H", "?");
            AddInfo("mpf:mpf0:image::name", "Pan Overlap V", "?");
            AddInfo("mpf:mpf0:image::name", "Base Viewpoint Num", "?");
            AddInfo("mpf:mpf0:image::name", "Convergence Angle", "?");
            AddInfo("mpf:mpf0:image::name", "Baseline Length", "?");
            AddInfo("mpf:mpf0:image::name", "Vertical Divergence", "?");
            AddInfo("mpf:mpf0:image::name", "Axis Distance X", "?");
            AddInfo("mpf:mpf0:image::name", "Axis Distance Y", "?");
            AddInfo("mpf:mpf0:image::name", "Axis Distance Z", "?");
            AddInfo("mpf:mpf0:image::name", "Yaw Angle", "?");
            AddInfo("mpf:mpf0:image::name", "Pitch Angle", "?");
            AddInfo("mpf:mpf0:image::name", "Roll Angle", "?");
        }


        static void InitTable393()
        {
            AddInfo("xmp:xmp-mwg-coll:image::name", "Collections", "struct");
            AddInfo("xmp:xmp-mwg-coll:image::name", "Collection Name", "string");
            AddInfo("xmp:xmp-mwg-coll:image::name", "Collection URI", "string");
        }


        static void InitTable394()
        {
            AddInfo("xmp:xmp-mwg-kw:image::name", "Keyword Info", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 1 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 1 Children", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 2 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 2 Children", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 3 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 3 Children", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 4 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 4 Children", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 5 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 5 Children", "struct");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 6 Applied", "boolean");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 6", "string");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 5", "string");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 4", "string");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 3", "string");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 2", "string");
            AddInfo("xmp:xmp-mwg-kw:image::name", "Hierarchical Keywords 1", "string");
        }


        static void InitTable395()
        {
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Info", "struct");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Applied To Dimensions", "struct");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Applied To Dimensions H", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Applied To Dimensions Unit", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Applied To Dimensions W", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region List", "struct");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area", "struct");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area D", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area H", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area Unit", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area W", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area X", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Area Y", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Bar Code Value", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Description", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Extensions", "struct");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Focus Usage", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Name", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Rotation", "real");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region See Also", "string");
            AddInfo("xmp:xmp-mwg-rs:image::name", "Region Type", "string");
        }


        static void InitTable396()
        {
            AddInfo("mxf:mxf:video::name", "MXF Version", "int16u");
            AddInfo("mxf:mxf:video::name", "Footer Position", "int64u");
            AddInfo("mxf:mxf:video::name", "Header Size", "int64u");
        }


        static void InitTable397()
        {
            AddInfo("mxf:mxf:video::name", "Organization ID", "string");
            AddInfo("mxf:mxf:video::name", "UPID", "?");
            AddInfo("mxf:mxf:video::name", "UPN", "?");
            AddInfo("mxf:mxf:video::name", "IBTN", "?");
            AddInfo("mxf:mxf:video::name", "ISAN", "?");
            AddInfo("mxf:mxf:video::name", "ISBN", "?");
            AddInfo("mxf:mxf:video::name", "ISSN", "?");
            AddInfo("mxf:mxf:video::name", "ISWC", "?");
            AddInfo("mxf:mxf:video::name", "ISMN", "?");
            AddInfo("mxf:mxf:video::name", "ISCI", "?");
            AddInfo("mxf:mxf:video::name", "ISRC", "?");
            AddInfo("mxf:mxf:video::name", "ISRN", "?");
            AddInfo("mxf:mxf:video::name", "ISBD", "?");
            AddInfo("mxf:mxf:video::name", "ISTC", "?");
            AddInfo("mxf:mxf:video::name", "SICI", "?");
            AddInfo("mxf:mxf:video::name", "BICI", "?");
            AddInfo("mxf:mxf:video::name", "AICI", "?");
            AddInfo("mxf:mxf:video::name", "PII", "?");
            AddInfo("mxf:mxf:video::name", "DOI", "?");
            AddInfo("mxf:mxf:video::name", "Instance UID", "?");
            AddInfo("mxf:mxf:video::name", "Package ID", "?");
            AddInfo("mxf:mxf:video::name", "Device Designation", "string");
            AddInfo("mxf:mxf:video::name", "Device Model", "string");
            AddInfo("mxf:mxf:video::name", "Device Serial Number", "string");
            AddInfo("mxf:mxf:video::name", "URL", "string");
            AddInfo("mxf:mxf:video::name", "URL", "?");
            AddInfo("mxf:mxf:video::name", "PURL", "string");
            AddInfo("mxf:mxf:video::name", "URN", "string");
            AddInfo("mxf:mxf:video::name", "Transmission ID", "string");
            AddInfo("mxf:mxf:video::name", "Archive ID", "string");
            AddInfo("mxf:mxf:video::name", "Item ID", "string");
            AddInfo("mxf:mxf:video::name", "Accounting Reference Number", "string");
            AddInfo("mxf:mxf:video::name", "Traffic ID", "string");
            AddInfo("mxf:mxf:video::name", "Reel Or Roll Number", "string");
            AddInfo("mxf:mxf:video::name", "Local Tape Number", "string");
            AddInfo("mxf:mxf:video::name", "LUID", "int32u");
            AddInfo("mxf:mxf:video::name", "Package Name", "?");
            AddInfo("mxf:mxf:video::name", "Local File Path", "string");
            AddInfo("mxf:mxf:video::name", "Edge Code", "string");
            AddInfo("mxf:mxf:video::name", "Frame Code", "string");
            AddInfo("mxf:mxf:video::name", "Key Code", "?");
            AddInfo("mxf:mxf:video::name", "Ink Number", "string");
            AddInfo("mxf:mxf:video::name", "Key Text", "string");
            AddInfo("mxf:mxf:video::name", "Key Frame", "string");
            AddInfo("mxf:mxf:video::name", "Key Sound", "string");
            AddInfo("mxf:mxf:video::name", "Key Data Or Program", "string");
            AddInfo("mxf:mxf:video::name", "Title Kind", "string");
            AddInfo("mxf:mxf:video::name", "Main Title", "string");
            AddInfo("mxf:mxf:video::name", "Secondary Title", "string");
            AddInfo("mxf:mxf:video::name", "Series Number", "string");
            AddInfo("mxf:mxf:video::name", "Episode Number", "string");
            AddInfo("mxf:mxf:video::name", "Scene Number", "string");
            AddInfo("mxf:mxf:video::name", "Take Number", "int16u");
            AddInfo("mxf:mxf:video::name", "CISAC Legal Entity ID", "?");
            AddInfo("mxf:mxf:video::name", "AGICOAID", "?");
            AddInfo("mxf:mxf:video::name", "Source Organization", "string");
            AddInfo("mxf:mxf:video::name", "Supply Contract Number", "string");
            AddInfo("mxf:mxf:video::name", "Original Producer Name", "string");
            AddInfo("mxf:mxf:video::name", "Total Episode Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Copyright Status", "string");
            AddInfo("mxf:mxf:video::name", "Copyright Owner Name", "string");
            AddInfo("mxf:mxf:video::name", "Intellectual Property Description", "string");
            AddInfo("mxf:mxf:video::name", "Intellectual Property Rights", "string");
            AddInfo("mxf:mxf:video::name", "Rightsholder", "string");
            AddInfo("mxf:mxf:video::name", "Rights Management Authority", "string");
            AddInfo("mxf:mxf:video::name", "Interested Party Name", "string");
            AddInfo("mxf:mxf:video::name", "Maximum Use Count", "int16u");
            AddInfo("mxf:mxf:video::name", "License Options Description", "string");
            AddInfo("mxf:mxf:video::name", "Currency Code", "string");
            AddInfo("mxf:mxf:video::name", "Royalty Payment Information", "string");
            AddInfo("mxf:mxf:video::name", "Royalty Income Information", "string");
            AddInfo("mxf:mxf:video::name", "Restrictionson Use", "string");
            AddInfo("mxf:mxf:video::name", "Ex CCI Data", "?");
            AddInfo("mxf:mxf:video::name", "User Name", "string");
            AddInfo("mxf:mxf:video::name", "User Name", "?");
            AddInfo("mxf:mxf:video::name", "Password", "string");
            AddInfo("mxf:mxf:video::name", "Password", "?");
            AddInfo("mxf:mxf:video::name", "Scrambling Key Kind", "string");
            AddInfo("mxf:mxf:video::name", "Scrambling Key Value", "int8u");
            AddInfo("mxf:mxf:video::name", "Broadcast Organization Name", "string");
            AddInfo("mxf:mxf:video::name", "Broadcast Channel", "string");
            AddInfo("mxf:mxf:video::name", "Broadcast Medium Kind", "string");
            AddInfo("mxf:mxf:video::name", "Broadcast Region", "string");
            AddInfo("mxf:mxf:video::name", "First Broadcast Flag", "?");
            AddInfo("mxf:mxf:video::name", "Current Repeat Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Previous Repeat Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Audience Rating", "int32u");
            AddInfo("mxf:mxf:video::name", "Audience Reach", "int32u");
            AddInfo("mxf:mxf:video::name", "Nature Of Personality", "string");
            AddInfo("mxf:mxf:video::name", "Contribution Status", "string");
            AddInfo("mxf:mxf:video::name", "Support Or Administration Status", "string");
            AddInfo("mxf:mxf:video::name", "Organization Kind", "string");
            AddInfo("mxf:mxf:video::name", "Production Organization Role", "string");
            AddInfo("mxf:mxf:video::name", "Support Organization Role", "string");
            AddInfo("mxf:mxf:video::name", "Job Function Name", "string");
            AddInfo("mxf:mxf:video::name", "Role Name", "string");
            AddInfo("mxf:mxf:video::name", "Contact Kind", "string");
            AddInfo("mxf:mxf:video::name", "Contact Department Name", "string");
            AddInfo("mxf:mxf:video::name", "Family Name", "string");
            AddInfo("mxf:mxf:video::name", "First Given Name", "string");
            AddInfo("mxf:mxf:video::name", "Second Given Name", "string");
            AddInfo("mxf:mxf:video::name", "Third Given Name", "string");
            AddInfo("mxf:mxf:video::name", "Main Name", "string");
            AddInfo("mxf:mxf:video::name", "Supplementary Name", "string");
            AddInfo("mxf:mxf:video::name", "Organization Main Name", "string");
            AddInfo("mxf:mxf:video::name", "Supplementary Organization Name", "string");
            AddInfo("mxf:mxf:video::name", "ISO3166 Country Code", "string");
            AddInfo("mxf:mxf:video::name", "ISO639-1 Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Operating System Interpretations", "int8u");
            AddInfo("mxf:mxf:video::name", "Byte Order", "string");
            AddInfo("mxf:mxf:video::name", "Essence Is Identified", "?");
            AddInfo("mxf:mxf:video::name", "Length System Name", "string");
            AddInfo("mxf:mxf:video::name", "Length Unit Kind", "string");
            AddInfo("mxf:mxf:video::name", "Angular Unit Kind", "string");
            AddInfo("mxf:mxf:video::name", "Time System Offset", "string");
            AddInfo("mxf:mxf:video::name", "Time Unit Kind", "string");
            AddInfo("mxf:mxf:video::name", "Content Coding System", "string");
            AddInfo("mxf:mxf:video::name", "Program Kind", "string");
            AddInfo("mxf:mxf:video::name", "Genre", "string");
            AddInfo("mxf:mxf:video::name", "Target Audience", "string");
            AddInfo("mxf:mxf:video::name", "Catalog Data Status", "string");
            AddInfo("mxf:mxf:video::name", "Thesaurus Name", "string");
            AddInfo("mxf:mxf:video::name", "Theme", "string");
            AddInfo("mxf:mxf:video::name", "Content Classification", "string");
            AddInfo("mxf:mxf:video::name", "Keywords", "string");
            AddInfo("mxf:mxf:video::name", "Key Frames", "string");
            AddInfo("mxf:mxf:video::name", "Key Sounds", "string");
            AddInfo("mxf:mxf:video::name", "Key Data", "string");
            AddInfo("mxf:mxf:video::name", "Abstract", "string");
            AddInfo("mxf:mxf:video::name", "Purpose", "string");
            AddInfo("mxf:mxf:video::name", "Description", "string");
            AddInfo("mxf:mxf:video::name", "Color Descriptor", "string");
            AddInfo("mxf:mxf:video::name", "Format Descriptor", "string");
            AddInfo("mxf:mxf:video::name", "Stratum Kind", "string");
            AddInfo("mxf:mxf:video::name", "Individual Award Name", "string");
            AddInfo("mxf:mxf:video::name", "Program Award Name", "string");
            AddInfo("mxf:mxf:video::name", "Asset Value", "string");
            AddInfo("mxf:mxf:video::name", "Content Value", "string");
            AddInfo("mxf:mxf:video::name", "Cultural Value", "string");
            AddInfo("mxf:mxf:video::name", "Aesthetic Value", "string");
            AddInfo("mxf:mxf:video::name", "Historical Value", "string");
            AddInfo("mxf:mxf:video::name", "Technical Value", "string");
            AddInfo("mxf:mxf:video::name", "Other Values", "string");
            AddInfo("mxf:mxf:video::name", "Catalog Data Status", "string");
            AddInfo("mxf:mxf:video::name", "Cataloging System Name", "string");
            AddInfo("mxf:mxf:video::name", "Computed Keywords", "string");
            AddInfo("mxf:mxf:video::name", "Computed Key Frames", "string");
            AddInfo("mxf:mxf:video::name", "Computed Key Sounds", "string");
            AddInfo("mxf:mxf:video::name", "Computed Key Data", "string");
            AddInfo("mxf:mxf:video::name", "Computed Stratum Kind", "string");
            AddInfo("mxf:mxf:video::name", "Presentation Aspect Ratio", "rational64s");
            AddInfo("mxf:mxf:video::name", "Capture Aspect Ratio", "string");
            AddInfo("mxf:mxf:video::name", "Capture Gamma Equation", "string");
            AddInfo("mxf:mxf:video::name", "Capture Gamma Equation", "rational64s");
            AddInfo("mxf:mxf:video::name", "Luma Equation", "string");
            AddInfo("mxf:mxf:video::name", "Colorimetry Code", "string");
            AddInfo("mxf:mxf:video::name", "Signal Form Code", "string");
            AddInfo("mxf:mxf:video::name", "Color Field Code", "int8u");
            AddInfo("mxf:mxf:video::name", "Field Rate", "int16u");
            AddInfo("mxf:mxf:video::name", "Frame Rate", "int16u");
            AddInfo("mxf:mxf:video::name", "Frame Layout", "int8u");
            AddInfo("mxf:mxf:video::name", "Sampling Structure Code", "string");
            AddInfo("mxf:mxf:video::name", "Total Linesper Frame", "int16u");
            AddInfo("mxf:mxf:video::name", "Active Linesper Frame", "int16u");
            AddInfo("mxf:mxf:video::name", "Leading Lines", "int32s");
            AddInfo("mxf:mxf:video::name", "Trailing Lines", "int32s");
            AddInfo("mxf:mxf:video::name", "Analog Video System Name", "string");
            AddInfo("mxf:mxf:video::name", "Luminance Sample Rate", "int8u");
            AddInfo("mxf:mxf:video::name", "Active Samplesper Line", "int16u");
            AddInfo("mxf:mxf:video::name", "Total Samplesper Line", "int16u");
            AddInfo("mxf:mxf:video::name", "Sampling Hierarchy Code", "string");
            AddInfo("mxf:mxf:video::name", "Horizontal Subsampling", "int32u");
            AddInfo("mxf:mxf:video::name", "Color Siting", "int8u");
            AddInfo("mxf:mxf:video::name", "Sampled Height", "int32u");
            AddInfo("mxf:mxf:video::name", "Sampled Width", "int32u");
            AddInfo("mxf:mxf:video::name", "Sampled X Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Sampled Y Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Display Height", "int32u");
            AddInfo("mxf:mxf:video::name", "Display Width", "int32u");
            AddInfo("mxf:mxf:video::name", "Display X Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Display Y Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Filtering Code", "string");
            AddInfo("mxf:mxf:video::name", "Image Height", "int32u");
            AddInfo("mxf:mxf:video::name", "Image Width", "int32u");
            AddInfo("mxf:mxf:video::name", "Bits Per Pixel", "int8u");
            AddInfo("mxf:mxf:video::name", "Rounding Method Code", "string");
            AddInfo("mxf:mxf:video::name", "Black Reference Level", "int32u");
            AddInfo("mxf:mxf:video::name", "White Reference Level", "int32u");
            AddInfo("mxf:mxf:video::name", "Field Frame Type Code", "string");
            AddInfo("mxf:mxf:video::name", "Pulldown Sequence", "?");
            AddInfo("mxf:mxf:video::name", "Pulldown Field Dominance", "?");
            AddInfo("mxf:mxf:video::name", "Video And Film Frame Relationship", "int8u");
            AddInfo("mxf:mxf:video::name", "Capture Film Frame Rate", "string");
            AddInfo("mxf:mxf:video::name", "Transfer Film Frame Rate", "string");
            AddInfo("mxf:mxf:video::name", "Video Test Parameter", "string");
            AddInfo("mxf:mxf:video::name", "Video Test Result", "float");
            AddInfo("mxf:mxf:video::name", "Video Test Result", "int32u");
            AddInfo("mxf:mxf:video::name", "Film Test Parameter", "string");
            AddInfo("mxf:mxf:video::name", "Film Test Result", "float");
            AddInfo("mxf:mxf:video::name", "Film Test Result", "?");
            AddInfo("mxf:mxf:video::name", "Electrospatial Formulation", "int8u");
            AddInfo("mxf:mxf:video::name", "Filtering Applied", "string");
            AddInfo("mxf:mxf:video::name", "Audio Reference Level", "int8s");
            AddInfo("mxf:mxf:video::name", "Audio Mono Channel Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Audio Stereo Channel Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Analog System", "string");
            AddInfo("mxf:mxf:video::name", "Audio Sample Rate", "int8u");
            AddInfo("mxf:mxf:video::name", "Bits Per Sample", "int8u");
            AddInfo("mxf:mxf:video::name", "Rounding Law", "string");
            AddInfo("mxf:mxf:video::name", "Dither", "string");
            AddInfo("mxf:mxf:video::name", "Optical Track", "string");
            AddInfo("mxf:mxf:video::name", "Magnetic Track", "string");
            AddInfo("mxf:mxf:video::name", "Signal-to-Noise Ratio", "float");
            AddInfo("mxf:mxf:video::name", "Weighting", "string");
            AddInfo("mxf:mxf:video::name", "Analog Data Coding Kind", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Kind", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Timebase", "int8u");
            AddInfo("mxf:mxf:video::name", "Timecode User Bits Flag", "?");
            AddInfo("mxf:mxf:video::name", "Include Sync", "?");
            AddInfo("mxf:mxf:video::name", "Drop Frame", "?");
            AddInfo("mxf:mxf:video::name", "Timecode Source Kind", "int8u");
            AddInfo("mxf:mxf:video::name", "Analog Metadata Carrier", "string");
            AddInfo("mxf:mxf:video::name", "Digital Metadata Carrier", "string");
            AddInfo("mxf:mxf:video::name", "Analog Monitoring And Control Coding Kind", "string");
            AddInfo("mxf:mxf:video::name", "Sample Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Essence Length", "?");
            AddInfo("mxf:mxf:video::name", "Film Color Process", "string");
            AddInfo("mxf:mxf:video::name", "Edge Code Format", "?");
            AddInfo("mxf:mxf:video::name", "Film Format Name", "string");
            AddInfo("mxf:mxf:video::name", "Film Stock Kind", "string");
            AddInfo("mxf:mxf:video::name", "Film Stock Manufacturer Name", "string");
            AddInfo("mxf:mxf:video::name", "Physical Media Length", "?");
            AddInfo("mxf:mxf:video::name", "Film Capture Aperture", "string");
            AddInfo("mxf:mxf:video::name", "Image Category", "string");
            AddInfo("mxf:mxf:video::name", "Image Source Device Kind", "string");
            AddInfo("mxf:mxf:video::name", "Optical Test Parameter Name", "string");
            AddInfo("mxf:mxf:video::name", "Optical Test Result", "float");
            AddInfo("mxf:mxf:video::name", "Optical Test Result", "int32s");
            AddInfo("mxf:mxf:video::name", "Sensor Type", "string");
            AddInfo("mxf:mxf:video::name", "Polar Characteristic", "string");
            AddInfo("mxf:mxf:video::name", "Integration Indication", "string");
            AddInfo("mxf:mxf:video::name", "Event Indication", "string");
            AddInfo("mxf:mxf:video::name", "Quality Flag", "?");
            AddInfo("mxf:mxf:video::name", "Physical Instance Kind", "string");
            AddInfo("mxf:mxf:video::name", "Digital Or Analog Origination", "string");
            AddInfo("mxf:mxf:video::name", "Microphone Placement Techniques", "string");
            AddInfo("mxf:mxf:video::name", "Simple Flagging Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Copy Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Clone Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Work-in-Progress Flag", "?");
            AddInfo("mxf:mxf:video::name", "Video Or Image Compression Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "Splicing Metadata", "?");
            AddInfo("mxf:mxf:video::name", "Audio Compression Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "Video Noise Reduction Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "Audio Noise Reduction Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "Enhancement Or Modification Description", "string");
            AddInfo("mxf:mxf:video::name", "Video Device Kind", "string");
            AddInfo("mxf:mxf:video::name", "Video Device Parameter Name", "string");
            AddInfo("mxf:mxf:video::name", "Video Device Parameter Setting", "string");
            AddInfo("mxf:mxf:video::name", "Audio Enhancement Or Modification Description", "string");
            AddInfo("mxf:mxf:video::name", "Audio First Mix-Down Process", "string");
            AddInfo("mxf:mxf:video::name", "Audio Device Kind", "string");
            AddInfo("mxf:mxf:video::name", "Audio Device Parameter", "string");
            AddInfo("mxf:mxf:video::name", "Audio Device Parameter Setting", "string");
            AddInfo("mxf:mxf:video::name", "Data Enhancement Or Modification Description", "string");
            AddInfo("mxf:mxf:video::name", "Data Device Kind", "string");
            AddInfo("mxf:mxf:video::name", "Data Device Parameter Name", "string");
            AddInfo("mxf:mxf:video::name", "Data Device Parameter Setting", "string");
            AddInfo("mxf:mxf:video::name", "Default Fade Type", "?");
            AddInfo("mxf:mxf:video::name", "Active State", "?");
            AddInfo("mxf:mxf:video::name", "Fade-In Type", "?");
            AddInfo("mxf:mxf:video::name", "Fade-Out Type", "?");
            AddInfo("mxf:mxf:video::name", "Speed Change Effect Flag", "?");
            AddInfo("mxf:mxf:video::name", "Input Segment Count", "int32s");
            AddInfo("mxf:mxf:video::name", "Bypass", "int32u");
            AddInfo("mxf:mxf:video::name", "Video Compression Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "MPEG Video Recoding Dataset", "?");
            AddInfo("mxf:mxf:video::name", "Upstream Audio Compression Algorithm", "string");
            AddInfo("mxf:mxf:video::name", "MPEG Audio Recoding Dataset", "?");
            AddInfo("mxf:mxf:video::name", "Program Support Material Reference", "string");
            AddInfo("mxf:mxf:video::name", "Advertising Material Reference", "string");
            AddInfo("mxf:mxf:video::name", "Program Commercial Material Reference", "string");
            AddInfo("mxf:mxf:video::name", "Contiguous Data Flag", "?");
            AddInfo("mxf:mxf:video::name", "Position In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Relative Position In Sequence Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Relative Position In Sequence Name", "string");
            AddInfo("mxf:mxf:video::name", "Image Coordinate System", "string");
            AddInfo("mxf:mxf:video::name", "Map Datum Used", "string");
            AddInfo("mxf:mxf:video::name", "Local Datum Absolute Position Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Device Absolute Positional Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Device Altitude", "float");
            AddInfo("mxf:mxf:video::name", "Device Altitude", "?");
            AddInfo("mxf:mxf:video::name", "Device Latitude", "float");
            AddInfo("mxf:mxf:video::name", "Device Latitude", "?");
            AddInfo("mxf:mxf:video::name", "Device Longitude", "float");
            AddInfo("mxf:mxf:video::name", "Device Longitude", "?");
            AddInfo("mxf:mxf:video::name", "Device X Dimension", "float");
            AddInfo("mxf:mxf:video::name", "Device Y Dimension", "float");
            AddInfo("mxf:mxf:video::name", "Frame Positional Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Frame Center Latitude", "double");
            AddInfo("mxf:mxf:video::name", "Frame Center Latitude", "string");
            AddInfo("mxf:mxf:video::name", "Frame Center Longitude", "double");
            AddInfo("mxf:mxf:video::name", "Frame Center Longitude", "string");
            AddInfo("mxf:mxf:video::name", "Frame Center Latitude Longitude", "string");
            AddInfo("mxf:mxf:video::name", "Local Datum Relative Position Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Positional Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Position X", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Position Y", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Position Z", "float");
            AddInfo("mxf:mxf:video::name", "Subject Relative Positional Accuracy", "float");
            AddInfo("mxf:mxf:video::name", "Position Within Viewport Image X Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Position Within Viewport Image Y Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Source Image Center X Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Source Image Center Y Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Viewport Image Center C Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Viewport Image Center Y Coordinate", "int16s");
            AddInfo("mxf:mxf:video::name", "Device Absolute Speed", "float");
            AddInfo("mxf:mxf:video::name", "Device Absolute Heading", "float");
            AddInfo("mxf:mxf:video::name", "Subject Absolute Speed", "float");
            AddInfo("mxf:mxf:video::name", "Subject Absolute Heading", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Speed", "float");
            AddInfo("mxf:mxf:video::name", "Device Relative Heading", "float");
            AddInfo("mxf:mxf:video::name", "Subject Relative Speed", "float");
            AddInfo("mxf:mxf:video::name", "Subject Relative Heading", "float");
            AddInfo("mxf:mxf:video::name", "Slant Range", "float");
            AddInfo("mxf:mxf:video::name", "Target Width", "float");
            AddInfo("mxf:mxf:video::name", "Viewport Height", "int16u");
            AddInfo("mxf:mxf:video::name", "Viewport Width", "int16u");
            AddInfo("mxf:mxf:video::name", "Sensor Roll Angle", "float");
            AddInfo("mxf:mxf:video::name", "Angle To North", "float");
            AddInfo("mxf:mxf:video::name", "Obliquity Angle", "float");
            AddInfo("mxf:mxf:video::name", "Place Keyword", "string");
            AddInfo("mxf:mxf:video::name", "Object Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Shooting Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Setting Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Copyright License Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Intellectual Property License Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Object Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Shooting Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Setting Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Copyright License Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Intellectual Property License Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Room Number", "string");
            AddInfo("mxf:mxf:video::name", "Street Number", "string");
            AddInfo("mxf:mxf:video::name", "Street Name", "string");
            AddInfo("mxf:mxf:video::name", "Postal Town", "string");
            AddInfo("mxf:mxf:video::name", "City Name", "string");
            AddInfo("mxf:mxf:video::name", "State Or Province Or County Name", "string");
            AddInfo("mxf:mxf:video::name", "Postal Code", "string");
            AddInfo("mxf:mxf:video::name", "Country Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting Room Number", "string");
            AddInfo("mxf:mxf:video::name", "Setting Street Number Or Building Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting Street Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting Town Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting City Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting State Or Province Or County Name", "string");
            AddInfo("mxf:mxf:video::name", "Setting Postal Code", "string");
            AddInfo("mxf:mxf:video::name", "Setting Country Name", "string");
            AddInfo("mxf:mxf:video::name", "Telephone Number", "string");
            AddInfo("mxf:mxf:video::name", "Fax Number", "string");
            AddInfo("mxf:mxf:video::name", "E-mail Address", "string");
            AddInfo("mxf:mxf:video::name", "Setting Description", "string");
            AddInfo("mxf:mxf:video::name", "UTC User Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Local User Date Time", "string");
            AddInfo("mxf:mxf:video::name", "SMPTE309M User Date Time", "?");
            AddInfo("mxf:mxf:video::name", "SMPTE12M User Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Start Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Local Start Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC End Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Local End Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Timecode End Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Last Modify Date", "string");
            AddInfo("mxf:mxf:video::name", "Local Last Modify Date", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Last Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "UTC Event Start Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Local Event Start Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Event Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Event End Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Local Event End Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Event End Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Start Time Relative To Reference", "string");
            AddInfo("mxf:mxf:video::name", "Start Timecode Relative To Reference", "?");
            AddInfo("mxf:mxf:video::name", "Material End Time Offset", "string");
            AddInfo("mxf:mxf:video::name", "Material End Timecode Offset", "?");
            AddInfo("mxf:mxf:video::name", "Event Start Time Offset", "string");
            AddInfo("mxf:mxf:video::name", "Event Start Timecode Offset", "?");
            AddInfo("mxf:mxf:video::name", "Event End Time Offset", "string");
            AddInfo("mxf:mxf:video::name", "Event End Timecode Offset", "?");
            AddInfo("mxf:mxf:video::name", "Frame Count Offset", "int32u");
            AddInfo("mxf:mxf:video::name", "Time Period Name", "string");
            AddInfo("mxf:mxf:video::name", "Local Creation Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Creation Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Local Modify Date", "string");
            AddInfo("mxf:mxf:video::name", "Timecode Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "Frame Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Material Absolute Duration", "string");
            AddInfo("mxf:mxf:video::name", "Material Absolute Duration", "?");
            AddInfo("mxf:mxf:video::name", "Textless Black Duration", "int32u");
            AddInfo("mxf:mxf:video::name", "Event Absolute Duration Frame Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Event Absolute Duration", "string");
            AddInfo("mxf:mxf:video::name", "Event Absolute Duration", "?");
            AddInfo("mxf:mxf:video::name", "Buffer Delay", "?");
            AddInfo("mxf:mxf:video::name", "Program Identifier", "?");
            AddInfo("mxf:mxf:video::name", "Program Identifier String", "?");
            AddInfo("mxf:mxf:video::name", "Shim Name", "?");
            AddInfo("mxf:mxf:video::name", "Signal Standard", "?");
            AddInfo("mxf:mxf:video::name", "Intended AFD", "?");
            AddInfo("mxf:mxf:video::name", "Slate Title", "?");
            AddInfo("mxf:mxf:video::name", "NOLA Code", "?");
            AddInfo("mxf:mxf:video::name", "Rating", "?");
            AddInfo("mxf:mxf:video::name", "Nielsen Stream Identifier", "?");
            AddInfo("mxf:mxf:video::name", "Is Recording", "?");
            AddInfo("mxf:mxf:video::name", "Is Live Production", "?");
            AddInfo("mxf:mxf:video::name", "Is Live Transmission", "?");
            AddInfo("mxf:mxf:video::name", "Is Dubbed", "?");
            AddInfo("mxf:mxf:video::name", "Is Voiceover", "?");
            AddInfo("mxf:mxf:video::name", "Has Audio Watermark", "?");
            AddInfo("mxf:mxf:video::name", "Audio Watermark Kind", "?");
            AddInfo("mxf:mxf:video::name", "Has Video Watermark", "?");
            AddInfo("mxf:mxf:video::name", "Video Watermark Kind", "?");
            AddInfo("mxf:mxf:video::name", "Subtitles Present", "?");
            AddInfo("mxf:mxf:video::name", "Caption Titles", "?");
            AddInfo("mxf:mxf:video::name", "Captions Via Teletext", "?");
            AddInfo("mxf:mxf:video::name", "Textless Material", "?");
            AddInfo("mxf:mxf:video::name", "Audio Reference Level", "string");
            AddInfo("mxf:mxf:video::name", "Storage Device Kind", "?");
            AddInfo("mxf:mxf:video::name", "Storage Media Kind", "?");
            AddInfo("mxf:mxf:video::name", "Storage Media ID", "?");
            AddInfo("mxf:mxf:video::name", "Broadcast Date", "?");
            AddInfo("mxf:mxf:video::name", "Broadcast Time", "?");
            AddInfo("mxf:mxf:video::name", "Is Repeat", "?");
            AddInfo("mxf:mxf:video::name", "First Transmission Info", "?");
            AddInfo("mxf:mxf:video::name", "Teletext Subtitles Available", "?");
            AddInfo("mxf:mxf:video::name", "Season Episode Number", "string");
            AddInfo("mxf:mxf:video::name", "Season Episode Title", "string");
            AddInfo("mxf:mxf:video::name", "EPG Program Synopsis", "?");
            AddInfo("mxf:mxf:video::name", "Content Classification", "?");
            AddInfo("mxf:mxf:video::name", "DVB Parental Rating", "?");
            AddInfo("mxf:mxf:video::name", "Content Maturity Rating", "?");
            AddInfo("mxf:mxf:video::name", "Content Maturity Description", "?");
            AddInfo("mxf:mxf:video::name", "Content Maturity Graphic", "?");
            AddInfo("mxf:mxf:video::name", "Contract Entity", "?");
            AddInfo("mxf:mxf:video::name", "Contract Type Link", "?");
            AddInfo("mxf:mxf:video::name", "Consumer Rights To Copy", "?");
            AddInfo("mxf:mxf:video::name", "Broadcaster Rights To Copy", "?");
            AddInfo("mxf:mxf:video::name", "Director Name", "?");
            AddInfo("mxf:mxf:video::name", "Producer Name", "?");
            AddInfo("mxf:mxf:video::name", "Female Lead Actress Name", "?");
            AddInfo("mxf:mxf:video::name", "Male Lead Actor Name", "?");
            AddInfo("mxf:mxf:video::name", "Presenter Name", "?");
            AddInfo("mxf:mxf:video::name", "Main Sponsor Name", "?");
            AddInfo("mxf:mxf:video::name", "Voice Talent Name", "?");
            AddInfo("mxf:mxf:video::name", "Postbox Number", "?");
            AddInfo("mxf:mxf:video::name", "Post Code For Postbox", "?");
            AddInfo("mxf:mxf:video::name", "Program Number", "string");
            AddInfo("mxf:mxf:video::name", "Definition Object ID", "?");
            AddInfo("mxf:mxf:video::name", "IEEE Device ID", "int8u");
            AddInfo("mxf:mxf:video::name", "Project Number", "string");
            AddInfo("mxf:mxf:video::name", "Edge Code Header", "?");
            AddInfo("mxf:mxf:video::name", "Channel Handle", "int16s");
            AddInfo("mxf:mxf:video::name", "Physical Media Location", "string");
            AddInfo("mxf:mxf:video::name", "Media Location", "?");
            AddInfo("mxf:mxf:video::name", "Track Number", "int32u");
            AddInfo("mxf:mxf:video::name", "Edge Code Start", "?");
            AddInfo("mxf:mxf:video::name", "Version Title", "string");
            AddInfo("mxf:mxf:video::name", "Track ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Track Name", "string");
            AddInfo("mxf:mxf:video::name", "Track Name", "?");
            AddInfo("mxf:mxf:video::name", "Definition Object Name", "string");
            AddInfo("mxf:mxf:video::name", "Definition Object Name", "?");
            AddInfo("mxf:mxf:video::name", "Content Package Metadata Link", "int8u");
            AddInfo("mxf:mxf:video::name", "Defined Name", "string");
            AddInfo("mxf:mxf:video::name", "Defined Name", "?");
            AddInfo("mxf:mxf:video::name", "Device Manufacturer Name", "string");
            AddInfo("mxf:mxf:video::name", "Device Manufacturer Name", "?");
            AddInfo("mxf:mxf:video::name", "Manufacturer ID", "?");
            AddInfo("mxf:mxf:video::name", "IEEE Manufacturer ID", "?");
            AddInfo("mxf:mxf:video::name", "AAF Manufacturer ID", "?");
            AddInfo("mxf:mxf:video::name", "Supplying Department Name", "string");
            AddInfo("mxf:mxf:video::name", "Audience Share", "float");
            AddInfo("mxf:mxf:video::name", "Audience Appreciation", "float");
            AddInfo("mxf:mxf:video::name", "Salutation", "string");
            AddInfo("mxf:mxf:video::name", "Honors And Qualifications", "string");
            AddInfo("mxf:mxf:video::name", "Object Model Version", "int32u");
            AddInfo("mxf:mxf:video::name", "SDK Version", "?");
            AddInfo("mxf:mxf:video::name", "Is Optional", "?");
            AddInfo("mxf:mxf:video::name", "Is Searchable", "?");
            AddInfo("mxf:mxf:video::name", "Use Default Value", "?");
            AddInfo("mxf:mxf:video::name", "Default Data Value", "?");
            AddInfo("mxf:mxf:video::name", "Size", "int8u");
            AddInfo("mxf:mxf:video::name", "Is Signed", "?");
            AddInfo("mxf:mxf:video::name", "Element Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Element Name List", "?");
            AddInfo("mxf:mxf:video::name", "Type Definition Element Value List", "int64s");
            AddInfo("mxf:mxf:video::name", "Member Name List", "?");
            AddInfo("mxf:mxf:video::name", "Extendible Element Name List", "?");
            AddInfo("mxf:mxf:video::name", "Type Definition Extendible Element Values", "?");
            AddInfo("mxf:mxf:video::name", "Target Set", "?");
            AddInfo("mxf:mxf:video::name", "Filler Data", "undef");
            AddInfo("mxf:mxf:video::name", "KLV Data Value", "?");
            AddInfo("mxf:mxf:video::name", "Package KLV Data", "?");
            AddInfo("mxf:mxf:video::name", "Component KLV Data", "?");
            AddInfo("mxf:mxf:video::name", "Assigned Category Name", "string");
            AddInfo("mxf:mxf:video::name", "Assigned Category Name", "?");
            AddInfo("mxf:mxf:video::name", "Assigned Category Value", "string");
            AddInfo("mxf:mxf:video::name", "Assigned Category Value", "?");
            AddInfo("mxf:mxf:video::name", "Shot List", "string");
            AddInfo("mxf:mxf:video::name", "Package User Comments", "?");
            AddInfo("mxf:mxf:video::name", "Cue-In Words", "string");
            AddInfo("mxf:mxf:video::name", "Cue-Out Words", "string");
            AddInfo("mxf:mxf:video::name", "Object Kind", "string");
            AddInfo("mxf:mxf:video::name", "Object Kind", "?");
            AddInfo("mxf:mxf:video::name", "Object Description", "string");
            AddInfo("mxf:mxf:video::name", "Object Description", "?");
            AddInfo("mxf:mxf:video::name", "Object Name", "string");
            AddInfo("mxf:mxf:video::name", "Metadata Item Name", "?");
            AddInfo("mxf:mxf:video::name", "Shot Comment Kind", "string");
            AddInfo("mxf:mxf:video::name", "Shot Comment", "string");
            AddInfo("mxf:mxf:video::name", "Computed Object Kind", "string");
            AddInfo("mxf:mxf:video::name", "Computed Object Kind", "?");
            AddInfo("mxf:mxf:video::name", "Version Number String", "string");
            AddInfo("mxf:mxf:video::name", "Version Number String", "?");
            AddInfo("mxf:mxf:video::name", "Version Number", "?");
            AddInfo("mxf:mxf:video::name", "WAVE Summary", "?");
            AddInfo("mxf:mxf:video::name", "AIFC Summary", "?");
            AddInfo("mxf:mxf:video::name", "TIFF Summary", "?");
            AddInfo("mxf:mxf:video::name", "Viewport Aspect Ratio", "rational64s");
            AddInfo("mxf:mxf:video::name", "Capture Gamma Equation", "?");
            AddInfo("mxf:mxf:video::name", "Colorimetry Code", "?");
            AddInfo("mxf:mxf:video::name", "Presentation Gamma Equation", "string");
            AddInfo("mxf:mxf:video::name", "Presentation Gamma Equation", "?");
            AddInfo("mxf:mxf:video::name", "Field Dominance", "int8u");
            AddInfo("mxf:mxf:video::name", "Video Line Map", "int32s");
            AddInfo("mxf:mxf:video::name", "Analog Video System Name", "?");
            AddInfo("mxf:mxf:video::name", "Vertical Sub-sampling", "int32u");
            AddInfo("mxf:mxf:video::name", "Bits Per Pixel", "int32u");
            AddInfo("mxf:mxf:video::name", "Color Range Levels", "int32u");
            AddInfo("mxf:mxf:video::name", "Pixel Layout", "?");
            AddInfo("mxf:mxf:video::name", "Alpha Sample Depth", "int32u");
            AddInfo("mxf:mxf:video::name", "Palette", "?");
            AddInfo("mxf:mxf:video::name", "Palette Layout", "?");
            AddInfo("mxf:mxf:video::name", "Component Depth", "int32u");
            AddInfo("mxf:mxf:video::name", "Video Coding Scheme ID", "?");
            AddInfo("mxf:mxf:video::name", "Rounded Capture Film Frame Rate", "int32u");
            AddInfo("mxf:mxf:video::name", "Audio Average Bitrate", "float");
            AddInfo("mxf:mxf:video::name", "Audio Fixed Bitrate Flag", "?");
            AddInfo("mxf:mxf:video::name", "Coding Law Kind", "string");
            AddInfo("mxf:mxf:video::name", "Audio Coding Scheme ID", "?");
            AddInfo("mxf:mxf:video::name", "Layer Number", "int8u");
            AddInfo("mxf:mxf:video::name", "Timecode Timebase", "rational64s");
            AddInfo("mxf:mxf:video::name", "Rounded Timecode Timebase", "int16u");
            AddInfo("mxf:mxf:video::name", "Component Data Definition", "?");
            AddInfo("mxf:mxf:video::name", "Stream Data", "?");
            AddInfo("mxf:mxf:video::name", "Timecode Stream Data", "?");
            AddInfo("mxf:mxf:video::name", "Recorded Format", "?");
            AddInfo("mxf:mxf:video::name", "Tape Shell Kind", "string");
            AddInfo("mxf:mxf:video::name", "Tape Shell Kind", "?");
            AddInfo("mxf:mxf:video::name", "Tape Formulation", "string");
            AddInfo("mxf:mxf:video::name", "Tape Formulation", "?");
            AddInfo("mxf:mxf:video::name", "Tape Capacity", "int32u");
            AddInfo("mxf:mxf:video::name", "Tape Manufacturer", "string");
            AddInfo("mxf:mxf:video::name", "Tape Manufacturer", "?");
            AddInfo("mxf:mxf:video::name", "Tape Stock", "string");
            AddInfo("mxf:mxf:video::name", "Tape Stock", "?");
            AddInfo("mxf:mxf:video::name", "Tape Batch Number", "string");
            AddInfo("mxf:mxf:video::name", "Tape Batch Number", "?");
            AddInfo("mxf:mxf:video::name", "Perforations Per Frame", "int8u");
            AddInfo("mxf:mxf:video::name", "Perforations Per Frame", "rational64s");
            AddInfo("mxf:mxf:video::name", "Film Format Name", "?");
            AddInfo("mxf:mxf:video::name", "Film Format Name", "?");
            AddInfo("mxf:mxf:video::name", "Film Stock Kind", "?");
            AddInfo("mxf:mxf:video::name", "Film Stock Manufacturer Name", "?");
            AddInfo("mxf:mxf:video::name", "Film Batch Number", "string");
            AddInfo("mxf:mxf:video::name", "Film Batch Number", "?");
            AddInfo("mxf:mxf:video::name", "Film Gauge", "?");
            AddInfo("mxf:mxf:video::name", "Edge Code Film Gauge", "?");
            AddInfo("mxf:mxf:video::name", "Exposed Aspect Ratio", "rational64s");
            AddInfo("mxf:mxf:video::name", "Image Alignment Offset", "int32u");
            AddInfo("mxf:mxf:video::name", "Image Start Offset", "int32u");
            AddInfo("mxf:mxf:video::name", "Image End Offset", "int32u");
            AddInfo("mxf:mxf:video::name", "Padding Bits", "int16s");
            AddInfo("mxf:mxf:video::name", "Focal Length", "float");
            AddInfo("mxf:mxf:video::name", "Sensor Size", "string");
            AddInfo("mxf:mxf:video::name", "F Number", "float");
            AddInfo("mxf:mxf:video::name", "Sensor Type Code", "string");
            AddInfo("mxf:mxf:video::name", "Field Of View Horizontal", "float");
            AddInfo("mxf:mxf:video::name", "Anamorphic Lens Characteristic", "string");
            AddInfo("mxf:mxf:video::name", "Uniform Data Flag", "?");
            AddInfo("mxf:mxf:video::name", "JPEG Table ID", "?");
            AddInfo("mxf:mxf:video::name", "Alpha Transparency", "int8u");
            AddInfo("mxf:mxf:video::name", "Generation ID", "?");
            AddInfo("mxf:mxf:video::name", "Application Supplier Name", "string");
            AddInfo("mxf:mxf:video::name", "Application Supplier Name", "?");
            AddInfo("mxf:mxf:video::name", "Application Name", "string");
            AddInfo("mxf:mxf:video::name", "Application Name", "?");
            AddInfo("mxf:mxf:video::name", "Application Version Number", "?");
            AddInfo("mxf:mxf:video::name", "Application Version String", "string");
            AddInfo("mxf:mxf:video::name", "Application Version String", "?");
            AddInfo("mxf:mxf:video::name", "Application Platform", "string");
            AddInfo("mxf:mxf:video::name", "Application Platform", "?");
            AddInfo("mxf:mxf:video::name", "Application Product ID", "?");
            AddInfo("mxf:mxf:video::name", "Linked Generation ID", "?");
            AddInfo("mxf:mxf:video::name", "Container Version", "?");
            AddInfo("mxf:mxf:video::name", "Toolkit Version", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In Category ID", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In Platform ID", "?");
            AddInfo("mxf:mxf:video::name", "Minimum Supported Platform Version", "?");
            AddInfo("mxf:mxf:video::name", "Maximum Supported Platform Version", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In Engine ID", "?");
            AddInfo("mxf:mxf:video::name", "Minimum Supported Engine Version", "?");
            AddInfo("mxf:mxf:video::name", "Maximum Supported Engine Version", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In APIID", "?");
            AddInfo("mxf:mxf:video::name", "Minimum API Version", "?");
            AddInfo("mxf:mxf:video::name", "Maximum API Version", "?");
            AddInfo("mxf:mxf:video::name", "Software-Only Support Flag", "?");
            AddInfo("mxf:mxf:video::name", "Hardware Accelerator Flag", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In Locator Set", "?");
            AddInfo("mxf:mxf:video::name", "Authentication Flag", "?");
            AddInfo("mxf:mxf:video::name", "Associated Metadata Definition", "?");
            AddInfo("mxf:mxf:video::name", "Event Track Edit Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Default Fade Edit Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Editing Event Comment", "string");
            AddInfo("mxf:mxf:video::name", "Editing Event Comment", "?");
            AddInfo("mxf:mxf:video::name", "Edit Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Operation Definition ID", "?");
            AddInfo("mxf:mxf:video::name", "Value", "?");
            AddInfo("mxf:mxf:video::name", "Edit Hint", "?");
            AddInfo("mxf:mxf:video::name", "Operation Data Definition", "?");
            AddInfo("mxf:mxf:video::name", "Operation Category", "?");
            AddInfo("mxf:mxf:video::name", "Display Units", "string");
            AddInfo("mxf:mxf:video::name", "Display Units", "?");
            AddInfo("mxf:mxf:video::name", "Bypass Override", "int32u");
            AddInfo("mxf:mxf:video::name", "Timepoint Value", "?");
            AddInfo("mxf:mxf:video::name", "Begin Anchor", "string");
            AddInfo("mxf:mxf:video::name", "Begin Anchor", "?");
            AddInfo("mxf:mxf:video::name", "End Anchor", "string");
            AddInfo("mxf:mxf:video::name", "End Anchor", "?");
            AddInfo("mxf:mxf:video::name", "Film To Video Transfer Direction", "?");
            AddInfo("mxf:mxf:video::name", "Film To Video Transfer Kind", "?");
            AddInfo("mxf:mxf:video::name", "Film To Video Transfer Phase", "?");
            AddInfo("mxf:mxf:video::name", "Teletext Subtitles Flag", "?");
            AddInfo("mxf:mxf:video::name", "Subtitle Datafile Flag", "?");
            AddInfo("mxf:mxf:video::name", "Closed Caption Subtitles Flag", "?");
            AddInfo("mxf:mxf:video::name", "Sample Index", "?");
            AddInfo("mxf:mxf:video::name", "Source Package ID", "?");
            AddInfo("mxf:mxf:video::name", "Source Track ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Relative Scope", "int32u");
            AddInfo("mxf:mxf:video::name", "Relative Track", "int32u");
            AddInfo("mxf:mxf:video::name", "Object Class", "?");
            AddInfo("mxf:mxf:video::name", "Essence Container Format", "?");
            AddInfo("mxf:mxf:video::name", "Codec Definition", "?");
            AddInfo("mxf:mxf:video::name", "Parameter Definition", "?");
            AddInfo("mxf:mxf:video::name", "Interpolation", "?");
            AddInfo("mxf:mxf:video::name", "Parameter Data Type", "?");
            AddInfo("mxf:mxf:video::name", "Codec Essence Descriptor", "?");
            AddInfo("mxf:mxf:video::name", "Content Storage", "?");
            AddInfo("mxf:mxf:video::name", "Dictionary", "?");
            AddInfo("mxf:mxf:video::name", "Essence Description", "?");
            AddInfo("mxf:mxf:video::name", "Sequence", "?");
            AddInfo("mxf:mxf:video::name", "Transition Effect", "?");
            AddInfo("mxf:mxf:video::name", "Effect Rendering", "?");
            AddInfo("mxf:mxf:video::name", "Input Segment", "?");
            AddInfo("mxf:mxf:video::name", "Still Frame", "?");
            AddInfo("mxf:mxf:video::name", "Selected", "?");
            AddInfo("mxf:mxf:video::name", "Annotation", "?");
            AddInfo("mxf:mxf:video::name", "Manufacturer Information Object", "?");
            AddInfo("mxf:mxf:video::name", "Codec Essence Kinds", "?");
            AddInfo("mxf:mxf:video::name", "Operation Parameters", "?");
            AddInfo("mxf:mxf:video::name", "Degraded Effects", "?");
            AddInfo("mxf:mxf:video::name", "Packages", "?");
            AddInfo("mxf:mxf:video::name", "Essence Data", "?");
            AddInfo("mxf:mxf:video::name", "Operation Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Parameter Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Data Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Plug-In Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Codec Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Container Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Interpolation Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Available Representations", "?");
            AddInfo("mxf:mxf:video::name", "Input Segments", "?");
            AddInfo("mxf:mxf:video::name", "Essence Locators", "?");
            AddInfo("mxf:mxf:video::name", "Identification List", "?");
            AddInfo("mxf:mxf:video::name", "Tracks", "?");
            AddInfo("mxf:mxf:video::name", "Control Point List", "?");
            AddInfo("mxf:mxf:video::name", "Package Tracks", "?");
            AddInfo("mxf:mxf:video::name", "Alternates", "?");
            AddInfo("mxf:mxf:video::name", "Components In Sequence", "?");
            AddInfo("mxf:mxf:video::name", "Parameters", "?");
            AddInfo("mxf:mxf:video::name", "Linked Package ID", "?");
            AddInfo("mxf:mxf:video::name", "Parent Class", "?");
            AddInfo("mxf:mxf:video::name", "Properties", "?");
            AddInfo("mxf:mxf:video::name", "Is Concrete", "?");
            AddInfo("mxf:mxf:video::name", "Property Type", "?");
            AddInfo("mxf:mxf:video::name", "Local ID", "int16u");
            AddInfo("mxf:mxf:video::name", "Is Unique Identifier", "?");
            AddInfo("mxf:mxf:video::name", "Class Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Type Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Target Class Of Strong Reference", "?");
            AddInfo("mxf:mxf:video::name", "Target Class Of Weak Reference", "?");
            AddInfo("mxf:mxf:video::name", "Enumeration Underlying Integer Type", "?");
            AddInfo("mxf:mxf:video::name", "Fixed Array Element Type", "?");
            AddInfo("mxf:mxf:video::name", "Variable Array Element Type", "?");
            AddInfo("mxf:mxf:video::name", "Set Element Type", "?");
            AddInfo("mxf:mxf:video::name", "String Element Type", "?");
            AddInfo("mxf:mxf:video::name", "Stream Element Type", "?");
            AddInfo("mxf:mxf:video::name", "Member Types", "?");
            AddInfo("mxf:mxf:video::name", "Renamed Type", "?");
            AddInfo("mxf:mxf:video::name", "Dictionary Identifier", "?");
            AddInfo("mxf:mxf:video::name", "Dictionary Description", "string");
            AddInfo("mxf:mxf:video::name", "Dictionary Description", "?");
            AddInfo("mxf:mxf:video::name", "Block Continuity Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Stream Position Indicator", "int8u");
            AddInfo("mxf:mxf:video::name", "Origin", "int64s");
            AddInfo("mxf:mxf:video::name", "Start Time Relative To Reference", "int64s");
            AddInfo("mxf:mxf:video::name", "Start Timecode", "int64s");
            AddInfo("mxf:mxf:video::name", "Cut Point", "int64s");
            AddInfo("mxf:mxf:video::name", "Event Start", "?");
            AddInfo("mxf:mxf:video::name", "Control Point Time", "rational64s");
            AddInfo("mxf:mxf:video::name", "Create Date", "?");
            AddInfo("mxf:mxf:video::name", "Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "Container Last Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "Package Last Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "Duration", "?");
            AddInfo("mxf:mxf:video::name", "Default Fade Duration", "?");
            AddInfo("mxf:mxf:video::name", "Fade-In Duration", "?");
            AddInfo("mxf:mxf:video::name", "Fade-Out Duration", "?");
            AddInfo("mxf:mxf:video::name", "Tape Format", "?");
            AddInfo("mxf:mxf:video::name", "Organization ID", "?");
            AddInfo("mxf:mxf:video::name", "Global Number", "string");
            AddInfo("mxf:mxf:video::name", "Device ID Kind", "string");
            AddInfo("mxf:mxf:video::name", "Device Kind", "string");
            AddInfo("mxf:mxf:video::name", "Device Kind Code", "string");
            AddInfo("mxf:mxf:video::name", "Platform Designation", "string");
            AddInfo("mxf:mxf:video::name", "Platform Model", "string");
            AddInfo("mxf:mxf:video::name", "Platform Serial Number", "string");
            AddInfo("mxf:mxf:video::name", "Local Target ID", "string");
            AddInfo("mxf:mxf:video::name", "Magnetic Disk Number", "string");
            AddInfo("mxf:mxf:video::name", "Optical Disc Number", "string");
            AddInfo("mxf:mxf:video::name", "Stream ID", "int8u");
            AddInfo("mxf:mxf:video::name", "Transport Stream ID", "int16u");
            AddInfo("mxf:mxf:video::name", "Organizational Program Number", "string");
            AddInfo("mxf:mxf:video::name", "Organizational Program Number", "?");
            AddInfo("mxf:mxf:video::name", "Item Designator ID", "?");
            AddInfo("mxf:mxf:video::name", "Local File Path", "?");
            AddInfo("mxf:mxf:video::name", "Title Kind", "?");
            AddInfo("mxf:mxf:video::name", "Main Title", "?");
            AddInfo("mxf:mxf:video::name", "Secondary Title", "?");
            AddInfo("mxf:mxf:video::name", "Series Number", "?");
            AddInfo("mxf:mxf:video::name", "Episode Number", "?");
            AddInfo("mxf:mxf:video::name", "Scene Number", "?");
            AddInfo("mxf:mxf:video::name", "Version Title", "?");
            AddInfo("mxf:mxf:video::name", "Mission ID", "string");
            AddInfo("mxf:mxf:video::name", "Mission ID", "?");
            AddInfo("mxf:mxf:video::name", "Recording Label Name", "string");
            AddInfo("mxf:mxf:video::name", "Recording Label Name", "?");
            AddInfo("mxf:mxf:video::name", "Collection Name", "string");
            AddInfo("mxf:mxf:video::name", "Collection Name", "?");
            AddInfo("mxf:mxf:video::name", "Origin Code", "string");
            AddInfo("mxf:mxf:video::name", "Main Catalog Number", "string");
            AddInfo("mxf:mxf:video::name", "Catalog Prefix Number", "string");
            AddInfo("mxf:mxf:video::name", "Side Number", "string");
            AddInfo("mxf:mxf:video::name", "Recorded Track Number", "string");
            AddInfo("mxf:mxf:video::name", "Seriesina Series Group Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Programming Group Kind", "string");
            AddInfo("mxf:mxf:video::name", "Purchasing Organization Name", "string");
            AddInfo("mxf:mxf:video::name", "Sales Contract Number", "string");
            AddInfo("mxf:mxf:video::name", "Purchasing Department", "string");
            AddInfo("mxf:mxf:video::name", "Contract Type", "string");
            AddInfo("mxf:mxf:video::name", "Contract Type Code", "string");
            AddInfo("mxf:mxf:video::name", "Contract Clause Description", "string");
            AddInfo("mxf:mxf:video::name", "Contract Line Code", "string");
            AddInfo("mxf:mxf:video::name", "Contract Line Name", "string");
            AddInfo("mxf:mxf:video::name", "Contract Terms Of Business", "string");
            AddInfo("mxf:mxf:video::name", "Contract Installment Percentage", "float");
            AddInfo("mxf:mxf:video::name", "Jurisdiction", "string");
            AddInfo("mxf:mxf:video::name", "Copyright Status", "?");
            AddInfo("mxf:mxf:video::name", "Copyright Owner Name", "?");
            AddInfo("mxf:mxf:video::name", "Intellectual Property Description", "?");
            AddInfo("mxf:mxf:video::name", "Intellectual Property Rights", "?");
            AddInfo("mxf:mxf:video::name", "Rightsholder", "?");
            AddInfo("mxf:mxf:video::name", "Rights Management Authority", "?");
            AddInfo("mxf:mxf:video::name", "Rights Condition Description", "string");
            AddInfo("mxf:mxf:video::name", "Rights Condition Description", "?");
            AddInfo("mxf:mxf:video::name", "Currency Name", "string");
            AddInfo("mxf:mxf:video::name", "Total Payment", "string");
            AddInfo("mxf:mxf:video::name", "Payee Account Name", "string");
            AddInfo("mxf:mxf:video::name", "Payee Account Number", "string");
            AddInfo("mxf:mxf:video::name", "Payee Account Sort Code", "string");
            AddInfo("mxf:mxf:video::name", "Total Income", "string");
            AddInfo("mxf:mxf:video::name", "Payer Account Name", "string");
            AddInfo("mxf:mxf:video::name", "Payer Account Number", "string");
            AddInfo("mxf:mxf:video::name", "Payer Account Sort Code", "string");
            AddInfo("mxf:mxf:video::name", "Security Classification", "string");
            AddInfo("mxf:mxf:video::name", "Security Classification Caveats", "string");
            AddInfo("mxf:mxf:video::name", "Classified By", "string");
            AddInfo("mxf:mxf:video::name", "Classification Reason", "string");
            AddInfo("mxf:mxf:video::name", "Declassification Date", "string");
            AddInfo("mxf:mxf:video::name", "Derived From", "string");
            AddInfo("mxf:mxf:video::name", "Classification Comment", "string");
            AddInfo("mxf:mxf:video::name", "Classification And Marking System", "string");
            AddInfo("mxf:mxf:video::name", "Broadcast Organization Name", "?");
            AddInfo("mxf:mxf:video::name", "Broadcast Service Name", "?");
            AddInfo("mxf:mxf:video::name", "Broadcast Medium Code", "string");
            AddInfo("mxf:mxf:video::name", "Broadcast Region", "?");
            AddInfo("mxf:mxf:video::name", "Nature Of Personality", "?");
            AddInfo("mxf:mxf:video::name", "Contribution Status", "?");
            AddInfo("mxf:mxf:video::name", "Support Or Administration Status", "?");
            AddInfo("mxf:mxf:video::name", "Organization Kind", "?");
            AddInfo("mxf:mxf:video::name", "Production Organization Role", "?");
            AddInfo("mxf:mxf:video::name", "Support Organization Role", "?");
            AddInfo("mxf:mxf:video::name", "Job Function Name", "?");
            AddInfo("mxf:mxf:video::name", "Job Function Code", "string");
            AddInfo("mxf:mxf:video::name", "Role Name", "?");
            AddInfo("mxf:mxf:video::name", "Job Title", "string");
            AddInfo("mxf:mxf:video::name", "Job Title", "?");
            AddInfo("mxf:mxf:video::name", "Contact Kind", "?");
            AddInfo("mxf:mxf:video::name", "Contact Department Name", "?");
            AddInfo("mxf:mxf:video::name", "Family Name", "?");
            AddInfo("mxf:mxf:video::name", "First Given Name", "?");
            AddInfo("mxf:mxf:video::name", "Second Given Name", "?");
            AddInfo("mxf:mxf:video::name", "Third Given Name", "?");
            AddInfo("mxf:mxf:video::name", "Person Description", "string");
            AddInfo("mxf:mxf:video::name", "Person Description", "?");
            AddInfo("mxf:mxf:video::name", "Main Name", "?");
            AddInfo("mxf:mxf:video::name", "Supplementary Name", "?");
            AddInfo("mxf:mxf:video::name", "Organization Main Name", "?");
            AddInfo("mxf:mxf:video::name", "Supplementary Organization Name", "?");
            AddInfo("mxf:mxf:video::name", "Region Code", "string");
            AddInfo("mxf:mxf:video::name", "Country Name", "string");
            AddInfo("mxf:mxf:video::name", "Country Name", "?");
            AddInfo("mxf:mxf:video::name", "Region Name", "string");
            AddInfo("mxf:mxf:video::name", "Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Language Name", "string");
            AddInfo("mxf:mxf:video::name", "Language Name", "?");
            AddInfo("mxf:mxf:video::name", "Terminating Filler Data", "int8u");
            AddInfo("mxf:mxf:video::name", "Timing Bias Correction", "float");
            AddInfo("mxf:mxf:video::name", "Timing Bias Correction Description", "string");
            AddInfo("mxf:mxf:video::name", "Genre", "?");
            AddInfo("mxf:mxf:video::name", "Target Audience", "?");
            AddInfo("mxf:mxf:video::name", "Program Material Classification Code", "string");
            AddInfo("mxf:mxf:video::name", "Theme", "?");
            AddInfo("mxf:mxf:video::name", "Subject Name", "string");
            AddInfo("mxf:mxf:video::name", "Subject Name", "?");
            AddInfo("mxf:mxf:video::name", "Keywords", "?");
            AddInfo("mxf:mxf:video::name", "Key Frame Sample Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Abstract", "?");
            AddInfo("mxf:mxf:video::name", "Purpose", "?");
            AddInfo("mxf:mxf:video::name", "Description", "?");
            AddInfo("mxf:mxf:video::name", "Color Descriptor", "?");
            AddInfo("mxf:mxf:video::name", "Format Descriptor", "?");
            AddInfo("mxf:mxf:video::name", "Intent Descriptor", "string");
            AddInfo("mxf:mxf:video::name", "Intent Descriptor", "?");
            AddInfo("mxf:mxf:video::name", "Textual Description Kind", "string");
            AddInfo("mxf:mxf:video::name", "Textual Description Kind", "?");
            AddInfo("mxf:mxf:video::name", "Festival Name", "string");
            AddInfo("mxf:mxf:video::name", "Object Description Code", "string");
            AddInfo("mxf:mxf:video::name", "Description Kind", "string");
            AddInfo("mxf:mxf:video::name", "Description Kind", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Comment", "string");
            AddInfo("mxf:mxf:video::name", "Descriptive Comment", "?");
            AddInfo("mxf:mxf:video::name", "Context Description", "string");
            AddInfo("mxf:mxf:video::name", "Computed Keywords", "?");
            AddInfo("mxf:mxf:video::name", "Object Identification Confidence", "int16u");
            AddInfo("mxf:mxf:video::name", "Object Horizontal Average Dimension", "int32u");
            AddInfo("mxf:mxf:video::name", "Object Vertical Average Dimension", "int32u");
            AddInfo("mxf:mxf:video::name", "Object Area Dimension", "int32u");
            AddInfo("mxf:mxf:video::name", "Horizontal Action Safe Percentage", "float");
            AddInfo("mxf:mxf:video::name", "Vertical Action Safe Percentage", "float");
            AddInfo("mxf:mxf:video::name", "Horizontal Graphics Safe Percentage", "float");
            AddInfo("mxf:mxf:video::name", "Vertical Graphics Safe Percentage", "float");
            AddInfo("mxf:mxf:video::name", "Perceived Display Format Name", "string");
            AddInfo("mxf:mxf:video::name", "Perceived Display Format Code", "string");
            AddInfo("mxf:mxf:video::name", "Video Color Kind", "string");
            AddInfo("mxf:mxf:video::name", "Picture Display Rate", "int16u");
            AddInfo("mxf:mxf:video::name", "Video Average Bitrate", "float");
            AddInfo("mxf:mxf:video::name", "Video Fixed Bitrate", "?");
            AddInfo("mxf:mxf:video::name", "Digital Video File Format", "string");
            AddInfo("mxf:mxf:video::name", "Coding Law Name", "string");
            AddInfo("mxf:mxf:video::name", "Audio Coding Scheme Code", "string");
            AddInfo("mxf:mxf:video::name", "Audio Coding Scheme Name", "string");
            AddInfo("mxf:mxf:video::name", "Digital Encoding Bitrate", "int32u");
            AddInfo("mxf:mxf:video::name", "Data Essence Coding ID", "?");
            AddInfo("mxf:mxf:video::name", "Storage Kind", "string");
            AddInfo("mxf:mxf:video::name", "Storage Kind", "?");
            AddInfo("mxf:mxf:video::name", "Storage Kind Code", "string");
            AddInfo("mxf:mxf:video::name", "Tape Partition Capacity", "int64u");
            AddInfo("mxf:mxf:video::name", "Disc Partition Capacity", "int64u");
            AddInfo("mxf:mxf:video::name", "Focal Length", "int32u");
            AddInfo("mxf:mxf:video::name", "Field Of View Horizontal", "int16u");
            AddInfo("mxf:mxf:video::name", "Field Of View Vertical", "int16u");
            AddInfo("mxf:mxf:video::name", "System Name Or Number", "string");
            AddInfo("mxf:mxf:video::name", "Logo Flag", "?");
            AddInfo("mxf:mxf:video::name", "Graphic Kind", "string");
            AddInfo("mxf:mxf:video::name", "Graphic Usage Kind", "string");
            AddInfo("mxf:mxf:video::name", "Signature Tune Flag", "?");
            AddInfo("mxf:mxf:video::name", "Background Music Flag", "?");
            AddInfo("mxf:mxf:video::name", "Production Script Reference", "string");
            AddInfo("mxf:mxf:video::name", "Production Script Reference", "?");
            AddInfo("mxf:mxf:video::name", "Transcript Reference", "string");
            AddInfo("mxf:mxf:video::name", "Transcript Reference", "?");
            AddInfo("mxf:mxf:video::name", "Horizontal Datum", "string");
            AddInfo("mxf:mxf:video::name", "Vertical Datum", "string");
            AddInfo("mxf:mxf:video::name", "Device Latitude", "double");
            AddInfo("mxf:mxf:video::name", "Device Longitude", "double");
            AddInfo("mxf:mxf:video::name", "Frame Center Latitude", "double");
            AddInfo("mxf:mxf:video::name", "Frame Center Longitude", "double");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 1", "string");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 1", "double");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 2", "string");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 2", "double");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 3", "string");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 3", "double");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 4", "string");
            AddInfo("mxf:mxf:video::name", "Corner Latitude Point 4", "double");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 1", "string");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 1", "double");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 2", "string");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 2", "double");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 3", "string");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 3", "double");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 4", "string");
            AddInfo("mxf:mxf:video::name", "Corner Longitude Point 4", "double");
            AddInfo("mxf:mxf:video::name", "Subject Distance", "float");
            AddInfo("mxf:mxf:video::name", "Place Keyword", "?");
            AddInfo("mxf:mxf:video::name", "Object Country Code", "?");
            AddInfo("mxf:mxf:video::name", "Object Country Code Method", "string");
            AddInfo("mxf:mxf:video::name", "Country Code Method", "string");
            AddInfo("mxf:mxf:video::name", "Non-US Classifying Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Releasable Country Code", "string");
            AddInfo("mxf:mxf:video::name", "Object Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Shooting Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Copyright License Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Intellectual Property License Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Room Number", "?");
            AddInfo("mxf:mxf:video::name", "Street Number", "?");
            AddInfo("mxf:mxf:video::name", "Street Name", "?");
            AddInfo("mxf:mxf:video::name", "Postal Town", "?");
            AddInfo("mxf:mxf:video::name", "City Name", "?");
            AddInfo("mxf:mxf:video::name", "State Or Province Or County Name", "?");
            AddInfo("mxf:mxf:video::name", "Postal Code", "?");
            AddInfo("mxf:mxf:video::name", "Country Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Room Number", "?");
            AddInfo("mxf:mxf:video::name", "Setting Street Number Or Building Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Street Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Town Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting City Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting State Or Province Or County Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Postal Code", "?");
            AddInfo("mxf:mxf:video::name", "Setting Country Name", "?");
            AddInfo("mxf:mxf:video::name", "Telephone Number", "?");
            AddInfo("mxf:mxf:video::name", "Fax Number", "?");
            AddInfo("mxf:mxf:video::name", "E-mail Address", "?");
            AddInfo("mxf:mxf:video::name", "Setting Description", "?");
            AddInfo("mxf:mxf:video::name", "POSIX Microseconds", "int64u");
            AddInfo("mxf:mxf:video::name", "Event Elapsed Time To Start", "string");
            AddInfo("mxf:mxf:video::name", "Event Elapsed Time To End", "string");
            AddInfo("mxf:mxf:video::name", "Organization ID Kind", "string");
            AddInfo("mxf:mxf:video::name", "Organization ID Kind", "?");
            AddInfo("mxf:mxf:video::name", "SMPTEUL", "?");
            AddInfo("mxf:mxf:video::name", "Essence Container Array", "?");
            AddInfo("mxf:mxf:video::name", "Essence Stream ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Index Stream ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Working Title", "string");
            AddInfo("mxf:mxf:video::name", "Working Title", "?");
            AddInfo("mxf:mxf:video::name", "Original Title", "string");
            AddInfo("mxf:mxf:video::name", "Original Title", "?");
            AddInfo("mxf:mxf:video::name", "Clip Number", "string");
            AddInfo("mxf:mxf:video::name", "Clip Number", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Track I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "Identifier Kind", "string");
            AddInfo("mxf:mxf:video::name", "Identifier Value", "int8u");
            AddInfo("mxf:mxf:video::name", "Organization Code", "string");
            AddInfo("mxf:mxf:video::name", "Organization Code", "?");
            AddInfo("mxf:mxf:video::name", "Supplier Identification Kind", "string");
            AddInfo("mxf:mxf:video::name", "Supplier Identification Value", "string");
            AddInfo("mxf:mxf:video::name", "Supplier Account Number", "string");
            AddInfo("mxf:mxf:video::name", "Supplier Account Name", "string");
            AddInfo("mxf:mxf:video::name", "Supplier Account Name", "?");
            AddInfo("mxf:mxf:video::name", "Episode Start Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Episode End Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Purchaser Identification Kind", "string");
            AddInfo("mxf:mxf:video::name", "Purchaser Identification Value", "string");
            AddInfo("mxf:mxf:video::name", "Purchaser Account Number", "string");
            AddInfo("mxf:mxf:video::name", "Purchaser Account Name", "string");
            AddInfo("mxf:mxf:video::name", "Purchaser Account Name", "?");
            AddInfo("mxf:mxf:video::name", "Contract Type", "?");
            AddInfo("mxf:mxf:video::name", "Contract Clause Description", "?");
            AddInfo("mxf:mxf:video::name", "Contract Line Name", "?");
            AddInfo("mxf:mxf:video::name", "Contract Terms Of Business", "?");
            AddInfo("mxf:mxf:video::name", "Jurisdiction", "?");
            AddInfo("mxf:mxf:video::name", "Total Currency Amount", "double");
            AddInfo("mxf:mxf:video::name", "Installment Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Identifier Issuing Authority", "string");
            AddInfo("mxf:mxf:video::name", "Publishing Organization Name", "string");
            AddInfo("mxf:mxf:video::name", "Publishing Organization Name", "?");
            AddInfo("mxf:mxf:video::name", "Publishing Service Name", "string");
            AddInfo("mxf:mxf:video::name", "Publishing Service Name", "?");
            AddInfo("mxf:mxf:video::name", "Publishing Medium Name", "string");
            AddInfo("mxf:mxf:video::name", "Publishing Medium Name", "?");
            AddInfo("mxf:mxf:video::name", "Publishing Region Name", "string");
            AddInfo("mxf:mxf:video::name", "Publishing Region Name", "?");
            AddInfo("mxf:mxf:video::name", "Salutation", "?");
            AddInfo("mxf:mxf:video::name", "Honors And Qualifications", "?");
            AddInfo("mxf:mxf:video::name", "Other Given Names", "string");
            AddInfo("mxf:mxf:video::name", "Other Given Names", "?");
            AddInfo("mxf:mxf:video::name", "Alternate Name", "string");
            AddInfo("mxf:mxf:video::name", "Alternate Name", "?");
            AddInfo("mxf:mxf:video::name", "ISO639 Text Language Code", "string");
            AddInfo("mxf:mxf:video::name", "ISO639 Captions Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Primary Spoken Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Secondary Spoken Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Primary Original Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Secondary Original Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Major Version", "int16u");
            AddInfo("mxf:mxf:video::name", "Minor Version", "int16u");
            AddInfo("mxf:mxf:video::name", "Sector Size", "int32u");
            AddInfo("mxf:mxf:video::name", "Element Length", "int32u");
            AddInfo("mxf:mxf:video::name", "Thesaurus Name", "?");
            AddInfo("mxf:mxf:video::name", "Cue-In Words", "?");
            AddInfo("mxf:mxf:video::name", "Cue-Out Words", "?");
            AddInfo("mxf:mxf:video::name", "Keypoint Kind", "string");
            AddInfo("mxf:mxf:video::name", "Keypoint Kind", "?");
            AddInfo("mxf:mxf:video::name", "Keypoint Value", "string");
            AddInfo("mxf:mxf:video::name", "Keypoint Value", "?");
            AddInfo("mxf:mxf:video::name", "Festival Name", "?");
            AddInfo("mxf:mxf:video::name", "Award Name", "string");
            AddInfo("mxf:mxf:video::name", "Award Name", "?");
            AddInfo("mxf:mxf:video::name", "Award Category", "string");
            AddInfo("mxf:mxf:video::name", "Award Category", "?");
            AddInfo("mxf:mxf:video::name", "Slate Information", "?");
            AddInfo("mxf:mxf:video::name", "Locked Indicator", "?");
            AddInfo("mxf:mxf:video::name", "Bits Per Audio Sample", "int32u");
            AddInfo("mxf:mxf:video::name", "Caption Kind", "string");
            AddInfo("mxf:mxf:video::name", "Caption Kind", "?");
            AddInfo("mxf:mxf:video::name", "Slice Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Slice Number", "int8u");
            AddInfo("mxf:mxf:video::name", "Element Delta", "int32u");
            AddInfo("mxf:mxf:video::name", "Position Table Indexing", "int8s");
            AddInfo("mxf:mxf:video::name", "Slice Offset List", "?");
            AddInfo("mxf:mxf:video::name", "Pos Table Array", "?");
            AddInfo("mxf:mxf:video::name", "Stream Offset", "int64u");
            AddInfo("mxf:mxf:video::name", "Edit Unit Flags", "int8u");
            AddInfo("mxf:mxf:video::name", "Temporal Offset", "int8s");
            AddInfo("mxf:mxf:video::name", "Anchor Offset", "int8s");
            AddInfo("mxf:mxf:video::name", "Edit Unit Length", "int32u");
            AddInfo("mxf:mxf:video::name", "Header Byte Count", "int64u");
            AddInfo("mxf:mxf:video::name", "Index Byte Count", "int64u");
            AddInfo("mxf:mxf:video::name", "Pack Length", "int32u");
            AddInfo("mxf:mxf:video::name", "Integration Indication", "?");
            AddInfo("mxf:mxf:video::name", "Event Indication", "?");
            AddInfo("mxf:mxf:video::name", "Graphic Usage Kind", "?");
            AddInfo("mxf:mxf:video::name", "Primary Package", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Sets", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Set References", "?");
            AddInfo("mxf:mxf:video::name", "File Descriptors", "?");
            AddInfo("mxf:mxf:video::name", "Stream Position Indicator", "int16u");
            AddInfo("mxf:mxf:video::name", "Stream Position Indicator", "int32u");
            AddInfo("mxf:mxf:video::name", "Stream Position Indicator", "int64u");
            AddInfo("mxf:mxf:video::name", "Offset To Metadata", "int32s");
            AddInfo("mxf:mxf:video::name", "Offset To Metadata", "int64s");
            AddInfo("mxf:mxf:video::name", "Offset To Index Table", "int32s");
            AddInfo("mxf:mxf:video::name", "Offset To Index Table", "int64s");
            AddInfo("mxf:mxf:video::name", "Byte Offset", "int64u");
            AddInfo("mxf:mxf:video::name", "Reverse Play", "int64u");
            AddInfo("mxf:mxf:video::name", "First Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "First Number In Sequence", "int64u");
            AddInfo("mxf:mxf:video::name", "Previous Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Previous Number In Sequence", "int64u");
            AddInfo("mxf:mxf:video::name", "Current Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Current Number In Sequence", "int64u");
            AddInfo("mxf:mxf:video::name", "Next Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Next Number In Sequence", "int64u");
            AddInfo("mxf:mxf:video::name", "Last Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Last Number In Sequence", "int64u");
            AddInfo("mxf:mxf:video::name", "Central Telephone Number", "string");
            AddInfo("mxf:mxf:video::name", "Mobile Telephone Number", "string");
            AddInfo("mxf:mxf:video::name", "URL", "string");
            AddInfo("mxf:mxf:video::name", "Location Description", "string");
            AddInfo("mxf:mxf:video::name", "Location Description", "?");
            AddInfo("mxf:mxf:video::name", "Location Kind", "string");
            AddInfo("mxf:mxf:video::name", "Location Kind", "?");
            AddInfo("mxf:mxf:video::name", "UTC Event Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Local Event Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Event End Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Local Event End Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Key Time Point", "int64u");
            AddInfo("mxf:mxf:video::name", "Time Period Name", "?");
            AddInfo("mxf:mxf:video::name", "Setting Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Contract Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Rights Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Rights Stop Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Payment Due Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Clip ID", "?");
            AddInfo("mxf:mxf:video::name", "Device Kind", "?");
            AddInfo("mxf:mxf:video::name", "Device Asset Number", "string");
            AddInfo("mxf:mxf:video::name", "Identification UL", "?");
            AddInfo("mxf:mxf:video::name", "Operational Pattern UL", "?");
            AddInfo("mxf:mxf:video::name", "Essence Containers", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Schemes", "?");
            AddInfo("mxf:mxf:video::name", "Project Name", "string");
            AddInfo("mxf:mxf:video::name", "Project Name", "?");
            AddInfo("mxf:mxf:video::name", "Local Tag Value", "int16u");
            AddInfo("mxf:mxf:video::name", "Local Tag Unique ID", "?");
            AddInfo("mxf:mxf:video::name", "Brand Main Title", "string");
            AddInfo("mxf:mxf:video::name", "Brand Main Title", "?");
            AddInfo("mxf:mxf:video::name", "Brand Original Title", "string");
            AddInfo("mxf:mxf:video::name", "Brand Original Title", "?");
            AddInfo("mxf:mxf:video::name", "Framework Title", "string");
            AddInfo("mxf:mxf:video::name", "Framework Title", "?");
            AddInfo("mxf:mxf:video::name", "Source Track I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "Shot Track I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "Programming Group Kind", "?");
            AddInfo("mxf:mxf:video::name", "Programming Group Title", "string");
            AddInfo("mxf:mxf:video::name", "Programming Group Title", "?");
            AddInfo("mxf:mxf:video::name", "Identifier Issuing Authority", "?");
            AddInfo("mxf:mxf:video::name", "Linking Name", "string");
            AddInfo("mxf:mxf:video::name", "Linking Name", "?");
            AddInfo("mxf:mxf:video::name", "Name Suffix", "string");
            AddInfo("mxf:mxf:video::name", "Name Suffix", "?");
            AddInfo("mxf:mxf:video::name", "Former Family Name", "string");
            AddInfo("mxf:mxf:video::name", "Former Family Name", "?");
            AddInfo("mxf:mxf:video::name", "Nationality", "string");
            AddInfo("mxf:mxf:video::name", "Nationality", "?");
            AddInfo("mxf:mxf:video::name", "Citizenship", "string");
            AddInfo("mxf:mxf:video::name", "Citizenship", "?");
            AddInfo("mxf:mxf:video::name", "Framework Text Language Code", "string");
            AddInfo("mxf:mxf:video::name", "KAG Size", "int32u");
            AddInfo("mxf:mxf:video::name", "Reversed Byte Order", "?");
            AddInfo("mxf:mxf:video::name", "Item Name", "string");
            AddInfo("mxf:mxf:video::name", "Item Name", "?");
            AddInfo("mxf:mxf:video::name", "Item Value", "string");
            AddInfo("mxf:mxf:video::name", "Item Value", "?");
            AddInfo("mxf:mxf:video::name", "XML Document Text", "?");
            AddInfo("mxf:mxf:video::name", "XML Document Text", "string");
            AddInfo("mxf:mxf:video::name", "XML Document Text", "?");
            AddInfo("mxf:mxf:video::name", "XML Document Text", "?");
            AddInfo("mxf:mxf:video::name", "Framework Thesaurus Name", "string");
            AddInfo("mxf:mxf:video::name", "Framework Thesaurus Name", "?");
            AddInfo("mxf:mxf:video::name", "Group Synopsis", "string");
            AddInfo("mxf:mxf:video::name", "Group Synopsis", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Synopsis", "string");
            AddInfo("mxf:mxf:video::name", "Annotation Synopsis", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Description", "string");
            AddInfo("mxf:mxf:video::name", "Annotation Description", "?");
            AddInfo("mxf:mxf:video::name", "Scripting Kind", "string");
            AddInfo("mxf:mxf:video::name", "Scripting Kind", "?");
            AddInfo("mxf:mxf:video::name", "Scripting Text", "string");
            AddInfo("mxf:mxf:video::name", "Scripting Text", "?");
            AddInfo("mxf:mxf:video::name", "Shot Description", "string");
            AddInfo("mxf:mxf:video::name", "Shot Description", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Kind", "string");
            AddInfo("mxf:mxf:video::name", "Annotation Kind", "?");
            AddInfo("mxf:mxf:video::name", "Related Material Description", "string");
            AddInfo("mxf:mxf:video::name", "Related Material Description", "?");
            AddInfo("mxf:mxf:video::name", "Clip Kind", "?");
            AddInfo("mxf:mxf:video::name", "Device Usage Description", "string");
            AddInfo("mxf:mxf:video::name", "Device Usage Description", "?");
            AddInfo("mxf:mxf:video::name", "Display F2 Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Stored F2 Offset", "int32s");
            AddInfo("mxf:mxf:video::name", "Active Format Descriptor", "int8u");
            AddInfo("mxf:mxf:video::name", "Line Number", "int32u");
            AddInfo("mxf:mxf:video::name", "Scanning Direction", "int8u");
            AddInfo("mxf:mxf:video::name", "Component Maximum Ref", "int32u");
            AddInfo("mxf:mxf:video::name", "Component Minimum Ref", "int32u");
            AddInfo("mxf:mxf:video::name", "Alpha Maximum Ref", "int32u");
            AddInfo("mxf:mxf:video::name", "Alpha Minimum Ref", "int32u");
            AddInfo("mxf:mxf:video::name", "Video Payload Identifier", "int8u");
            AddInfo("mxf:mxf:video::name", "Video Payload Identifier 2002", "int8u");
            AddInfo("mxf:mxf:video::name", "Single Sequence Flag", "?");
            AddInfo("mxf:mxf:video::name", "Constant B Picture Flag", "?");
            AddInfo("mxf:mxf:video::name", "Coded Content Scanning Kind", "?");
            AddInfo("mxf:mxf:video::name", "Low Delay Indicator", "?");
            AddInfo("mxf:mxf:video::name", "Closed GOP Indicator", "?");
            AddInfo("mxf:mxf:video::name", "Identical GOP Indicator", "?");
            AddInfo("mxf:mxf:video::name", "Maximum GOP Size", "int16u");
            AddInfo("mxf:mxf:video::name", "Maximum B Picture Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Profile And Level", "int8u");
            AddInfo("mxf:mxf:video::name", "Bitrate", "int32u");
            AddInfo("mxf:mxf:video::name", "Channel Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Audio Sample Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Peak Envelope", "int8u");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Data", "?");
            AddInfo("mxf:mxf:video::name", "Block Align", "int16u");
            AddInfo("mxf:mxf:video::name", "Sequence Offset", "int8u");
            AddInfo("mxf:mxf:video::name", "Block Start Offset", "int16u");
            AddInfo("mxf:mxf:video::name", "File Security Report", "int32u");
            AddInfo("mxf:mxf:video::name", "File Security Wave", "int32u");
            AddInfo("mxf:mxf:video::name", "Average Bytes Per Second", "int32u");
            AddInfo("mxf:mxf:video::name", "Auxiliary Bits Mode", "int8u");
            AddInfo("mxf:mxf:video::name", "Channel Status Mode", "undef");
            AddInfo("mxf:mxf:video::name", "Fixed Channel Status Data", "?");
            AddInfo("mxf:mxf:video::name", "User Data Mode", "?");
            AddInfo("mxf:mxf:video::name", "Fixed User Data", "?");
            AddInfo("mxf:mxf:video::name", "Emphasis", "int8u");
            AddInfo("mxf:mxf:video::name", "Bext Coding History", "string");
            AddInfo("mxf:mxf:video::name", "Bext Coding History", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Basic Data", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Basic Data", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Start Of Modulation", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Start Of Modulation", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Quality Event", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Quality Event", "?");
            AddInfo("mxf:mxf:video::name", "Qlty End Of Modulation", "string");
            AddInfo("mxf:mxf:video::name", "Qlty End Of Modulation", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Quality Parameter", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Quality Parameter", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Operator Comment", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Operator Comment", "?");
            AddInfo("mxf:mxf:video::name", "Qlty Cue Sheet", "string");
            AddInfo("mxf:mxf:video::name", "Qlty Cue Sheet", "?");
            AddInfo("mxf:mxf:video::name", "Dial Norm", "int8s");
            AddInfo("mxf:mxf:video::name", "Data Essence Coding", "?");
            AddInfo("mxf:mxf:video::name", "Date Time Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Date Time Drop Frame Flag", "?");
            AddInfo("mxf:mxf:video::name", "Date Time Embedded Flag", "?");
            AddInfo("mxf:mxf:video::name", "Date Time Kind", "?");
            AddInfo("mxf:mxf:video::name", "Delta Entry Array", "?");
            AddInfo("mxf:mxf:video::name", "Position Table Count", "int8u");
            AddInfo("mxf:mxf:video::name", "Position Table", "?");
            AddInfo("mxf:mxf:video::name", "Index Entry Array", "?");
            AddInfo("mxf:mxf:video::name", "Signal Standard", "int8u");
            AddInfo("mxf:mxf:video::name", "Data Definition", "?");
            AddInfo("mxf:mxf:video::name", "Recorded Format", "string");
            AddInfo("mxf:mxf:video::name", "Generation Copy Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Generation Clone Number", "int16u");
            AddInfo("mxf:mxf:video::name", "Theme Music Flag", "?");
            AddInfo("mxf:mxf:video::name", "Insert Music Flag", "?");
            AddInfo("mxf:mxf:video::name", "Index Edit Rate", "rational64s");
            AddInfo("mxf:mxf:video::name", "Linked Track ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Essence Container Format", "?");
            AddInfo("mxf:mxf:video::name", "Codec Definition", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Framework", "?");
            AddInfo("mxf:mxf:video::name", "Group Set", "?");
            AddInfo("mxf:mxf:video::name", "Bank Details Set", "?");
            AddInfo("mxf:mxf:video::name", "Image Format Set", "?");
            AddInfo("mxf:mxf:video::name", "Processing Set", "?");
            AddInfo("mxf:mxf:video::name", "Project Set", "?");
            AddInfo("mxf:mxf:video::name", "Contacts List Set", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Cue Words Set", "?");
            AddInfo("mxf:mxf:video::name", "Shot Cue Words Set", "?");
            AddInfo("mxf:mxf:video::name", "Award Participant Sets", "?");
            AddInfo("mxf:mxf:video::name", "Contract Participant Sets", "?");
            AddInfo("mxf:mxf:video::name", "Person Sets", "?");
            AddInfo("mxf:mxf:video::name", "Participant Organization Sets", "?");
            AddInfo("mxf:mxf:video::name", "Person Organization Sets", "?");
            AddInfo("mxf:mxf:video::name", "Location Sets", "?");
            AddInfo("mxf:mxf:video::name", "Titles Sets", "?");
            AddInfo("mxf:mxf:video::name", "Group Sets", "?");
            AddInfo("mxf:mxf:video::name", "Identification Sets", "?");
            AddInfo("mxf:mxf:video::name", "Episodic Item Sets", "?");
            AddInfo("mxf:mxf:video::name", "Branding Sets", "?");
            AddInfo("mxf:mxf:video::name", "Event Sets", "?");
            AddInfo("mxf:mxf:video::name", "Publication Sets", "?");
            AddInfo("mxf:mxf:video::name", "Award Sets", "?");
            AddInfo("mxf:mxf:video::name", "Caption Description Sets", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Sets", "?");
            AddInfo("mxf:mxf:video::name", "Production Setting Period Sets", "?");
            AddInfo("mxf:mxf:video::name", "Scene Setting Period Sets", "?");
            AddInfo("mxf:mxf:video::name", "Scripting Sets", "?");
            AddInfo("mxf:mxf:video::name", "Classification Sets", "?");
            AddInfo("mxf:mxf:video::name", "Scene Shot Sets", "?");
            AddInfo("mxf:mxf:video::name", "Clip Shot Sets", "?");
            AddInfo("mxf:mxf:video::name", "Key Point Sets", "?");
            AddInfo("mxf:mxf:video::name", "Shot Participant Role Sets", "?");
            AddInfo("mxf:mxf:video::name", "Shot Person Sets", "?");
            AddInfo("mxf:mxf:video::name", "Organization Sets", "?");
            AddInfo("mxf:mxf:video::name", "Shot Location Sets", "?");
            AddInfo("mxf:mxf:video::name", "Address Sets", "?");
            AddInfo("mxf:mxf:video::name", "Communication Sets", "?");
            AddInfo("mxf:mxf:video::name", "Contract Sets", "?");
            AddInfo("mxf:mxf:video::name", "Rights Sets", "?");
            AddInfo("mxf:mxf:video::name", "Payments Sets", "?");
            AddInfo("mxf:mxf:video::name", "Device Parameters Sets", "?");
            AddInfo("mxf:mxf:video::name", "Classification Name Value Sets", "?");
            AddInfo("mxf:mxf:video::name", "Contact Name Value Sets", "?");
            AddInfo("mxf:mxf:video::name", "Device Parameter Name Value Sets", "?");
            AddInfo("mxf:mxf:video::name", "Metadata Server Locators", "?");
            AddInfo("mxf:mxf:video::name", "Related Material Locators", "?");
            AddInfo("mxf:mxf:video::name", "Local Tag Entries", "?");
            AddInfo("mxf:mxf:video::name", "Total Number In Sequence", "int32u");
            AddInfo("mxf:mxf:video::name", "Room Or Suite Name", "string");
            AddInfo("mxf:mxf:video::name", "Room Or Suite Name", "?");
            AddInfo("mxf:mxf:video::name", "Building Name", "string");
            AddInfo("mxf:mxf:video::name", "Building Name", "?");
            AddInfo("mxf:mxf:video::name", "URL", "?");
            AddInfo("mxf:mxf:video::name", "Local Festival Date Time", "string");
            AddInfo("mxf:mxf:video::name", "Shot Start Position", "?");
            AddInfo("mxf:mxf:video::name", "Indexing Start Position", "?");
            AddInfo("mxf:mxf:video::name", "Event Origin", "?");
            AddInfo("mxf:mxf:video::name", "Setting Period Description", "string");
            AddInfo("mxf:mxf:video::name", "Setting Period Description", "?");
            AddInfo("mxf:mxf:video::name", "Index Duration", "?");
            AddInfo("mxf:mxf:video::name", "Shot Duration", "?");
            AddInfo("mxf:mxf:video::name", "Extended Clip ID", "?");
            AddInfo("mxf:mxf:video::name", "Clip ID Array", "?");
            AddInfo("mxf:mxf:video::name", "Extended Clip ID Array", "?");
            AddInfo("mxf:mxf:video::name", "Track Number Batch", "int32u");
            AddInfo("mxf:mxf:video::name", "Extended Text Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Extended Captions Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Framework Extended Text Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Primary Extended Spoken Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Secondary Extended Spoken Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Original Extended Spoken Primary Language Code", "string");
            AddInfo("mxf:mxf:video::name", "Secondary Original Extended Spoken Language Code", "string");
            AddInfo("mxf:mxf:video::name", "KLV Metadata Sequence", "?");
            AddInfo("mxf:mxf:video::name", "Package Attributes", "?");
            AddInfo("mxf:mxf:video::name", "Component Attributes", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 1", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 2", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 3", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 4", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 5", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 6", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 7", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Decoder Init Frame 8", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 1", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 2", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 3", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 4", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 5", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 6", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 7", "?");
            AddInfo("mxf:mxf:video::name", "MPEG7 Bi M Access Unit Frame 8", "?");
            AddInfo("mxf:mxf:video::name", "Component User Comments", "?");
            AddInfo("mxf:mxf:video::name", "Shot Comment Kind", "?");
            AddInfo("mxf:mxf:video::name", "Shot Comment", "?");
            AddInfo("mxf:mxf:video::name", "Sensor Mode", "string");
            AddInfo("mxf:mxf:video::name", "Channel Assignment", "?");
            AddInfo("mxf:mxf:video::name", "Content Package Index Array", "?");
            AddInfo("mxf:mxf:video::name", "Video Index Array", "?");
            AddInfo("mxf:mxf:video::name", "Approximate Image Container Size", "int32u");
            AddInfo("mxf:mxf:video::name", "Metadata Encoding Scheme Code", "string");
            AddInfo("mxf:mxf:video::name", "MIME Media Type", "string");
            AddInfo("mxf:mxf:video::name", "MIME Media Type", "?");
            AddInfo("mxf:mxf:video::name", "Field Of View Vertical FP", "float");
            AddInfo("mxf:mxf:video::name", "Package Usage Kind", "?");
            AddInfo("mxf:mxf:video::name", "Channel ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Channel I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "KLV Data Type", "?");
            AddInfo("mxf:mxf:video::name", "KLV Data Parent Properties", "?");
            AddInfo("mxf:mxf:video::name", "Tagged Value Parent Properties", "?");
            AddInfo("mxf:mxf:video::name", "Annotation Participant Sets", "?");
            AddInfo("mxf:mxf:video::name", "KLV Data Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Tagged Value Definitions", "?");
            AddInfo("mxf:mxf:video::name", "Address Name Value Sets", "?");
            AddInfo("mxf:mxf:video::name", "NMEA Document Text", "string");
            AddInfo("mxf:mxf:video::name", "Platform Roll Angle", "float");
            AddInfo("mxf:mxf:video::name", "Platform Pitch Angle", "float");
            AddInfo("mxf:mxf:video::name", "Platform Heading Angle", "float");
            AddInfo("mxf:mxf:video::name", "Address Line", "string");
            AddInfo("mxf:mxf:video::name", "Address Line", "?");
            AddInfo("mxf:mxf:video::name", "Place Name", "string");
            AddInfo("mxf:mxf:video::name", "Place Name", "?");
            AddInfo("mxf:mxf:video::name", "Geographical Coordinates", "?");
            AddInfo("mxf:mxf:video::name", "Astronomical Body Name", "string");
            AddInfo("mxf:mxf:video::name", "Astronomical Body Name", "?");
            AddInfo("mxf:mxf:video::name", "Timecode Array", "?");
            AddInfo("mxf:mxf:video::name", "Mark In", "?");
            AddInfo("mxf:mxf:video::name", "User Position", "?");
            AddInfo("mxf:mxf:video::name", "Mark Out", "?");
            AddInfo("mxf:mxf:video::name", "Clip Creation Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Video Clip Duration", "int32u");
            AddInfo("mxf:mxf:video::name", "Participant ID", "?");
            AddInfo("mxf:mxf:video::name", "Contact ID", "?");
            AddInfo("mxf:mxf:video::name", "Default Namespace URI", "string");
            AddInfo("mxf:mxf:video::name", "Default Namespace URI", "?");
            AddInfo("mxf:mxf:video::name", "Namespace URI", "string");
            AddInfo("mxf:mxf:video::name", "Namespace URI", "?");
            AddInfo("mxf:mxf:video::name", "Namespace UR Is", "string");
            AddInfo("mxf:mxf:video::name", "Namespace UR Is", "?");
            AddInfo("mxf:mxf:video::name", "HTMLDOCTYPE", "string");
            AddInfo("mxf:mxf:video::name", "HTMLDOCTYPE", "?");
            AddInfo("mxf:mxf:video::name", "Namespace Prefix", "string");
            AddInfo("mxf:mxf:video::name", "Namespace Prefix", "?");
            AddInfo("mxf:mxf:video::name", "Namespace Prefixes", "string");
            AddInfo("mxf:mxf:video::name", "Namespace Prefixes", "?");
            AddInfo("mxf:mxf:video::name", "Rights Comment", "string");
            AddInfo("mxf:mxf:video::name", "Rights Comment", "?");
            AddInfo("mxf:mxf:video::name", "Nomination Category", "string");
            AddInfo("mxf:mxf:video::name", "Nomination Category", "?");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Version", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Format", "int32u");
            AddInfo("mxf:mxf:video::name", "Points Per Peak Value", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Block Size", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Channel Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Frame Count", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Of Peaks Position", "?");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Timestamp", "int32u");
            AddInfo("mxf:mxf:video::name", "Peak Envelope Data", "?");
            AddInfo("mxf:mxf:video::name", "RIFF Chunk ID", "int32u");
            AddInfo("mxf:mxf:video::name", "RIFF Chunk Length", "int32u");
            AddInfo("mxf:mxf:video::name", "RIFF Chunk Data", "?");
            AddInfo("mxf:mxf:video::name", "MIME Char Set", "string");
            AddInfo("mxf:mxf:video::name", "MIME Char Set", "?");
            AddInfo("mxf:mxf:video::name", "MIME Encoding", "string");
            AddInfo("mxf:mxf:video::name", "MIME Encoding", "?");
            AddInfo("mxf:mxf:video::name", "Mono Source Track I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "Composition Rendering", "?");
            AddInfo("mxf:mxf:video::name", "Captions Description Participant Sets", "?");
            AddInfo("mxf:mxf:video::name", "Event Annotation Sets", "?");
            AddInfo("mxf:mxf:video::name", "Scripting Locators", "?");
            AddInfo("mxf:mxf:video::name", "Unknown BWF Chunks", "?");
            AddInfo("mxf:mxf:video::name", "Cryptographic Context ID", "?");
            AddInfo("mxf:mxf:video::name", "Platform Designation", "?");
            AddInfo("mxf:mxf:video::name", "Local Target ID", "?");
            AddInfo("mxf:mxf:video::name", "NITF Layer Target ID", "string");
            AddInfo("mxf:mxf:video::name", "NITF Layer Target ID", "?");
            AddInfo("mxf:mxf:video::name", "Package Name", "string");
            AddInfo("mxf:mxf:video::name", "RP217 Data Stream PID", "int16u");
            AddInfo("mxf:mxf:video::name", "RP217 Video Stream PID", "int16u");
            AddInfo("mxf:mxf:video::name", "Source Organization", "?");
            AddInfo("mxf:mxf:video::name", "Original Producer Name", "?");
            AddInfo("mxf:mxf:video::name", "Security Classification", "?");
            AddInfo("mxf:mxf:video::name", "Security Classification Caveats", "?");
            AddInfo("mxf:mxf:video::name", "Classification Comment", "?");
            AddInfo("mxf:mxf:video::name", "Cipher Algorithm", "?");
            AddInfo("mxf:mxf:video::name", "Cryptographic Key ID", "?");
            AddInfo("mxf:mxf:video::name", "Encrypted Source Value", "?");
            AddInfo("mxf:mxf:video::name", "MIC Algorithm", "?");
            AddInfo("mxf:mxf:video::name", "MIC", "?");
            AddInfo("mxf:mxf:video::name", "ISO639-1 Language Code", "?");
            AddInfo("mxf:mxf:video::name", "JFIF Marker Description", "string");
            AddInfo("mxf:mxf:video::name", "JFIF Marker Description", "?");
            AddInfo("mxf:mxf:video::name", "HTML Meta Description", "string");
            AddInfo("mxf:mxf:video::name", "HTML Meta Description", "?");
            AddInfo("mxf:mxf:video::name", "Metadata Item Name", "string");
            AddInfo("mxf:mxf:video::name", "Color Primaries", "string");
            AddInfo("mxf:mxf:video::name", "Color Primaries", "?");
            AddInfo("mxf:mxf:video::name", "Product Format", "string");
            AddInfo("mxf:mxf:video::name", "Product Format", "?");
            AddInfo("mxf:mxf:video::name", "Source Length", "int64u");
            AddInfo("mxf:mxf:video::name", "Image Source Device Kind", "?");
            AddInfo("mxf:mxf:video::name", "Source Container Format", "?");
            AddInfo("mxf:mxf:video::name", "Source Key", "?");
            AddInfo("mxf:mxf:video::name", "Dynamic Source Package ID", "?");
            AddInfo("mxf:mxf:video::name", "Dynamic Source Track I Ds", "int32u");
            AddInfo("mxf:mxf:video::name", "Source Index", "?");
            AddInfo("mxf:mxf:video::name", "Source Species", "?");
            AddInfo("mxf:mxf:video::name", "Source Value", "?");
            AddInfo("mxf:mxf:video::name", "Cryptographic Context Object", "?");
            AddInfo("mxf:mxf:video::name", "Sub-descriptors", "?");
            AddInfo("mxf:mxf:video::name", "Encrypted Track File ID", "?");
            AddInfo("mxf:mxf:video::name", "Cryptographic Context Link", "?");
            AddInfo("mxf:mxf:video::name", "Plaintext Offset", "int64u");
            AddInfo("mxf:mxf:video::name", "Triplet Sequence Number", "int64u");
            AddInfo("mxf:mxf:video::name", "Bounding Rectangle", "?");
            AddInfo("mxf:mxf:video::name", "Geographic Location", "?");
            AddInfo("mxf:mxf:video::name", "Geographic Polygon Coordinates", "?");
            AddInfo("mxf:mxf:video::name", "Geographic Area Northwest", "?");
            AddInfo("mxf:mxf:video::name", "Geographic Area Southeast", "?");
            AddInfo("mxf:mxf:video::name", "Geographic Area Source Datum", "string");
            AddInfo("mxf:mxf:video::name", "Geographic Polygon Source Datum", "string");
            AddInfo("mxf:mxf:video::name", "Country Code Method", "?");
            AddInfo("mxf:mxf:video::name", "Classifying Country Code", "?");
            AddInfo("mxf:mxf:video::name", "Releasable Country Code", "?");
            AddInfo("mxf:mxf:video::name", "UTC Start Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Instant Date Time", "string");
            AddInfo("mxf:mxf:video::name", "UTC Instant Date Time", "?");
            AddInfo("mxf:mxf:video::name", "UTC Last Modify Date", "?");
            AddInfo("mxf:mxf:video::name", "Tolerance Mode", "?");
            AddInfo("mxf:mxf:video::name", "Tolerance Window", "?");
            AddInfo("mxf:mxf:video::name", "Tolerance Interpolation Method", "?");
            AddInfo("mxf:mxf:video::name", "VBI Line Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Stored VBI Line Number", "int16u");
            AddInfo("mxf:mxf:video::name", "VBI Wrapping Type", "int8u");
            AddInfo("mxf:mxf:video::name", "VBI Payload Sample Count", "int16u");
            AddInfo("mxf:mxf:video::name", "VBI Payload Byte Array", "int8u");
            AddInfo("mxf:mxf:video::name", "ANC Packet Count", "int16u");
            AddInfo("mxf:mxf:video::name", "Stored ANC Line Number", "int16u");
            AddInfo("mxf:mxf:video::name", "ANC Wrapping Type", "int8u");
            AddInfo("mxf:mxf:video::name", "ANC Payload Sample Count", "int16u");
            AddInfo("mxf:mxf:video::name", "ANC Payload Byte Array", "int8u");
            AddInfo("mxf:mxf:video::name", "VBI Payload Sample Coding", "int8u");
            AddInfo("mxf:mxf:video::name", "ANC Payload Sample Coding", "int8u");
            AddInfo("mxf:mxf:video::name", "Rsiz", "int16u");
            AddInfo("mxf:mxf:video::name", "Xsiz", "int32u");
            AddInfo("mxf:mxf:video::name", "Ysiz", "int32u");
            AddInfo("mxf:mxf:video::name", "X Osiz", "int32u");
            AddInfo("mxf:mxf:video::name", "Y Osiz", "int32u");
            AddInfo("mxf:mxf:video::name", "X Tsiz", "int32u");
            AddInfo("mxf:mxf:video::name", "Y Tsiz", "int32u");
            AddInfo("mxf:mxf:video::name", "XT Osiz", "int32u");
            AddInfo("mxf:mxf:video::name", "YT Osiz", "int32u");
            AddInfo("mxf:mxf:video::name", "Csiz", "int16u");
            AddInfo("mxf:mxf:video::name", "Picture Component Sizing", "?");
            AddInfo("mxf:mxf:video::name", "Coding Style Default", "?");
            AddInfo("mxf:mxf:video::name", "Quantization Default", "?");
            AddInfo("mxf:mxf:video::name", "MPEG Audio Bitrate", "int32u");
            AddInfo("mxf:mxf:video::name", "CBE Start Offset", "int64u");
            AddInfo("mxf:mxf:video::name", "VBE End Offset", "int64u");
            AddInfo("mxf:mxf:video::name", "Sub Descriptor", "?");
            AddInfo("mxf:mxf:video::name", "Sub Descriptors", "?");
            AddInfo("mxf:mxf:video::name", "Root Meta Dictionary", "?");
            AddInfo("mxf:mxf:video::name", "Root Preface", "?");
            AddInfo("mxf:mxf:video::name", "Root Object Directory", "?");
            AddInfo("mxf:mxf:video::name", "Root Format Version", "int32u");
            AddInfo("mxf:mxf:video::name", "Frame Center Elevation", "float");
            AddInfo("mxf:mxf:video::name", "Package Mark In Position", "?");
            AddInfo("mxf:mxf:video::name", "Package Mark Out Position", "?");
            AddInfo("mxf:mxf:video::name", "Ad-ID", "?");
            AddInfo("mxf:mxf:video::name", "Resource ID", "?");
            AddInfo("mxf:mxf:video::name", "Ancillary Resource ID", "?");
            AddInfo("mxf:mxf:video::name", "Application Scheme Batch", "?");
            AddInfo("mxf:mxf:video::name", "Register Kind", "?");
            AddInfo("mxf:mxf:video::name", "Register Version", "?");
            AddInfo("mxf:mxf:video::name", "Register Editor Name", "?");
            AddInfo("mxf:mxf:video::name", "Register Status Kind", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Name", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Definition", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Symbol", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Defining Document Name", "?");
            AddInfo("mxf:mxf:video::name", "Register Item UL", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Notes", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Introduction Version", "int8u");
            AddInfo("mxf:mxf:video::name", "Register Item Hierarchy Level", "int16u");
            AddInfo("mxf:mxf:video::name", "Register Entry Status", "?");
            AddInfo("mxf:mxf:video::name", "Register Action", "?");
            AddInfo("mxf:mxf:video::name", "Register Approver Name", "?");
            AddInfo("mxf:mxf:video::name", "Register Creation Time", "?");
            AddInfo("mxf:mxf:video::name", "Registrant Name", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Originator Name", "?");
            AddInfo("mxf:mxf:video::name", "Register User Name", "?");
            AddInfo("mxf:mxf:video::name", "Register User Time", "?");
            AddInfo("mxf:mxf:video::name", "Register Administration Notes", "?");
            AddInfo("mxf:mxf:video::name", "AFD And Bar Data", "?");
            AddInfo("mxf:mxf:video::name", "Pan Scan Information", "?");
            AddInfo("mxf:mxf:video::name", "VC-1 Initialization Metadata", "?");
            AddInfo("mxf:mxf:video::name", "VC-1 Single Sequence", "?");
            AddInfo("mxf:mxf:video::name", "VC-1 Coded Content Type", "int8u");
            AddInfo("mxf:mxf:video::name", "VC-1 Identical GOP", "?");
            AddInfo("mxf:mxf:video::name", "VC-1 Maximum GOP", "int16u");
            AddInfo("mxf:mxf:video::name", "VC-1B Picture Count", "int16u");
            AddInfo("mxf:mxf:video::name", "VC-1 Average Bitrate", "int32u");
            AddInfo("mxf:mxf:video::name", "VC-1 Maximum Bitrate", "int32u");
            AddInfo("mxf:mxf:video::name", "VC-1 Profile", "int8u");
            AddInfo("mxf:mxf:video::name", "VC-1 Level", "int8u");
            AddInfo("mxf:mxf:video::name", "Linked Timecode Track ID", "?");
            AddInfo("mxf:mxf:video::name", "SMPTE337M Data Stream Number", "int8u");
            AddInfo("mxf:mxf:video::name", "Application Scheme", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Scheme", "?");
            AddInfo("mxf:mxf:video::name", "UCS Encoding", "?");
            AddInfo("mxf:mxf:video::name", "Linked Application Plug-In Instance ID", "?");
            AddInfo("mxf:mxf:video::name", "Linked Descriptive Framework Plug-In ID", "?");
            AddInfo("mxf:mxf:video::name", "Application Plug-In Instance ID", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Plug-In ID", "?");
            AddInfo("mxf:mxf:video::name", "Application Environment ID", "?");
            AddInfo("mxf:mxf:video::name", "Descriptive Metadata Application Environment ID", "?");
            AddInfo("mxf:mxf:video::name", "Linked Descriptive Object Plug-In ID", "?");
            AddInfo("mxf:mxf:video::name", "Timebase Reference Track ID", "int32u");
            AddInfo("mxf:mxf:video::name", "Object Class Definition", "?");
            AddInfo("mxf:mxf:video::name", "Application Plug-In Batch", "?");
            AddInfo("mxf:mxf:video::name", "Package Marker", "?");
            AddInfo("mxf:mxf:video::name", "Package Timeline Marker Ref", "?");
            AddInfo("mxf:mxf:video::name", "Register Administration Object", "?");
            AddInfo("mxf:mxf:video::name", "Register Entry Administration Object", "?");
            AddInfo("mxf:mxf:video::name", "Generic Payloads", "?");
            AddInfo("mxf:mxf:video::name", "Register Entry Array", "?");
            AddInfo("mxf:mxf:video::name", "Register Administration Array", "?");
            AddInfo("mxf:mxf:video::name", "Application Information Array", "?");
            AddInfo("mxf:mxf:video::name", "Register Child Entry Array", "?");
            AddInfo("mxf:mxf:video::name", "Register Release Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Register Item Status Change Date Time", "?");
            AddInfo("mxf:mxf:video::name", "Open Body Partition", "?");
            AddInfo("mxf:mxf:video::name", "Closed Body Partition", "?");
            AddInfo("mxf:mxf:video::name", "Open Complete Body Partition", "?");
            AddInfo("mxf:mxf:video::name", "Closed Complete Body Partition", "?");
            AddInfo("mxf:mxf:video::name", "Footer", "?");
            AddInfo("mxf:mxf:video::name", "Complete Footer", "?");
            AddInfo("mxf:mxf:video::name", "Random Index Metadata V10", "?");
            AddInfo("mxf:mxf:video::name", "Random Index Metadata", "?");
            AddInfo("mxf:mxf:video::name", "Partition Metadata", "?");
            AddInfo("mxf:mxf:video::name", "Source Clip", "?");
            AddInfo("mxf:mxf:video::name", "V10 Index Table Segment", "?");
            AddInfo("mxf:mxf:video::name", "Index Table Segment", "?");
            AddInfo("mxf:mxf:video::name", "Default Object", "?");
            AddInfo("mxf:mxf:video::name", "Cipher Algorithm AES128 CBC", "?");
            AddInfo("mxf:mxf:video::name", "HMAC Algorithm SHA1128", "?");
            AddInfo("mxf:mxf:video::name", "Encrypted Container Label", "?");
            AddInfo("mxf:mxf:video::name", "Cryptographic Framework Label", "?");
        }


        static void InitTable398()
        {
            AddInfo("matroska:matroska:video::name", "Track Type", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter String", "utf8");
            AddInfo("matroska:matroska:video::name", "Video Codec ID", "string");
            AddInfo("matroska:matroska:video::name", "Audio Codec ID", "string");
            AddInfo("matroska:matroska:video::name", "Codec ID", "string");
            AddInfo("matroska:matroska:video::name", "Track Default", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Track Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Time Start", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Time End", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Ref Time", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Ref Cluster", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Flag Hidden", "unsigned");
            AddInfo("matroska:matroska:video::name", "Video Scan Type", "unsigned");
            AddInfo("matroska:matroska:video::name", "Block Duration", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Lacing", "unsigned");
            AddInfo("matroska:matroska:video::name", "Audio Channels", "unsigned");
            AddInfo("matroska:matroska:video::name", "Block", "?");
            AddInfo("matroska:matroska:video::name", "Block Virtual", "?");
            AddInfo("matroska:matroska:video::name", "Simple Block", "?");
            AddInfo("matroska:matroska:video::name", "Codec State", "?");
            AddInfo("matroska:matroska:video::name", "Block Additional", "?");
            AddInfo("matroska:matroska:video::name", "Position", "unsigned");
            AddInfo("matroska:matroska:video::name", "Codec Decode All", "unsigned");
            AddInfo("matroska:matroska:video::name", "Prev Size", "unsigned");
            AddInfo("matroska:matroska:video::name", "Encrypted Block", "?");
            AddInfo("matroska:matroska:video::name", "Image Width", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Time", "unsigned");
            AddInfo("matroska:matroska:video::name", "Audio Sample Rate", "float");
            AddInfo("matroska:matroska:video::name", "Track Used", "unsigned");
            AddInfo("matroska:matroska:video::name", "Image Height", "unsigned");
            AddInfo("matroska:matroska:video::name", "CRC-32", "?");
            AddInfo("matroska:matroska:video::name", "Block Additional ID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Lace Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Frame Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Delay", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cluster Duration", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Time Code", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Codec State", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Ref Codec State", "unsigned");
            AddInfo("matroska:matroska:video::name", "Void", "?");
            AddInfo("matroska:matroska:video::name", "Block Add ID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Cluster Position", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Track", "unsigned");
            AddInfo("matroska:matroska:video::name", "Reference Priority", "unsigned");
            AddInfo("matroska:matroska:video::name", "Reference Block", "signed");
            AddInfo("matroska:matroska:video::name", "Reference Virtual", "signed");
            AddInfo("matroska:matroska:video::name", "Content Compression Algorithm", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Compression Settings", "?");
            AddInfo("matroska:matroska:video::name", "Doc Type", "string");
            AddInfo("matroska:matroska:video::name", "Doc Type Read Version", "unsigned");
            AddInfo("matroska:matroska:video::name", "EBML Version", "unsigned");
            AddInfo("matroska:matroska:video::name", "Doc Type Version", "unsigned");
            AddInfo("matroska:matroska:video::name", "EBML Max ID Length", "unsigned");
            AddInfo("matroska:matroska:video::name", "EBML Max Size Length", "unsigned");
            AddInfo("matroska:matroska:video::name", "EBML Read Version", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Language", "string");
            AddInfo("matroska:matroska:video::name", "Chapter Country", "string");
            AddInfo("matroska:matroska:video::name", "Segment Family", "?");
            AddInfo("matroska:matroska:video::name", "Date/Time Original", "date");
            AddInfo("matroska:matroska:video::name", "Tag Language", "string");
            AddInfo("matroska:matroska:video::name", "Tag Default", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Binary", "?");
            AddInfo("matroska:matroska:video::name", "Tag String", "utf8");
            AddInfo("matroska:matroska:video::name", "Duration", "float");
            AddInfo("matroska:matroska:video::name", "Chapter Process Private", "?");
            AddInfo("matroska:matroska:video::name", "Chapter Flag Enabled", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Edition UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Edition Flag Hidden", "unsigned");
            AddInfo("matroska:matroska:video::name", "Edition Flag Default", "unsigned");
            AddInfo("matroska:matroska:video::name", "Edition Flag Ordered", "unsigned");
            AddInfo("matroska:matroska:video::name", "Attached File Data", "?");
            AddInfo("matroska:matroska:video::name", "Attached File MIME Type", "string");
            AddInfo("matroska:matroska:video::name", "Attached File Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Attached File Referral", "?");
            AddInfo("matroska:matroska:video::name", "Attached File Description", "utf8");
            AddInfo("matroska:matroska:video::name", "Attached File UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Encryption Algorithm", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Encryption Key ID", "?");
            AddInfo("matroska:matroska:video::name", "Content Signature", "?");
            AddInfo("matroska:matroska:video::name", "Content Signature Key ID", "?");
            AddInfo("matroska:matroska:video::name", "Content Signature Algorithm", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Signature Hash Algorithm", "unsigned");
            AddInfo("matroska:matroska:video::name", "Muxing App", "utf8");
            AddInfo("matroska:matroska:video::name", "Content Encoding Order", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Encoding Scope", "unsigned");
            AddInfo("matroska:matroska:video::name", "Content Encoding Type", "unsigned");
            AddInfo("matroska:matroska:video::name", "Cue Ref Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Cue Block Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Offset", "signed");
            AddInfo("matroska:matroska:video::name", "Seek ID", "?");
            AddInfo("matroska:matroska:video::name", "Seek Position", "unsigned");
            AddInfo("matroska:matroska:video::name", "Stereo 3D Mode", "unsigned");
            AddInfo("matroska:matroska:video::name", "Crop Bottom", "unsigned");
            AddInfo("matroska:matroska:video::name", "Display Width", "unsigned");
            AddInfo("matroska:matroska:video::name", "Display Unit", "unsigned");
            AddInfo("matroska:matroska:video::name", "Aspect Ratio Type", "unsigned");
            AddInfo("matroska:matroska:video::name", "Display Height", "unsigned");
            AddInfo("matroska:matroska:video::name", "Crop Top", "unsigned");
            AddInfo("matroska:matroska:video::name", "Crop Left", "unsigned");
            AddInfo("matroska:matroska:video::name", "Crop Right", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Forced", "unsigned");
            AddInfo("matroska:matroska:video::name", "Max Block Addition ID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Writing App", "utf8");
            AddInfo("matroska:matroska:video::name", "Silent Track Number", "unsigned");
            AddInfo("matroska:matroska:video::name", "Audio Bits Per Sample", "unsigned");
            AddInfo("matroska:matroska:video::name", "Codec Private", "?");
            AddInfo("matroska:matroska:video::name", "Chapter Physical Equivalent", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Chapter UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Track UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Attachment UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Tag Edition UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Target Type", "string");
            AddInfo("matroska:matroska:video::name", "Signed Element", "?");
            AddInfo("matroska:matroska:video::name", "Track Translate Track ID", "?");
            AddInfo("matroska:matroska:video::name", "Track Translate Codec", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Translate Edition UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Target Type Value", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Process Time", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Process Data", "?");
            AddInfo("matroska:matroska:video::name", "Chapter Process Codec ID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Translate ID", "?");
            AddInfo("matroska:matroska:video::name", "Chapter Translate Codec", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Translate Edition UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Min Cache", "unsigned");
            AddInfo("matroska:matroska:video::name", "Max Cache", "unsigned");
            AddInfo("matroska:matroska:video::name", "Chapter Segment UID", "?");
            AddInfo("matroska:matroska:video::name", "Chapter Segment Edition UID", "?");
            AddInfo("matroska:matroska:video::name", "Track Overlay", "unsigned");
            AddInfo("matroska:matroska:video::name", "Segment File Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Segment UID", "?");
            AddInfo("matroska:matroska:video::name", "Chapter UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Track Attachment UID", "unsigned");
            AddInfo("matroska:matroska:video::name", "Output Audio Sample Rate", "float");
            AddInfo("matroska:matroska:video::name", "Title", "utf8");
            AddInfo("matroska:matroska:video::name", "Channel Positions", "?");
            AddInfo("matroska:matroska:video::name", "Signature Algo", "unsigned");
            AddInfo("matroska:matroska:video::name", "Signature Hash", "unsigned");
            AddInfo("matroska:matroska:video::name", "Signature Public Key", "?");
            AddInfo("matroska:matroska:video::name", "Signature", "?");
            AddInfo("matroska:matroska:video::name", "Track Language", "string");
            AddInfo("matroska:matroska:video::name", "Track Timecode Scale", "float");
            AddInfo("matroska:matroska:video::name", "Frame Rate", "float");
            AddInfo("matroska:matroska:video::name", "Video Frame Rate", "unsigned");
            AddInfo("matroska:matroska:video::name", "Default Duration", "unsigned");
            AddInfo("matroska:matroska:video::name", "Video Codec Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Audio Codec Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Codec Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Codec Download URL", "string");
            AddInfo("matroska:matroska:video::name", "Timecode Scale", "unsigned");
            AddInfo("matroska:matroska:video::name", "Color Space", "?");
            AddInfo("matroska:matroska:video::name", "Gamma", "float");
            AddInfo("matroska:matroska:video::name", "Codec Settings", "utf8");
            AddInfo("matroska:matroska:video::name", "Codec Info URL", "string");
            AddInfo("matroska:matroska:video::name", "Prev File Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Prev UID", "?");
            AddInfo("matroska:matroska:video::name", "Next File Name", "utf8");
            AddInfo("matroska:matroska:video::name", "Next UID", "?");
        }


        static void InitTable399()
        {
            AddInfo("xmp:xmp-mp:image::name", "Region Info MP", "struct");
            AddInfo("xmp:xmp-mp:image::name", "Region Info Date Regions Valid", "date");
            AddInfo("xmp:xmp-mp:image::name", "Region Info Regions", "struct");
            AddInfo("xmp:xmp-mp:image::name", "Region Person Display Name", "string");
            AddInfo("xmp:xmp-mp:image::name", "Region Person Email Digest", "string");
            AddInfo("xmp:xmp-mp:image::name", "Region Person Live Id CID", "string");
            AddInfo("xmp:xmp-mp:image::name", "Region Person Source ID", "string");
            AddInfo("xmp:xmp-mp:image::name", "Region Rectangle", "string");
        }


        static void InitTable400()
        {
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Camera Motion", "string");
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Map Type", "string");
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Phi 0", "real");
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Phi 1", "real");
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Theta 0", "real");
            AddInfo("xmp:xmp-mp1:image::name", "Panoramic Stitch Theta 1", "real");
        }


        static void InitTable401()
        {
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Version", "int32u");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Camera Motion", "int32u");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Map Type", "int32u");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Theta 0", "float");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Theta 1", "float");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Phi 0", "float");
            AddInfo("makernotes:microsoft:image::name", "Panoramic Stitch Phi 1", "float");
        }


        static void InitTable402()
        {
            AddInfo("xmp:xmp-microsoft:image::name", "Camera Serial Number", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Date Acquired", "date");
            AddInfo("xmp:xmp-microsoft:image::name", "Flash Manufacturer", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Flash Model", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Last Keyword IPTC", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Last Keyword XMP", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Lens Manufacturer", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Lens Model", "string");
            AddInfo("xmp:xmp-microsoft:image::name", "Rating Percent", "string");
        }


        static void InitTable403()
        {
            AddInfo("quicktime:microsoft:video::name", "Abstract", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time Year", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time Year Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Acquisition Time Year Month Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Artist Sort Order", "?");
            AddInfo("quicktime:microsoft:video::name", "Album ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Album ID Album Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Title Sort Order", "?");
            AddInfo("quicktime:microsoft:video::name", "Alternate Source URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Audio Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "Audio Format", "?");
            AddInfo("quicktime:microsoft:video::name", "Author", "?");
            AddInfo("quicktime:microsoft:video::name", "Author Sort Order", "?");
            AddInfo("quicktime:microsoft:video::name", "Average Level", "?");
            AddInfo("quicktime:microsoft:video::name", "Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "Buy Now", "?");
            AddInfo("quicktime:microsoft:video::name", "Buy Tickets", "?");
            AddInfo("quicktime:microsoft:video::name", "CD Track Enabled", "?");
            AddInfo("quicktime:microsoft:video::name", "Call Letters", "?");
            AddInfo("quicktime:microsoft:video::name", "Camera Manufacturer", "?");
            AddInfo("quicktime:microsoft:video::name", "Camera Model", "?");
            AddInfo("quicktime:microsoft:video::name", "Channels", "?");
            AddInfo("quicktime:microsoft:video::name", "Comment", "?");
            AddInfo("quicktime:microsoft:video::name", "Content Distributor Duration", "?");
            AddInfo("quicktime:microsoft:video::name", "Copyright", "?");
            AddInfo("quicktime:microsoft:video::name", "Count", "?");
            AddInfo("quicktime:microsoft:video::name", "Current Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "DLNA Server UDN", "?");
            AddInfo("quicktime:microsoft:video::name", "DLNA Source URI", "?");
            AddInfo("quicktime:microsoft:video::name", "DRM Individualized Version", "?");
            AddInfo("quicktime:microsoft:video::name", "DRM Key ID", "?");
            AddInfo("quicktime:microsoft:video::name", "DTCPIP Host", "?");
            AddInfo("quicktime:microsoft:video::name", "DTCPIP Port", "?");
            AddInfo("quicktime:microsoft:video::name", "DVDID", "?");
            AddInfo("quicktime:microsoft:video::name", "Description", "?");
            AddInfo("quicktime:microsoft:video::name", "Display Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Duration", "?");
            AddInfo("quicktime:microsoft:video::name", "Event", "?");
            AddInfo("quicktime:microsoft:video::name", "File Size", "?");
            AddInfo("quicktime:microsoft:video::name", "File Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Format Tag", "?");
            AddInfo("quicktime:microsoft:video::name", "Four CC", "?");
            AddInfo("quicktime:microsoft:video::name", "Frame Rate", "?");
            AddInfo("quicktime:microsoft:video::name", "Frequency", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Network Feed", "?");
            AddInfo("quicktime:microsoft:video::name", "Is VBR", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Protected", "?");
            AddInfo("quicktime:microsoft:video::name", "Lead Performer", "?");
            AddInfo("quicktime:microsoft:video::name", "Library ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Library Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Location", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Content Types", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Modified By", "?");
            AddInfo("quicktime:microsoft:video::name", "More Info", "?");
            AddInfo("quicktime:microsoft:video::name", "Part Of Set", "?");
            AddInfo("quicktime:microsoft:video::name", "Peak Value", "?");
            AddInfo("quicktime:microsoft:video::name", "Pixel Aspect Ratio X", "?");
            AddInfo("quicktime:microsoft:video::name", "Pixel Aspect Ratio Y", "?");
            AddInfo("quicktime:microsoft:video::name", "Playlist Index", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider Logo URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Radio Band", "?");
            AddInfo("quicktime:microsoft:video::name", "Radio Format", "?");
            AddInfo("quicktime:microsoft:video::name", "Rating Org", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time Year", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time Year Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time Year Month Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date Year", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date Year Month", "?");
            AddInfo("quicktime:microsoft:video::name", "Release Date Year Month Day", "?");
            AddInfo("quicktime:microsoft:video::name", "Request State", "?");
            AddInfo("quicktime:microsoft:video::name", "Shadow File Path", "?");
            AddInfo("quicktime:microsoft:video::name", "Source URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Subject", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 01", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 02", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 03", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 04", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 05", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 06", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 07", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 08", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 09", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 10", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 11", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 12", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 13", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 14", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 15", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync 16", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync Only", "?");
            AddInfo("quicktime:microsoft:video::name", "Sync State", "?");
            AddInfo("quicktime:microsoft:video::name", "Temporary", "?");
            AddInfo("quicktime:microsoft:video::name", "Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Title Sort Order", "?");
            AddInfo("quicktime:microsoft:video::name", "Total Duration", "?");
            AddInfo("quicktime:microsoft:video::name", "Tracking ID", "?");
            AddInfo("quicktime:microsoft:video::name", "User Custom 1", "?");
            AddInfo("quicktime:microsoft:video::name", "User Custom 2", "?");
            AddInfo("quicktime:microsoft:video::name", "User Effective Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "User Last Played Time", "?");
            AddInfo("quicktime:microsoft:video::name", "User Play Count", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Afternoon", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Evening", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Morning", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Night", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Weekday", "?");
            AddInfo("quicktime:microsoft:video::name", "User Playcount Weekend", "?");
            AddInfo("quicktime:microsoft:video::name", "User Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "User Service Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Format", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Cover URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Beats Per Minute", "?");
            AddInfo("quicktime:microsoft:video::name", "Category", "?");
            AddInfo("quicktime:microsoft:video::name", "Composer", "?");
            AddInfo("quicktime:microsoft:video::name", "Conductor", "?");
            AddInfo("quicktime:microsoft:video::name", "Content Distributor", "?");
            AddInfo("quicktime:microsoft:video::name", "Content Distributor Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Content Group Description", "?");
            AddInfo("quicktime:microsoft:video::name", "Director", "?");
            AddInfo("quicktime:microsoft:video::name", "Encoding Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Genre", "?");
            AddInfo("quicktime:microsoft:video::name", "Genre ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Initial Key", "?");
            AddInfo("quicktime:microsoft:video::name", "Language", "?");
            AddInfo("quicktime:microsoft:video::name", "Lyrics", "?");
            AddInfo("quicktime:microsoft:video::name", "MCDI", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Class Primary ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Class Secondary ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Original Broadcast Date Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Original Channel", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Station Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Mood", "?");
            AddInfo("quicktime:microsoft:video::name", "Original Album Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Original Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Original Lyricist", "?");
            AddInfo("quicktime:microsoft:video::name", "Parental Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "Part Of Set", "?");
            AddInfo("quicktime:microsoft:video::name", "Period", "?");
            AddInfo("quicktime:microsoft:video::name", "Producer", "?");
            AddInfo("quicktime:microsoft:video::name", "Protection Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "Provider Style", "?");
            AddInfo("quicktime:microsoft:video::name", "Publisher", "?");
            AddInfo("quicktime:microsoft:video::name", "Shared User Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "Subtitle", "?");
            AddInfo("quicktime:microsoft:video::name", "Subtitle Description", "?");
            AddInfo("quicktime:microsoft:video::name", "Subscription Content ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Track Number", "?");
            AddInfo("quicktime:microsoft:video::name", "Unique File Identifier", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Frame Rate", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Height", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Width", "?");
            AddInfo("quicktime:microsoft:video::name", "WM Collection Group ID", "?");
            AddInfo("quicktime:microsoft:video::name", "WM Collection ID", "?");
            AddInfo("quicktime:microsoft:video::name", "WM Content ID", "?");
            AddInfo("quicktime:microsoft:video::name", "WM Shadow File Source DRM Type", "?");
            AddInfo("quicktime:microsoft:video::name", "WM Shadow File Source File Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Writer", "?");
            AddInfo("quicktime:microsoft:video::name", "Year", "?");
            AddInfo("quicktime:microsoft:video::name", "Chapter Num", "?");
            AddInfo("quicktime:microsoft:video::name", "Title Num", "?");
            AddInfo("quicktime:microsoft:video::name", "Resources", "?");
            AddInfo("quicktime:microsoft:video::name", "Complete", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Country-Region", "?");
            AddInfo("quicktime:microsoft:video::name", "Task Owner", "?");
            AddInfo("quicktime:microsoft:video::name", "Max Aperture", "?");
            AddInfo("quicktime:microsoft:video::name", "Optional Attendees", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Street", "?");
            AddInfo("quicktime:microsoft:video::name", "Required Attendee Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "Sender Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Description", "?");
            AddInfo("quicktime:microsoft:video::name", "File Version", "?");
            AddInfo("quicktime:microsoft:video::name", "Product Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Product Version", "?");
            AddInfo("quicktime:microsoft:video::name", "Legal Trademarks", "?");
            AddInfo("quicktime:microsoft:video::name", "Sender Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Parental Rating Reason", "?");
            AddInfo("quicktime:microsoft:video::name", "First Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Event", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Imported", "?");
            AddInfo("quicktime:microsoft:video::name", "Camera Maker", "?");
            AddInfo("quicktime:microsoft:video::name", "Camera Model", "?");
            AddInfo("quicktime:microsoft:video::name", "Orientation", "?");
            AddInfo("quicktime:microsoft:video::name", "Exposure Time", "?");
            AddInfo("quicktime:microsoft:video::name", "F-stop", "?");
            AddInfo("quicktime:microsoft:video::name", "Exposure Program", "?");
            AddInfo("quicktime:microsoft:video::name", "ISO Speed", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Picture Taken", "?");
            AddInfo("quicktime:microsoft:video::name", "Exposure Bias", "?");
            AddInfo("quicktime:microsoft:video::name", "Subject Distance", "?");
            AddInfo("quicktime:microsoft:video::name", "Metering Mode", "?");
            AddInfo("quicktime:microsoft:video::name", "Light Source", "?");
            AddInfo("quicktime:microsoft:video::name", "Flash Mode", "?");
            AddInfo("quicktime:microsoft:video::name", "Focal Length", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Primary Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Cell Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Birthday", "?");
            AddInfo("quicktime:microsoft:video::name", "Primary E-mail", "?");
            AddInfo("quicktime:microsoft:video::name", "Job Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Home City", "?");
            AddInfo("quicktime:microsoft:video::name", "Personal Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Office Location", "?");
            AddInfo("quicktime:microsoft:video::name", "Given Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Middle Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Suffix", "?");
            AddInfo("quicktime:microsoft:video::name", "Nickname", "?");
            AddInfo("quicktime:microsoft:video::name", "Postal Code", "?");
            AddInfo("quicktime:microsoft:video::name", "Station Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Division", "?");
            AddInfo("quicktime:microsoft:video::name", "Kinds", "?");
            AddInfo("quicktime:microsoft:video::name", "Client ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Type", "?");
            AddInfo("quicktime:microsoft:video::name", "File Count", "?");
            AddInfo("quicktime:microsoft:video::name", "Total File Size", "?");
            AddInfo("quicktime:microsoft:video::name", "Computer", "?");
            AddInfo("quicktime:microsoft:video::name", "Perceived Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Duration", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Acquired", "?");
            AddInfo("quicktime:microsoft:video::name", "Media Created", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Recurring", "?");
            AddInfo("quicktime:microsoft:video::name", "Incomplete", "?");
            AddInfo("quicktime:microsoft:video::name", "E-mail 2", "?");
            AddInfo("quicktime:microsoft:video::name", "Project", "?");
            AddInfo("quicktime:microsoft:video::name", "Gender", "?");
            AddInfo("quicktime:microsoft:video::name", "Due Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Business City", "?");
            AddInfo("quicktime:microsoft:video::name", "Windows File Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Archived", "?");
            AddInfo("quicktime:microsoft:video::name", "Business State Or Province", "?");
            AddInfo("quicktime:microsoft:video::name", "Broadcast Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Color", "?");
            AddInfo("quicktime:microsoft:video::name", "Start Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Saturation", "?");
            AddInfo("quicktime:microsoft:video::name", "Search Ranking", "?");
            AddInfo("quicktime:microsoft:video::name", "Other Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Auto Summary", "?");
            AddInfo("quicktime:microsoft:video::name", "Summary", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Home Page", "?");
            AddInfo("quicktime:microsoft:video::name", "Genre", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Artist", "?");
            AddInfo("quicktime:microsoft:video::name", "Initial Key", "?");
            AddInfo("quicktime:microsoft:video::name", "Beats-per-minute", "?");
            AddInfo("quicktime:microsoft:video::name", "Conductors", "?");
            AddInfo("quicktime:microsoft:video::name", "Part Of Set", "?");
            AddInfo("quicktime:microsoft:video::name", "Subtitle", "?");
            AddInfo("quicktime:microsoft:video::name", "Mood", "?");
            AddInfo("quicktime:microsoft:video::name", "Album Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Year", "?");
            AddInfo("quicktime:microsoft:video::name", "Track Number", "?");
            AddInfo("quicktime:microsoft:video::name", "Free-busy Status", "?");
            AddInfo("quicktime:microsoft:video::name", "URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Description", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Visited", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Deleted", "?");
            AddInfo("quicktime:microsoft:video::name", "Has Flag", "?");
            AddInfo("quicktime:microsoft:video::name", "Hobbies", "?");
            AddInfo("quicktime:microsoft:video::name", "Full Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Street", "?");
            AddInfo("quicktime:microsoft:video::name", "Dimensions", "?");
            AddInfo("quicktime:microsoft:video::name", "Untitled 0", "?");
            AddInfo("quicktime:microsoft:video::name", "Untitled 1", "?");
            AddInfo("quicktime:microsoft:video::name", "Horizontal Resolution", "?");
            AddInfo("quicktime:microsoft:video::name", "Vertical Resolution", "?");
            AddInfo("quicktime:microsoft:video::name", "Bit Depth", "?");
            AddInfo("quicktime:microsoft:video::name", "Duration", "?");
            AddInfo("quicktime:microsoft:video::name", "Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "Audio Sample Rate", "?");
            AddInfo("quicktime:microsoft:video::name", "Audio Sample Size", "?");
            AddInfo("quicktime:microsoft:video::name", "Channels", "?");
            AddInfo("quicktime:microsoft:video::name", "Video Compression", "?");
            AddInfo("quicktime:microsoft:video::name", "Frame Width", "?");
            AddInfo("quicktime:microsoft:video::name", "Frame Height", "?");
            AddInfo("quicktime:microsoft:video::name", "Total Bitrate", "?");
            AddInfo("quicktime:microsoft:video::name", "Frame Rate", "?");
            AddInfo("quicktime:microsoft:video::name", "Data Rate", "?");
            AddInfo("quicktime:microsoft:video::name", "Copyright", "?");
            AddInfo("quicktime:microsoft:video::name", "Composers", "?");
            AddInfo("quicktime:microsoft:video::name", "Directors", "?");
            AddInfo("quicktime:microsoft:video::name", "Parental Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "Producers", "?");
            AddInfo("quicktime:microsoft:video::name", "Writers", "?");
            AddInfo("quicktime:microsoft:video::name", "Publisher", "?");
            AddInfo("quicktime:microsoft:video::name", "Period", "?");
            AddInfo("quicktime:microsoft:video::name", "User Web URL", "?");
            AddInfo("quicktime:microsoft:video::name", "Encoded By", "?");
            AddInfo("quicktime:microsoft:video::name", "Rating", "?");
            AddInfo("quicktime:microsoft:video::name", "E-mail 3", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Fax", "?");
            AddInfo("quicktime:microsoft:video::name", "Source", "?");
            AddInfo("quicktime:microsoft:video::name", "Flag Color", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Program Mode", "?");
            AddInfo("quicktime:microsoft:video::name", "Offline Status", "?");
            AddInfo("quicktime:microsoft:video::name", "Closed Captioning", "?");
            AddInfo("quicktime:microsoft:video::name", "Rerun", "?");
            AddInfo("quicktime:microsoft:video::name", "SAP", "?");
            AddInfo("quicktime:microsoft:video::name", "Episode Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Program Description", "?");
            AddInfo("quicktime:microsoft:video::name", "Station Call Sign", "?");
            AddInfo("quicktime:microsoft:video::name", "Channel Number", "?");
            AddInfo("quicktime:microsoft:video::name", "Other City", "?");
            AddInfo("quicktime:microsoft:video::name", "Other State Or Province", "?");
            AddInfo("quicktime:microsoft:video::name", "Profession", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Completed", "?");
            AddInfo("quicktime:microsoft:video::name", "Reminder Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Organizer Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Home PO Box", "?");
            AddInfo("quicktime:microsoft:video::name", "E-mail List", "?");
            AddInfo("quicktime:microsoft:video::name", "Company Main Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Postal Code", "?");
            AddInfo("quicktime:microsoft:video::name", "Other PO Box", "?");
            AddInfo("quicktime:microsoft:video::name", "Other Country-Region", "?");
            AddInfo("quicktime:microsoft:video::name", "Last Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Car Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Fax", "?");
            AddInfo("quicktime:microsoft:video::name", "Entry Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Other Postal Code", "?");
            AddInfo("quicktime:microsoft:video::name", "Label", "?");
            AddInfo("quicktime:microsoft:video::name", "Home Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Assistants Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Anniversary", "?");
            AddInfo("quicktime:microsoft:video::name", "Owner", "?");
            AddInfo("quicktime:microsoft:video::name", "Space Free", "?");
            AddInfo("quicktime:microsoft:video::name", "Total Size", "?");
            AddInfo("quicktime:microsoft:video::name", "Space Used", "?");
            AddInfo("quicktime:microsoft:video::name", "Priority", "?");
            AddInfo("quicktime:microsoft:video::name", "Has Attachments", "?");
            AddInfo("quicktime:microsoft:video::name", "Spouse", "?");
            AddInfo("quicktime:microsoft:video::name", "Focal Length 35mm", "?");
            AddInfo("quicktime:microsoft:video::name", "Recording Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Completed", "?");
            AddInfo("quicktime:microsoft:video::name", "Offline Availability", "?");
            AddInfo("quicktime:microsoft:video::name", "Organizer Name", "?");
            AddInfo("quicktime:microsoft:video::name", "TTY-TTD Phone", "?");
            AddInfo("quicktime:microsoft:video::name", "Protected", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Country-Region", "?");
            AddInfo("quicktime:microsoft:video::name", "Required Attendees", "?");
            AddInfo("quicktime:microsoft:video::name", "Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Size", "?");
            AddInfo("quicktime:microsoft:video::name", "Attributes", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Modified", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Created", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Accessed", "?");
            AddInfo("quicktime:microsoft:video::name", "Folder Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Link Target", "?");
            AddInfo("quicktime:microsoft:video::name", "Link Status", "?");
            AddInfo("quicktime:microsoft:video::name", "Business PO Box", "?");
            AddInfo("quicktime:microsoft:video::name", "To Do Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Callback Number", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Online", "?");
            AddInfo("quicktime:microsoft:video::name", "Mailing Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Telex", "?");
            AddInfo("quicktime:microsoft:video::name", "End Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Home State Or Province", "?");
            AddInfo("quicktime:microsoft:video::name", "City", "?");
            AddInfo("quicktime:microsoft:video::name", "E-mail Display Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Assistants Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Creator", "?");
            AddInfo("quicktime:microsoft:video::name", "Exif Version", "?");
            AddInfo("quicktime:microsoft:video::name", "Billing Information", "?");
            AddInfo("quicktime:microsoft:video::name", "Children", "?");
            AddInfo("quicktime:microsoft:video::name", "Participants", "?");
            AddInfo("quicktime:microsoft:video::name", "Optional Attendee Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "Company", "?");
            AddInfo("quicktime:microsoft:video::name", "Category", "?");
            AddInfo("quicktime:microsoft:video::name", "Content Type", "?");
            AddInfo("quicktime:microsoft:video::name", "Status", "?");
            AddInfo("quicktime:microsoft:video::name", "Language", "?");
            AddInfo("quicktime:microsoft:video::name", "Slides", "?");
            AddInfo("quicktime:microsoft:video::name", "Pager", "?");
            AddInfo("quicktime:microsoft:video::name", "IM Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "Status", "?");
            AddInfo("quicktime:microsoft:video::name", "Folder", "?");
            AddInfo("quicktime:microsoft:video::name", "Conversation ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Street", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Released", "?");
            AddInfo("quicktime:microsoft:video::name", "PO Box", "?");
            AddInfo("quicktime:microsoft:video::name", "Contact Names", "?");
            AddInfo("quicktime:microsoft:video::name", "Document ID", "?");
            AddInfo("quicktime:microsoft:video::name", "Lens Model", "?");
            AddInfo("quicktime:microsoft:video::name", "Business Postal Code", "?");
            AddInfo("quicktime:microsoft:video::name", "Read Status", "?");
            AddInfo("quicktime:microsoft:video::name", "Importance", "?");
            AddInfo("quicktime:microsoft:video::name", "Flag Status", "?");
            AddInfo("quicktime:microsoft:video::name", "From Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "From Names", "?");
            AddInfo("quicktime:microsoft:video::name", "Store", "?");
            AddInfo("quicktime:microsoft:video::name", "To Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "To Names", "?");
            AddInfo("quicktime:microsoft:video::name", "Webpage", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Sent", "?");
            AddInfo("quicktime:microsoft:video::name", "Bcc Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Received", "?");
            AddInfo("quicktime:microsoft:video::name", "Attachments", "?");
            AddInfo("quicktime:microsoft:video::name", "Bcc Names", "?");
            AddInfo("quicktime:microsoft:video::name", "Cc Addresses", "?");
            AddInfo("quicktime:microsoft:video::name", "Cc Names", "?");
            AddInfo("quicktime:microsoft:video::name", "Folder Path", "?");
            AddInfo("quicktime:microsoft:video::name", "Path", "?");
            AddInfo("quicktime:microsoft:video::name", "Account Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Country-Region", "?");
            AddInfo("quicktime:microsoft:video::name", "Lens Maker", "?");
            AddInfo("quicktime:microsoft:video::name", "White Balance", "?");
            AddInfo("quicktime:microsoft:video::name", "Shared", "?");
            AddInfo("quicktime:microsoft:video::name", "Shared With", "?");
            AddInfo("quicktime:microsoft:video::name", "State Or Province", "?");
            AddInfo("quicktime:microsoft:video::name", "File As", "?");
            AddInfo("quicktime:microsoft:video::name", "Is Attachment", "?");
            AddInfo("quicktime:microsoft:video::name", "Total Editing Time", "?");
            AddInfo("quicktime:microsoft:video::name", "Last Printed", "?");
            AddInfo("quicktime:microsoft:video::name", "Untitled 2", "?");
            AddInfo("quicktime:microsoft:video::name", "Date Last Saved", "?");
            AddInfo("quicktime:microsoft:video::name", "Pages", "?");
            AddInfo("quicktime:microsoft:video::name", "Word Count", "?");
            AddInfo("quicktime:microsoft:video::name", "Program Name", "?");
            AddInfo("quicktime:microsoft:video::name", "Title", "?");
            AddInfo("quicktime:microsoft:video::name", "Subject", "?");
            AddInfo("quicktime:microsoft:video::name", "Author", "?");
            AddInfo("quicktime:microsoft:video::name", "Keywords", "?");
            AddInfo("quicktime:microsoft:video::name", "Comments", "?");
            AddInfo("quicktime:microsoft:video::name", "Contributors", "?");
            AddInfo("quicktime:microsoft:video::name", "Initials", "?");
            AddInfo("quicktime:microsoft:video::name", "Location", "?");
            AddInfo("quicktime:microsoft:video::name", "Date", "?");
            AddInfo("quicktime:microsoft:video::name", "Sensitivity", "?");
            AddInfo("quicktime:microsoft:video::name", "E-mail Address", "?");
            AddInfo("quicktime:microsoft:video::name", "Department", "?");
            AddInfo("quicktime:microsoft:video::name", "Mileage", "?");
            AddInfo("quicktime:microsoft:video::name", "Other Street", "?");
        }


        static void InitTable404()
        {
            AddInfo("makernotes:minolta:camera::name", "AF Sensor Active", "int8u");
            AddInfo("makernotes:minolta:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Top-right", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Bottom-right", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Bottom", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Middle Horizontal", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Center Vertical", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Top", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Top-left", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Bottom-left", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Focus Locked", "int8u");
            AddInfo("makernotes:minolta:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:minolta:camera::name", "AF Mode", "int8u");
            AddInfo("makernotes:minolta:camera::name", "AF Status Left", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Center Horizontal", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Status Right", "int16s");
            AddInfo("makernotes:minolta:camera::name", "AF Area Mode", "int8u");
        }


        static void InitTable405()
        {
            AddInfo("makernotes:minolta:camera::name", "Exposure Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Flash Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "White Balance", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Image Size", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Quality", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Drive Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Metering Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "ISO", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Macro Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Digital Zoom", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Bracket Step", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Interval Length", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Interval Number", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Focus Distance", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Flash Fired", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Date", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Time", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Max Aperture", "int32u");
            AddInfo("makernotes:minolta:camera::name", "File Number Memory", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Last File Number", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Balance Red", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Balance Green", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Balance Blue", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Saturation", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Contrast", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Sharpness", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Subject Program", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Compensation", "int32u");
            AddInfo("makernotes:minolta:camera::name", "ISO Setting", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Model ID", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Interval Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Folder Name", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Filter", "int32u");
            AddInfo("makernotes:minolta:camera::name", "BW Filter", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Internal Flash", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Brightness", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Spot Focus Point X", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Spot Focus Point Y", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Wide Focus Zone", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Focus Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Focus Area", "int32u");
            AddInfo("makernotes:minolta:camera::name", "DEC Position", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Profile", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Data Imprint", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Flash Metering", "int32u");
        }


        static void InitTable406()
        {
            AddInfo("makernotes:minolta:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Image Size", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Quality", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int16u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Free Memory Card Images", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Hue Adjustment", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Free Memory Card Images", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Picture Finish", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Number", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int16u");
        }


        static void InitTable407()
        {
            AddInfo("makernotes:minolta:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Image Size", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Quality", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AF Points", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Free Memory Card Images", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Hue Adjustment", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Free Memory Card Images", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Number", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Number 2", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Zone Matching On", "int16u");
        }


        static void InitTable408()
        {
            AddInfo("makernotes:minolta:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "High Speed Sync", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Shutter Speed Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Aperture Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int16u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Drive Mode 2", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AF Point Selected", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Comp. Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Zone Matching Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Dynamic Range Optimizer", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Metering", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Priority Setup Shutter Release", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Self Timer Time", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Continuous Bracketing", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Single Frame Bracketing", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance Bracketing", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Preset White Balance", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Custom WB Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Dynamic Range Optimizer Setting", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Free Memory Card Images", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Custom WB Red Level", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Custom WB Green Level", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Custom WB Blue Level", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Custom WB Error", "int16u");
            AddInfo("makernotes:minolta:camera::name", "White Balance Fine Tune", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Compensation Filter", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Sony Image Size", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Sony Quality", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Instant Playback Time", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Instant Playback Setup", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Eye Start AF", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Red Eye Reduction", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Default", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Auto Bracket Order", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Focus Hold Button", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AEL Button", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Control Dial Set", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AF Assist", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Card Shutter Lock", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Lens Shutter Lock", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AF Area Illumination", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Monitor Display Off", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Record Display", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Play Display", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Indicator", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AEL Exposure Indicator", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Bracketing Indicator Last", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Metering Off Scale Indicator", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Indicator", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Indicator Next", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Indicator Last", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Focus Mode Switch", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Flash Type", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AE Lock", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Compensation Filter", "int16s");
            AddInfo("makernotes:minolta:camera::name", "Battery State", "int16u");
        }


        static void InitTable409()
        {
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int16u");
        }


        static void InitTable410()
        {
            AddInfo("makernotes:minolta:camera::name", "Make", "string");
            AddInfo("makernotes:minolta:camera::name", "Software Version", "string");
        }


        static void InitTable411()
        {
            AddInfo("makernotes:minolta:camera::name", "Make", "string");
            AddInfo("makernotes:minolta:camera::name", "Model Type", "string");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:minolta:camera::name", "Focal Length", "rational64u");
        }


        static void InitTable412()
        {
            AddInfo("makernotes:minolta:camera::name", "Make", "string");
            AddInfo("makernotes:minolta:camera::name", "Model Type", "string");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:minolta:camera::name", "Focal Length", "rational64u");
        }


        static void InitTable413()
        {
            AddInfo("makernotes:minolta:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "?");
            AddInfo("makernotes:minolta:camera::name", "Compressed Image Size", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Preview Image", "undef");
            AddInfo("makernotes:minolta:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Scene Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Mode", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Quality", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Quality", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Image Size", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Compensation", "rational64s");
            AddInfo("makernotes:minolta:camera::name", "Teleconverter", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Raw And Jpg Recording", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Zone Matching", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Temperature", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Lens Type", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Color Compensation Filter", "int32s");
            AddInfo("makernotes:minolta:camera::name", "White Balance Fine Tune", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int32u");
            AddInfo("makernotes:minolta:camera::name", "White Balance", "int32u");
            AddInfo("makernotes:minolta:camera::name", "Minolta Camera Settings 2", "?");
        }


        static void InitTable414()
        {
            AddInfo("makernotes:minolta:camera::name", "Drive Mode", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Rotation", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization Setting", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Dynamic Range Optimizer Mode", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation Mode", "int8u");
            AddInfo("makernotes:minolta:camera::name", "WB Bracket Shot Number", "int8u");
            AddInfo("makernotes:minolta:camera::name", "White Balance Bracketing", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Bracket Shot Number", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Flash Function", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Average LV", "int16u");
            AddInfo("makernotes:minolta:camera::name", "Frame Number", "int8u");
            AddInfo("makernotes:minolta:camera::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB GBRG Levels", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Tungsten", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Tungsten", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Daylight", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Daylight", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Cloudy", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Cloudy", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Fluorescent", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Fluorescent", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Shade", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Shade", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Level 6500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Level 6500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Level Custom", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Level Custom", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Level 3500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Level 3500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Kelvin", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Kelvin", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Cool White F", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Tungsten", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Daylight", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Cloudy", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Flash", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Red Levels Fluorescent", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB Blue Levels Fluorescent", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Shade", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels 6500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Custom", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels 3500K", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RB Levels Daylight", "int16u");
            AddInfo("makernotes:minolta:camera::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:minolta:camera::name", "AE Metering Segments", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Measured LV", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Brightness Value", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Tiff Metering Image", "undef");
            AddInfo("makernotes:minolta:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:minolta:camera::name", "ISO", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Focus Distance", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Lens Type", "int16urev");
            AddInfo("makernotes:minolta:camera::name", "Exposure Compensation", "int8s");
            AddInfo("makernotes:minolta:camera::name", "Flash Exposure Compensation", "int8s");
            AddInfo("makernotes:minolta:camera::name", "Image Stabilization", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Brightness Value", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Max Aperture", "int8u");
            AddInfo("makernotes:minolta:camera::name", "F Number", "int8u");
            AddInfo("makernotes:minolta:camera::name", "Internal Serial Number", "string");
        }


        static void InitTable415()
        {
            AddInfo("makernotes:minoltaraw:camera::name", "Firmware ID", "string");
            AddInfo("makernotes:minoltaraw:camera::name", "Sensor Height", "int16u");
            AddInfo("makernotes:minoltaraw:camera::name", "Sensor Width", "int16u");
            AddInfo("makernotes:minoltaraw:camera::name", "Image Height", "int16u");
            AddInfo("makernotes:minoltaraw:camera::name", "Image Width", "int16u");
            AddInfo("makernotes:minoltaraw:camera::name", "Raw Depth", "int8u");
            AddInfo("makernotes:minoltaraw:camera::name", "Bit Depth", "int8u");
            AddInfo("makernotes:minoltaraw:camera::name", "Storage Method", "int8u");
            AddInfo("makernotes:minoltaraw:camera::name", "Bayer Pattern", "int8u");
        }


        static void InitTable416()
        {
            AddInfo("makernotes:minoltaraw:image::name", "Saturation", "int8s");
            AddInfo("makernotes:minoltaraw:image::name", "Contrast", "int8s");
            AddInfo("makernotes:minoltaraw:image::name", "Sharpness", "int8s");
            AddInfo("makernotes:minoltaraw:image::name", "WB Mode", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Program Mode", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "ISO Setting", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Mode", "int32u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Mode", "int32u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Tungsten", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Daylight", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Cloudy", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Cool White F", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Flash", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Unknown", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Shade", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Daylight F", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels Day White F", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "WB RB Levels White F", "int16u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Filter", "int8s");
            AddInfo("makernotes:minoltaraw:image::name", "BW Filter", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Zone Matching", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Hue", "int8s");
            AddInfo("makernotes:minoltaraw:image::name", "Color Temperature", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Zone Matching", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Temperature", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Filter", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Temperature", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Color Filter", "int8u");
            AddInfo("makernotes:minoltaraw:image::name", "Raw Data Length", "int32u");
        }


        static void InitTable417()
        {
            AddInfo("makernotes:minoltaraw:camera::name", "WB Scale", "int8u");
            AddInfo("makernotes:minoltaraw:camera::name", "WB GBRG Levels", "int16u");
            AddInfo("makernotes:minoltaraw:camera::name", "WB RGGB Levels", "int16u");
        }


        static void InitTable418()
        {
            AddInfo("makernotes:nikon:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Points In Focus", "int16u");
        }


        static void InitTable419()
        {
            AddInfo("makernotes:nikon:camera::name", "AF Info 2 Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Contrast Detect AF", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Phase Detect AF", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Primary AF Point", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Points Used", "undef");
            AddInfo("makernotes:nikon:camera::name", "AF Image Width", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Image Height", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Area X Position", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Area Y Position", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Area Width", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Area Height", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Contrast Detect AF In Focus", "int8u");
        }


        static void InitTable420()
        {
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune Index", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune Adj", "int8s");
        }


        static void InitTable421()
        {
            AddInfo("makernotes:nikon:video::name", "Thumbnail Image", "?");
            AddInfo("makernotes:nikon:video::name", "Preview Image", "?");
        }


        static void InitTable422()
        {
            AddInfo("makernotes:nikon:camera::name", "Make", "string");
            AddInfo("makernotes:nikon:camera::name", "Model", "string");
            AddInfo("makernotes:nikon:camera::name", "Software", "undef");
            AddInfo("makernotes:nikon:camera::name", "Equipment", "string");
            AddInfo("makernotes:nikon:camera::name", "Orientation", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Exposure Time", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture Value", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x000d", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x000e", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "X Resolution", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Y Resolution", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Resolution Unit", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Date/Time Original", "string");
            AddInfo("makernotes:nikon:camera::name", "Create Date", "string");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x0015", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Duration", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x0017", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Focus Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x0019", "int32s");
            AddInfo("makernotes:nikon:camera::name", "Digital Zoom", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x001c", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Color Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "Sharpness", "string");
            AddInfo("makernotes:nikon:camera::name", "White Balance", "string");
            AddInfo("makernotes:nikon:camera::name", "Noise Reduction", "string");
            AddInfo("makernotes:nikon:camera::name", "Nikon AVI Tags 0x801a", "int32s");
        }


        static void InitTable423()
        {
            AddInfo("makernotes:nikon:video::name", "Maker Note Type", "string");
            AddInfo("makernotes:nikon:video::name", "Maker Note Version", "int8u");
        }


        static void InitTable424()
        {
            AddInfo("makernotes:nikon:location::name", "Barometer Info Version", "undef");
            AddInfo("makernotes:nikon:location::name", "Altitude", "int32s");
        }


        static void InitTable425()
        {
            AddInfo("makernotes:nikon:camera::name", "IFD0 Offset", "?");
            AddInfo("makernotes:nikon:camera::name", "Preview IFD Offset", "?");
            AddInfo("makernotes:nikon:camera::name", "Sub IFD Offset", "?");
        }


        static void InitTable426()
        {
            AddInfo("makernotes:nikon:image::name", "Output Image Width", "int32u");
            AddInfo("makernotes:nikon:image::name", "Output Image Height", "int32u");
            AddInfo("makernotes:nikon:image::name", "Output Resolution", "int32u");
        }


        static void InitTable427()
        {
            AddInfo("makernotes:nikon:camera::name", "WB RBGG Levels", "int16u");
        }


        static void InitTable428()
        {
            AddInfo("makernotes:nikon:camera::name", "WB RGGB Levels", "int16u");
        }


        static void InitTable429()
        {
            AddInfo("makernotes:nikon:camera::name", "WB RGBG Levels", "int16u");
        }


        static void InitTable430()
        {
            AddInfo("makernotes:nikon:camera::name", "WB GRBG Levels", "int16u");
        }


        static void InitTable431()
        {
            AddInfo("makernotes:nikon:camera::name", "Red Balance", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Blue Balance", "int16u");
        }


        static void InitTable432()
        {
            AddInfo("makernotes:nikon:camera::name", "Color Balance Version", "undef");
        }


        static void InitTable433()
        {
            AddInfo("makernotes:nikon:camera::name", "Distortion Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Auto Distortion Control", "int8u");
        }


        static void InitTable434()
        {
            AddInfo("makernotes:nikon:image::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:nikon:image::name", "Faces Detected", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 8 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 9 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 10 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 11 Position", "int16u");
            AddInfo("makernotes:nikon:image::name", "Face 12 Position", "int16u");
        }


        static void InitTable435()
        {
            AddInfo("makernotes:nikon:image::name", "File Info Version", "undef");
            AddInfo("makernotes:nikon:image::name", "Directory Number", "int16u");
            AddInfo("makernotes:nikon:image::name", "File Number", "int16u");
        }


        static void InitTable436()
        {
            AddInfo("makernotes:nikon:camera::name", "Flash Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Flash Source", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Firmware", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Flags", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Commander Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash GN Distance", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Compensation", "int8s");
        }


        static void InitTable437()
        {
            AddInfo("makernotes:nikon:camera::name", "Flash Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Flash Source", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Firmware", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Flags", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Commander Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash GN Distance", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Compensation", "int8s");
        }


        static void InitTable438()
        {
            AddInfo("makernotes:nikon:camera::name", "Flash Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Flash Source", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Firmware", "int8u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Flags", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Commander Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash GN Distance", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Color Filter", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Control Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group A Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group B Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Output", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Flash Group C Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "External Flash Compensation", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Exposure Comp 3", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Flash Exposure Comp 4", "int8s");
        }


        static void InitTable439()
        {
            AddInfo("makernotes:nikon:camera::name", "Flash Info Version", "string");
        }


        static void InitTable440()
        {
            AddInfo("makernotes:nikonscan:image::name", "Digital GEM", "int32u");
        }


        static void InitTable441()
        {
            AddInfo("makernotes:nikon:location::name", "HDR Info Version", "string");
            AddInfo("makernotes:nikon:location::name", "HDR", "int8u");
            AddInfo("makernotes:nikon:location::name", "HDR Level", "int8u");
            AddInfo("makernotes:nikon:location::name", "HDR Smoothing", "int8u");
            AddInfo("makernotes:nikon:location::name", "HDR Level 2", "int8u");
        }


        static void InitTable442()
        {
            AddInfo("makernotes:nikon:camera::name", "ISO", "int8u");
            AddInfo("makernotes:nikon:camera::name", "ISO Expansion", "int16u");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "int8u");
            AddInfo("makernotes:nikon:camera::name", "ISO Expansion 2", "int16u");
        }


        static void InitTable443()
        {
            AddInfo("makernotes:nikon:camera::name", "Lens Data Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Lens ID Number", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens F Stops", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Min Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Min Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Max Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "MCU Version", "int8u");
        }


        static void InitTable444()
        {
            AddInfo("makernotes:nikon:camera::name", "Lens Data Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Exit Pupil Position", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Aperture", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focus Position", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focus Distance", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens ID Number", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens F Stops", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Min Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Min Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Max Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "MCU Version", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Effective Max Aperture", "int8u");
        }


        static void InitTable445()
        {
            AddInfo("makernotes:nikon:camera::name", "Lens Data Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Exit Pupil Position", "int8u");
            AddInfo("makernotes:nikon:camera::name", "AF Aperture", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focus Position", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focus Distance", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens ID Number", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens F Stops", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Min Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Focal Length", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Min Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Max Aperture At Max Focal", "int8u");
            AddInfo("makernotes:nikon:camera::name", "MCU Version", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Effective Max Aperture", "int8u");
        }


        static void InitTable446()
        {
            AddInfo("makernotes:nikon:camera::name", "Lens Data Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Lens Model", "string");
        }


        static void InitTable447()
        {
            AddInfo("makernotes:nikon:camera::name", "Lens Data Version", "string");
        }


        static void InitTable448()
        {
            AddInfo("makernotes:nikon:location::name", "Location Info Version", "undef");
            AddInfo("makernotes:nikon:location::name", "Text Encoding", "int8u");
            AddInfo("makernotes:nikon:location::name", "Country Code", "undef");
            AddInfo("makernotes:nikon:location::name", "POI Level", "int8u");
            AddInfo("makernotes:nikon:location::name", "Location", "undef");
        }


        static void InitTable449()
        {
            AddInfo("makernotes:nikon:camera::name", "Make", "string");
            AddInfo("makernotes:nikon:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:nikon:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:nikon:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:nikon:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Software", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO", "int16u");
        }


        static void InitTable450()
        {
            AddInfo("makernotes:nikon:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "ISO", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Color Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "Quality", "string");
            AddInfo("makernotes:nikon:camera::name", "White Balance", "string");
            AddInfo("makernotes:nikon:camera::name", "Sharpness", "string");
            AddInfo("makernotes:nikon:camera::name", "Focus Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "Flash Setting", "string");
            AddInfo("makernotes:nikon:camera::name", "Flash Type", "string");
            AddInfo("makernotes:nikon:camera::name", "White Balance Fine Tune", "int16s");
            AddInfo("makernotes:nikon:camera::name", "WB RB Levels", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Program Shift", "undef");
            AddInfo("makernotes:nikon:camera::name", "Exposure Difference", "undef");
            AddInfo("makernotes:nikon:camera::name", "ISO Selection", "string");
            AddInfo("makernotes:nikon:camera::name", "Data Dump", "?");
            AddInfo("makernotes:nikon:camera::name", "Flash Exposure Compensation", "undef");
            AddInfo("makernotes:nikon:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:nikon:camera::name", "NRW Data", "?");
            AddInfo("makernotes:nikon:camera::name", "Image Boundary", "int16u");
            AddInfo("makernotes:nikon:camera::name", "External Flash Exposure Comp", "undef");
            AddInfo("makernotes:nikon:camera::name", "Flash Exposure Bracket Value", "undef");
            AddInfo("makernotes:nikon:camera::name", "Exposure Bracket Value", "rational64s");
            AddInfo("makernotes:nikon:camera::name", "Image Processing", "string");
            AddInfo("makernotes:nikon:camera::name", "Crop Hi Speed", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Exposure Tuning", "undef");
            AddInfo("makernotes:nikon:camera::name", "Serial Number", "string");
            AddInfo("makernotes:nikon:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Image Authentication", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Active D-Lighting", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Data", "undef");
            AddInfo("makernotes:nikon:camera::name", "Vignette Control", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Black Level", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Image Adjustment", "string");
            AddInfo("makernotes:nikon:camera::name", "Tone Comp", "string");
            AddInfo("makernotes:nikon:camera::name", "Auxiliary Lens", "string");
            AddInfo("makernotes:nikon:camera::name", "Lens Type", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Lens", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Manual Focus Distance", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Digital Zoom", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Shooting Mode", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Lens F Stops", "undef");
            AddInfo("makernotes:nikon:camera::name", "Contrast Curve", "undef");
            AddInfo("makernotes:nikon:camera::name", "Color Hue", "string");
            AddInfo("makernotes:nikon:camera::name", "Scene Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "Light Source", "string");
            AddInfo("makernotes:nikon:camera::name", "Hue Adjustment", "int16s");
            AddInfo("makernotes:nikon:camera::name", "NEF Compression", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Saturation", "int16s");
            AddInfo("makernotes:nikon:camera::name", "Noise Reduction", "string");
            AddInfo("makernotes:nikon:camera::name", "NEF Linearization Table", "undef");
            AddInfo("makernotes:nikon:camera::name", "Raw Image Center", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Sensor Pixel Size", "rational64u");
            AddInfo("makernotes:nikon:camera::name", "Scene Assist", "string");
            AddInfo("makernotes:nikon:camera::name", "Retouch History", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Serial Number", "string");
            AddInfo("makernotes:nikon:camera::name", "Image Data Size", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Image Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Deleted Image Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Image Optimization", "string");
            AddInfo("makernotes:nikon:camera::name", "Saturation", "string");
            AddInfo("makernotes:nikon:camera::name", "Vari Program", "string");
            AddInfo("makernotes:nikon:camera::name", "Image Stabilization", "string");
            AddInfo("makernotes:nikon:camera::name", "AF Response", "string");
            AddInfo("makernotes:nikon:camera::name", "High ISO Noise Reduction", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Toning Effect", "string");
            AddInfo("makernotes:nikon:camera::name", "Power Up Time", "undef");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Data", "undef");
            AddInfo("makernotes:nikon:camera::name", "Nikon Capture Data", "undef");
            AddInfo("makernotes:nikon:camera::name", "Nikon Capture Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Nikon Capture Edit Versions", "undef");
            AddInfo("makernotes:nikon:camera::name", "Nikon Capture Edit Versions", "undef");
            AddInfo("makernotes:nikon:camera::name", "Nikon ICC Profile", "undef");
            AddInfo("makernotes:nikon:camera::name", "Nikon Capture Output", "undef");
            AddInfo("makernotes:nikon:camera::name", "NEF Bit Depth", "int16u");
        }


        static void InitTable451()
        {
            AddInfo("makernotes:nikon:camera::name", "Multi Exposure Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Multi Exposure Mode", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Multi Exposure Shots", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Multi Exposure Auto Gain", "int32u");
        }


        static void InitTable452()
        {
            AddInfo("makernotes:nikon:video::name", "Maker Note Version", "undef");
            AddInfo("makernotes:nikon:video::name", "Thumbnail Image", "undef");
            AddInfo("makernotes:nikon:video::name", "Preview Image", "undef");
        }


        static void InitTable453()
        {
            AddInfo("makernotes:nikon:camera::name", "Make", "?");
            AddInfo("makernotes:nikon:camera::name", "Model", "?");
            AddInfo("makernotes:nikon:camera::name", "Software", "?");
            AddInfo("makernotes:nikon:camera::name", "Create Date", "?");
            AddInfo("makernotes:nikon:camera::name", "Date/Time Original", "?");
            AddInfo("makernotes:nikon:camera::name", "Frame Count", "?");
            AddInfo("makernotes:nikon:camera::name", "Frame Rate", "?");
            AddInfo("makernotes:nikon:camera::name", "Frame Width", "?");
            AddInfo("makernotes:nikon:camera::name", "Frame Height", "?");
            AddInfo("makernotes:nikon:camera::name", "Audio Channels", "?");
            AddInfo("makernotes:nikon:camera::name", "Audio Bits Per Sample", "?");
            AddInfo("makernotes:nikon:camera::name", "Audio Sample Rate", "?");
            AddInfo("makernotes:nikon:camera::name", "Exposure Time", "?");
            AddInfo("makernotes:nikon:camera::name", "F Number", "?");
            AddInfo("makernotes:nikon:camera::name", "Exposure Program", "?");
            AddInfo("makernotes:nikon:camera::name", "Exposure Compensation", "?");
            AddInfo("makernotes:nikon:camera::name", "Metering Mode", "?");
            AddInfo("makernotes:nikon:camera::name", "Focal Length", "?");
            AddInfo("makernotes:nikon:camera::name", "Lens Model", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Version ID", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Latitude Ref", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Latitude", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Longitude Ref", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Longitude", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Altitude Ref", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Altitude", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Time Stamp", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Satellites", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Img Direction Ref", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Img Direction", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Map Datum", "?");
            AddInfo("makernotes:nikon:camera::name", "GPS Date Stamp", "?");
            AddInfo("makernotes:nikon:camera::name", "Maker Note Version", "?");
            AddInfo("makernotes:nikon:camera::name", "White Balance", "?");
            AddInfo("makernotes:nikon:camera::name", "Focus Mode", "string");
            AddInfo("makernotes:nikon:camera::name", "White Balance Fine Tune", "?");
            AddInfo("makernotes:nikon:camera::name", "Crop Hi Speed", "int16u");
            AddInfo("makernotes:nikon:camera::name", "Color Space", "?");
            AddInfo("makernotes:nikon:camera::name", "Lens Type", "?");
            AddInfo("makernotes:nikon:camera::name", "Lens", "?");
            AddInfo("makernotes:nikon:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Vari Program", "string");
            AddInfo("makernotes:nikon:camera::name", "High ISO Noise Reduction", "int16u");
        }


        static void InitTable454()
        {
            AddInfo("makernotes:nikon:camera::name", "Picture Control Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Name", "string");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Base", "string");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Adjust", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Picture Control Quick Adjust", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Sharpness", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Contrast", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Brightness", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Saturation", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Hue Adjustment", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Filter Effect", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Toning Effect", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Toning Saturation", "int8u");
        }


        static void InitTable455()
        {
            AddInfo("makernotes:previewifd:image::name", "Subfile Type", "?");
            AddInfo("makernotes:previewifd:image::name", "Compression", "?");
            AddInfo("makernotes:previewifd:image::name", "X Resolution", "?");
            AddInfo("makernotes:previewifd:image::name", "Y Resolution", "?");
            AddInfo("makernotes:previewifd:image::name", "Resolution Unit", "?");
            AddInfo("makernotes:previewifd:image::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:previewifd:image::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:previewifd:image::name", "Y Cb Cr Positioning", "?");
        }


        static void InitTable456()
        {
            AddInfo("makernotes:nikonscan:image::name", "Digital ROC", "int32u");
        }


        static void InitTable457()
        {
            AddInfo("makernotes:nikon:camera::name", "Retouch Info Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Retouch NEF Processing", "int8s");
        }


        static void InitTable458()
        {
            AddInfo("makernotes:nikonscan:image::name", "Film Type", "string");
            AddInfo("makernotes:nikonscan:image::name", "Multi Sample", "string");
            AddInfo("makernotes:nikonscan:image::name", "Bit Depth", "int16u");
            AddInfo("makernotes:nikonscan:image::name", "Master Gain", "rational64s");
            AddInfo("makernotes:nikonscan:image::name", "Color Gain", "rational64s");
            AddInfo("makernotes:nikonscan:image::name", "Scan Image Enhancer", "int32u");
            AddInfo("makernotes:nikonscan:image::name", "Digital ICE", "string");
            AddInfo("makernotes:nikonscan:image::name", "Digital DEE Shadow Adj", "int32u");
            AddInfo("makernotes:nikonscan:image::name", "Digital DEE Threshold", "int32u");
            AddInfo("makernotes:nikonscan:image::name", "Digital DEE Highlight Adj", "int32u");
        }


        static void InitTable459()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Distortion Control", "int8u");
            AddInfo("makernotes:nikon:camera::name", "VR 0x66", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Deleted Image Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "undef");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "int8u");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable460()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable461()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune Adj", "int16u");
        }


        static void InitTable462()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune Adj", "int16u");
            AddInfo("makernotes:nikon:camera::name", "AF Fine Tune Adj", "int16u");
        }


        static void InitTable463()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Image Area", "?");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable464()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable465()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Nikon Image Size", "?");
            AddInfo("makernotes:nikon:camera::name", "Image Quality", "?");
        }


        static void InitTable466()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Image Area", "?");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Pre Flash Return Strength", "?");
            AddInfo("makernotes:nikon:camera::name", "Nikon Image Size", "?");
            AddInfo("makernotes:nikon:camera::name", "Image Quality", "?");
        }


        static void InitTable467()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
        }


        static void InitTable468()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "?");
        }


        static void InitTable469()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Multi Selector Live View Mode", "?");
            AddInfo("makernotes:nikon:camera::name", "Roll Angle", "fixed32u");
            AddInfo("makernotes:nikon:camera::name", "Pitch Angle", "fixed32u");
            AddInfo("makernotes:nikon:camera::name", "Yaw Angle", "fixed32u");
        }


        static void InitTable470()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable471()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable472()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable473()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable474()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable475()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:nikon:camera::name", "Rotation", "?");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "?");
            AddInfo("makernotes:nikon:camera::name", "Flash Fired", "?");
            AddInfo("makernotes:nikon:camera::name", "Nikon Image Size", "?");
            AddInfo("makernotes:nikon:camera::name", "Image Quality", "?");
        }


        static void InitTable476()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Output External", "?");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Rate External", "?");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Count External", "?");
            AddInfo("makernotes:nikon:camera::name", "Flash Exposure Comp 2", "int8s");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Rate Built-in", "?");
            AddInfo("makernotes:nikon:camera::name", "Repeating Flash Count Built-in", "?");
            AddInfo("makernotes:nikon:camera::name", "Sequence Number", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable477()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Custom Settings Offset", "int32u");
            AddInfo("makernotes:nikon:camera::name", "D810 Metering Mode", "?");
        }


        static void InitTable478()
        {
            AddInfo("makernotes:nikon:camera::name", "Shot Info Version", "string");
            AddInfo("makernotes:nikon:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:nikon:camera::name", "ISO2", "?");
            AddInfo("makernotes:nikon:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable479()
        {
            AddInfo("makernotes:nikon:camera::name", "Quality", "?");
            AddInfo("makernotes:nikon:camera::name", "Color Mode", "?");
            AddInfo("makernotes:nikon:camera::name", "Image Adjustment", "?");
            AddInfo("makernotes:nikon:camera::name", "CCD Sensitivity", "?");
            AddInfo("makernotes:nikon:camera::name", "White Balance", "?");
            AddInfo("makernotes:nikon:camera::name", "Focus", "?");
            AddInfo("makernotes:nikon:camera::name", "Digital Zoom", "?");
            AddInfo("makernotes:nikon:camera::name", "Converter", "?");
        }


        static void InitTable480()
        {
            AddInfo("makernotes:nikon:camera::name", "Unknown Info Version", "undef");
        }


        static void InitTable481()
        {
            AddInfo("makernotes:nikon:camera::name", "Unknown Info 2 Version", "undef");
        }


        static void InitTable482()
        {
            AddInfo("makernotes:nikon:camera::name", "VR Info Version", "undef");
            AddInfo("makernotes:nikon:camera::name", "Vibration Reduction", "int8u");
            AddInfo("makernotes:nikon:camera::name", "VR Mode", "int8u");
        }


        static void InitTable483()
        {
            AddInfo("makernotes:nikon:time::name", "Time Zone", "int16s");
            AddInfo("makernotes:nikon:time::name", "Daylight Savings", "int8u");
            AddInfo("makernotes:nikon:time::name", "Date Display Format", "int8u");
        }


        static void InitTable484()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Brightness Adj", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Enhance Dark Tones", "int8u");
        }


        static void InitTable485()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Color Boost Type", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Boost Level", "int32u");
        }


        static void InitTable486()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Crop Left", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Top", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Right", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Bottom", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Width Inches", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Height Inches", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Scaled Resolution", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Source Resolution", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Resolution", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Scale", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Width", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Height", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Crop Output Pixels", "double");
        }


        static void InitTable487()
        {
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HQ Shadow", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HQ Highlight", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HQ Color Boost", "int32u");
        }


        static void InitTable488()
        {
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HS Adjustment", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HS Color Boost", "int32u");
        }


        static void InitTable489()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Exposure Adj", "int16s");
            AddInfo("makernotes:nikoncapture:image::name", "Exposure Adj 2", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Active D-Lighting", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Active D-Lighting Mode", "int8u");
        }


        static void InitTable490()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Shadow Protection", "int8s");
            AddInfo("makernotes:nikoncapture:image::name", "Saturation Adj", "int8s");
            AddInfo("makernotes:nikoncapture:image::name", "Highlight Protection", "int8s");
        }


        static void InitTable491()
        {
            AddInfo("makernotes:nikoncapture:image::name", "LCH Editor", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Histogram XML", "undef");
            AddInfo("makernotes:nikoncapture:image::name", "Color Aberration Control", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HQ", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Straighten Angle", "double");
            AddInfo("makernotes:nikoncapture:image::name", "Edit Version Name", "string");
            AddInfo("makernotes:nikoncapture:image::name", "Quick Fix", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Booster", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HQ Selected", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Noise Reduction", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp Mask", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Curves", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Balance Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Advanced Raw", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "White Balance Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Vignette Control", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Flip Horizontal", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Rotation", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effects", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Vignette Control Intensity", "int16s");
            AddInfo("makernotes:nikoncapture:image::name", "D-Lighting HS", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Picture Control", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effect History XML", "undef");
            AddInfo("makernotes:nikoncapture:image::name", "Auto Red Eye", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Image Dust Off", "int8u");
        }


        static void InitTable492()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Edge Noise Reduction", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Moire Reduction Mode", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Noise Reduction Intensity", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "Noise Reduction Sharpness", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "Noise Reduction Method", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Moire Reduction", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Noise Reduction", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Noise Reduction Intensity", "int32u");
            AddInfo("makernotes:nikoncapture:image::name", "Color Noise Reduction Sharpness", "int32u");
        }


        static void InitTable493()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effects Type", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effects Red", "int16s");
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effects Green", "int16s");
            AddInfo("makernotes:nikoncapture:image::name", "Photo Effects Blue", "int16s");
        }


        static void InitTable494()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Picture Control Active", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Picture Control Mode", "string");
            AddInfo("makernotes:nikoncapture:image::name", "Quick Adjust", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Sharpening Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Contrast Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Brightness Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Saturation Adj", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Hue Adj", "int8u");
        }


        static void InitTable495()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Red Eye Correction", "int8u");
        }


        static void InitTable496()
        {
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp Count", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 1 Color", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 1 Intensity", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 1 Halo Width", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 1 Threshold", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 2 Color", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 2 Intensity", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 2 Halo Width", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 2 Threshold", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 3 Color", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 3 Intensity", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 3 Halo Width", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 3 Threshold", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 4 Color", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 4 Intensity", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 4 Halo Width", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "Unsharp 4 Threshold", "int8u");
        }


        static void InitTable497()
        {
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Red Balance", "double");
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Blue Balance", "double");
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Mode", "int8u");
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Lighting", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Temperature", "int16u");
            AddInfo("makernotes:nikoncapture:image::name", "WB Adj Tint", "int32s");
        }


        static void InitTable498()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings Bank", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings All Default", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-S Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Dynamic AF Area", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Activation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Brightness", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF On Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Vertical AF On Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-On For MB-D10", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Bkt Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Live View", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Initial Zoom Live View", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Comp Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Compensation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Center Weighted", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Spot Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Shoot Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Playback Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Initial Zoom Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Initial Zoom Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CH Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Max Continuous Release", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Rear Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Battery Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D10 Batteries", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Playback Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Change Main Sub", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Aperture Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Menu And Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Photo Info Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Release Button To Use Dial", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Mode M", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Mode M", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
        }


        static void InitTable499()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings Bank", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-S Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Activation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Pitch", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Rear Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Compensation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Comp Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Center Weighted", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Spot Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Shoot Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Playback Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CH Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Max Continuous Release", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Mode M", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Bkt Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Change Main Sub", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Menu And Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Aperture Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Release Button To Use Dial", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Standby Timer", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Interval", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Zoom", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Speed Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Aperture Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Shutter Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Exposure Comp Area", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Vertical Multi Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Vertical Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Vertical Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Movie Record Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Dynamic Area AF Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Store By Orientation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Group Area AF Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Brightness", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF On Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Vertical AF On Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Sub Selector Assignment", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Sub Selector Assignment", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Sub Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Sub Selector Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Button Options", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Mode Restrictions", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Limit AF Area Mode Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Function Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Sub Selector Assignment Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Remote Fn Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Lens Focus Function Buttons", "int8u");
        }


        static void InitTable500()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO Max", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO Min Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Mode Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Timer Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Level", "int8s");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Mode Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Area Mode Setting", "int8u");
        }


        static void InitTable501()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "AF Area Mode Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Range Finder", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Date Imprint", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "EV Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Timer Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Menus Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View AF", "int8u");
        }


        static void InitTable502()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Range Finder", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "EV Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Timer Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Menus Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
        }


        static void InitTable503()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Number Of Focus Points", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Range Finder", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Exposure Comp Dial", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Shutter Speed Aperture", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "EV Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Standby Timer", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Menus Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
        }


        static void InitTable504()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings Bank", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings All Default", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-S Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Dynamic AF Area", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Activation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-On For MB-D10", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Comp Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Compensation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Spot Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Max Continuous Release", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Battery Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D10 Battery Type", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Control Built-in", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Channel", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Builtin", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Group A", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Group B", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Mode M", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Shoot Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Playback Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Initial Zoom Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Change Main Sub", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Aperture Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Menu And Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Photo Info Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Release Button To Use Dial", "int8u");
        }


        static void InitTable505()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-S Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Number Of Focus Points", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Battery Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-On For MB-D11", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D11 Battery Type", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep Pitch", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep Volume", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Compensation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Sensitivity Step", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Max Continuous Release", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "OK Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Change Main Sub", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Aperture Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Menu And Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Release Button To Use Dial", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Interval", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Control Built-in", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Builtin", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Group A", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp Group B", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View AF Area Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View AF Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
        }


        static void InitTable506()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Main Dial Exposure Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "EV Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO Max", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto ISO Min Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D80 Batteries", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto FP", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Channel", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A TTL-AA Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B TTL-AA Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center AF Area", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Area Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Area Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Area Mode Setting", "int8u");
        }


        static void InitTable507()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracketing Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracketing Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Control Built-in", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Channel", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B Manual Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A TTL-AA Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B TTL-AA Comp", "int8u");
        }


        static void InitTable508()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Light Switch", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Custom Settings Bank", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-C Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-S Priority Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Tracking Lock On", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Activation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Brightness", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Battery Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D12 Battery Type", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Pitch", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Electronic Front-Curtain Shutter", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Compensation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Comp Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Center Weighted", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Spot Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Shoot Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Playback Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Max Continuous Release", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Mode M", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Bkt Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Change Main Sub", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Menu And Playback", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Aperture Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Release Button To Use Dial", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Standby Timer", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Interval", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Sync Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Control Built-in", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Multi Selector Live View", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Speed Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Aperture Lock", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Shutter Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Exposure Comp Area", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie AE Lock Button Assignment", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Function Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Movie Preview Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Preview Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button Plus Dials", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Movie Record Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Highlight Weighted", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Dynamic Area AF Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Store By Orientation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Group Area AF Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View Button Options", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Mode Restrictions", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Limit AF Area Mode Selection", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF-On For MB-D12", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Assign Remote Fn Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Lens Focus Function Buttons", "int8u");
        }


        static void InitTable509()
        {
            AddInfo("makernotes:nikoncustom:camera::name", "Light Switch", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Area Mode Setting", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Focus Point", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Assist", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AF Point Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Focus Point Wrap", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock For MB-D80", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "MB-D80 Battery Type", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Beep", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Grid Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "ISO Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Viewfinder Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "No Memory Card", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Screen Tips", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "File Number Sequence", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Display", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "LCD Illumination", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Easy Exposure Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Reverse Indicators", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Control Step Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Center Weighted Area Size", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Matrix Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Center Weighted", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Fine Tune Opt Spot Metering", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "CL Mode Shooting Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Exposure Delay Mode", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Set", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto Bracket Order", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Func Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "OK Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "AE Lock Button", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Command Dials Reverse Rotation", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shutter Release Button AE-L", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Metering Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Remote On Duration", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Self Timer Shot Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Playback Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Image Review Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Menu Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Shooting Info Monitor Off Time", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Shutter Speed", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Internal Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Manual Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Output", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Count", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Repeating Flash Rate", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Flash Warning", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Internal TTL Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Modeling Flash", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Auto FP", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group A TTL Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Commander Group B TTL Comp", "int8u");
            AddInfo("makernotes:nikoncustom:camera::name", "Live View AF", "int8u");
        }


        static void InitTable510()
        {
            AddInfo("makernotes:nintendo:image::name", "Model ID", "undef");
            AddInfo("makernotes:nintendo:image::name", "Time Stamp", "int32u");
            AddInfo("makernotes:nintendo:image::name", "Internal Serial Number", "undef");
            AddInfo("makernotes:nintendo:image::name", "Parallax", "float");
            AddInfo("makernotes:nintendo:image::name", "Category", "int16u");
        }


        static void InitTable511()
        {
            AddInfo("xml:xml:document::name", "App Version", "?");
            AddInfo("xml:xml:document::name", "Application", "?");
            AddInfo("xml:xml:document::name", "Characters", "?");
            AddInfo("xml:xml:document::name", "Characters With Spaces", "?");
            AddInfo("xml:xml:document::name", "Checked By", "?");
            AddInfo("xml:xml:document::name", "Client", "?");
            AddInfo("xml:xml:document::name", "Company", "?");
            AddInfo("xml:xml:document::name", "Date Completed", "date");
            AddInfo("xml:xml:document::name", "Department", "?");
            AddInfo("xml:xml:document::name", "Destination", "?");
            AddInfo("xml:xml:document::name", "Disposition", "?");
            AddInfo("xml:xml:document::name", "Division", "?");
            AddInfo("xml:xml:document::name", "Doc Security", "?");
            AddInfo("xml:xml:document::name", "Document Number", "?");
            AddInfo("xml:xml:document::name", "Editor", "?");
            AddInfo("xml:xml:document::name", "Forward To", "?");
            AddInfo("xml:xml:document::name", "Group", "?");
            AddInfo("xml:xml:document::name", "Heading Pairs", "?");
            AddInfo("xml:xml:document::name", "Hidden Slides", "?");
            AddInfo("xml:xml:document::name", "Hyperlink Base", "?");
            AddInfo("xml:xml:document::name", "Hyperlinks Changed", "?");
            AddInfo("xml:xml:document::name", "Language", "?");
            AddInfo("xml:xml:document::name", "Lines", "?");
            AddInfo("xml:xml:document::name", "Links Up To Date", "?");
            AddInfo("xml:xml:document::name", "MM Clips", "?");
            AddInfo("xml:xml:document::name", "Mailstop", "?");
            AddInfo("xml:xml:document::name", "Manager", "?");
            AddInfo("xml:xml:document::name", "Matter", "?");
            AddInfo("xml:xml:document::name", "Notes", "?");
            AddInfo("xml:xml:document::name", "Office", "?");
            AddInfo("xml:xml:document::name", "Owner", "?");
            AddInfo("xml:xml:document::name", "Pages", "?");
            AddInfo("xml:xml:document::name", "Paragraphs", "?");
            AddInfo("xml:xml:document::name", "Presentation Format", "?");
            AddInfo("xml:xml:document::name", "Project", "?");
            AddInfo("xml:xml:document::name", "Publisher", "?");
            AddInfo("xml:xml:document::name", "Purpose", "?");
            AddInfo("xml:xml:document::name", "Received From", "?");
            AddInfo("xml:xml:document::name", "Recorded By", "?");
            AddInfo("xml:xml:document::name", "Recorded Date", "date");
            AddInfo("xml:xml:document::name", "Reference", "?");
            AddInfo("xml:xml:document::name", "Scale Crop", "?");
            AddInfo("xml:xml:document::name", "Shared Doc", "?");
            AddInfo("xml:xml:document::name", "Slides", "?");
            AddInfo("xml:xml:document::name", "Source", "?");
            AddInfo("xml:xml:document::name", "Status", "?");
            AddInfo("xml:xml:document::name", "Telephone Number", "?");
            AddInfo("xml:xml:document::name", "Template", "?");
            AddInfo("xml:xml:document::name", "Titles Of Parts", "?");
            AddInfo("xml:xml:document::name", "Total Edit Time", "?");
            AddInfo("xml:xml:document::name", "Typist", "?");
            AddInfo("xml:xml:document::name", "Words", "?");
            AddInfo("xml:xml:document::name", "Category", "?");
            AddInfo("xml:xml:document::name", "Create Date", "date");
            AddInfo("xml:xml:document::name", "Created Type", "?");
            AddInfo("xml:xml:document::name", "Keywords", "?");
            AddInfo("xml:xml:document::name", "Last Modified By", "?");
            AddInfo("xml:xml:document::name", "Last Printed", "date");
            AddInfo("xml:xml:document::name", "Modify Date", "date");
            AddInfo("xml:xml:document::name", "Modified Type", "?");
            AddInfo("xml:xml:document::name", "Revision Number", "?");
        }


        static void InitTable512()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Date Time 1", "string");
            AddInfo("makernotes:olympus:camera::name", "Date Time 2", "string");
        }


        static void InitTable513()
        {
            AddInfo("makernotes:olympus:camera::name", "Camera Settings Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Valid", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "AE Lock", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Shift", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "ND Filter", "?");
            AddInfo("makernotes:olympus:camera::name", "Macro Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Process", "int16u");
            AddInfo("makernotes:olympus:camera::name", "AF Search", "int16u");
            AddInfo("makernotes:olympus:camera::name", "AF Areas", "int32u");
            AddInfo("makernotes:olympus:camera::name", "AF Point Selected", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "AF Fine Tune", "int8u");
            AddInfo("makernotes:olympus:camera::name", "AF Fine Tune Adj", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Flash Remote Control", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Control Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Intensity", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Manual Flash Strength", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "White Balance 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Balance Temperature", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Balance Bracket", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Custom Saturation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Modified Saturation", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Contrast Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Sharpness Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Scene Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Distortion Correction", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Shading Compensation", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Compression Factor", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Gradation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Saturation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Hue", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Contrast", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Sharpness", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode BW Filter", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Tone", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Noise Filter", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Art Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Magic Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Picture Mode Effect", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Tone Level", "?");
            AddInfo("makernotes:olympus:camera::name", "Art Filter Effect", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Panorama Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Image Quality 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Image Stabilization", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Manometer Pressure", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Manometer Reading", "int32s");
            AddInfo("makernotes:olympus:camera::name", "Extended WB Detect", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Roll Angle", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Pitch Angle", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Date Time UTC", "string");
        }


        static void InitTable514()
        {
            AddInfo("makernotes:olympus:audio::name", "Model", "string");
            AddInfo("makernotes:olympus:audio::name", "Start Time", "string");
            AddInfo("makernotes:olympus:audio::name", "End Time", "string");
            AddInfo("makernotes:olympus:audio::name", "Duration", "string");
            AddInfo("makernotes:olympus:audio::name", "Comment", "string");
        }


        static void InitTable515()
        {
            AddInfo("makernotes:olympus:camera::name", "Equipment Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Camera Type 2", "string");
            AddInfo("makernotes:olympus:camera::name", "Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "Internal Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "Focal Plane Diagonal", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Body Firmware Version", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Lens Type", "int8u");
            AddInfo("makernotes:olympus:camera::name", "Lens Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "Lens Model", "string");
            AddInfo("makernotes:olympus:camera::name", "Lens Firmware Version", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Max Aperture At Min Focal", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Max Aperture At Max Focal", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Max Aperture", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Lens Properties", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Extender", "int8u");
            AddInfo("makernotes:olympus:camera::name", "Extender Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "Extender Model", "string");
            AddInfo("makernotes:olympus:camera::name", "Extender Firmware Version", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Conversion Lens", "string");
            AddInfo("makernotes:olympus:camera::name", "Flash Type", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Model", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Firmware Version", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Flash Serial Number", "string");
        }


        static void InitTable516()
        {
            AddInfo("makernotes:olympus:camera::name", "Body Firmware Version", "string");
        }


        static void InitTable517()
        {
            AddInfo("makernotes:olympus:camera::name", "Focus Info Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Auto Focus", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Scene Detect", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Scene Area", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Scene Detect Data", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Zoom Step Count", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Count", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Infinity", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Near", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Distance", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "AF Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "AF Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "AF Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash Guide Number", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "External Flash Bounce", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash Zoom", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Manual Flash", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Macro LED", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Sensor Temperature", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Sensor Temperature", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Image Stabilization", "undef");
        }


        static void InitTable518()
        {
            AddInfo("makernotes:olympus:camera::name", "Image Processing Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 3000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 3300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 3600K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 3900K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 4000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 4300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 4500K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 4800K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 5300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 6000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 6600K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels 7500K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels CWB1", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels CWB2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels CWB3", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels CWB4", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 3000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 3300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 3600K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 3900K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 4000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 4300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 4500K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 4800K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 5300K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 6000K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 6600K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level 7500K", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB G Level", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Matrix", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Enhancer", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Enhancer Values", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Coring Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Coring Values", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Black Level 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Gain Base", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Valid Bits", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Left", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Top", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Width", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Crop Height", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Unknown Block 1", "undef");
            AddInfo("makernotes:olympus:camera::name", "Unknown Block 2", "undef");
            AddInfo("makernotes:olympus:camera::name", "Sensor Calibration", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Noise Reduction 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Distortion Correction 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Shading Compensation 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Multiple Exposure Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Unknown Block 3", "undef");
            AddInfo("makernotes:olympus:camera::name", "Unknown Block 4", "undef");
            AddInfo("makernotes:olympus:camera::name", "Aspect Ratio", "int8u");
            AddInfo("makernotes:olympus:camera::name", "Aspect Frame", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Faces Detected", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Face Detect Area", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Max Faces", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Face Detect Frame Crop", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Camera Temperature", "int16u");
        }


        static void InitTable519()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "Exposure Unknown", "int32u");
            AddInfo("makernotes:olympus:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Focal Length", "rational64u");
        }


        static void InitTable520()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:olympus:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "ISO", "int16u");
        }


        static void InitTable521()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Compensation", "rational64s");
        }


        static void InitTable522()
        {
            AddInfo("makernotes:olympus:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Compressed Image Size", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Data", "?");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Start", "?");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Length", "?");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Image", "undef");
            AddInfo("makernotes:olympus:camera::name", "Body Firmware Version", "string");
            AddInfo("makernotes:olympus:camera::name", "Special Mode", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Quality", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Macro", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Black And White Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Digital Zoom", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Focal Plane Diagonal", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Lens Distortion Params", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Camera Type", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera ID", "string");
            AddInfo("makernotes:olympus:camera::name", "Epson Image Width", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Epson Image Height", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Epson Software", "string");
            AddInfo("makernotes:olympus:camera::name", "Preview Image", "int8u");
            AddInfo("makernotes:olympus:camera::name", "Pre Capture Frames", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Board", "int16u");
            AddInfo("makernotes:olympus:camera::name", "One Touch WB", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Balance Bracket", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Balance Bias", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Black Level", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Scene Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "Firmware", "string");
            AddInfo("makernotes:olympus:camera::name", "Data Dump", "?");
            AddInfo("makernotes:olympus:camera::name", "Data Dump 2", "?");
            AddInfo("makernotes:olympus:camera::name", "Zoomed Preview Start", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Zoomed Preview Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Zoomed Preview Size", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Shutter Speed Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "ISO Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Aperture Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Brightness Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Device", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Sensor Temperature", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Lens Temperature", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Light Condition", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Range", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Manual Focus Distance", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Zoom Step Count", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Count", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Flash Charge Level", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Matrix", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Black Level", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Temperature BG", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Temperature RG", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Red Balance", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Blue Balance", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Matrix Number", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Serial Number", "string");
            AddInfo("makernotes:olympus:camera::name", "External Flash AE1 0", "int32u");
            AddInfo("makernotes:olympus:camera::name", "External Flash AE2 0", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash AE1 0", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash AE2 0", "int32u");
            AddInfo("makernotes:olympus:camera::name", "External Flash AE1", "int32u");
            AddInfo("makernotes:olympus:camera::name", "External Flash AE2", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash AE1", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash AE2", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Internal Flash Table", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash G Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "External Flash Bounce", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash Zoom", "int16u");
            AddInfo("makernotes:olympus:camera::name", "External Flash Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Sharpness Factor", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Control", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Valid Bits", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Coring Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Olympus Image Width", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Olympus Image Height", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Scene Detect", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Scene Area", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Scene Detect Data", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Compression Ratio", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Valid", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "AF Result", "int16u");
            AddInfo("makernotes:olympus:camera::name", "CCD Scan Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Infinity", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Focus Step Near", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Light Value Center", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Light Value Periphery", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Field Count", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Camera Parameters", "undef");
        }


        static void InitTable523()
        {
            AddInfo("makernotes:olympus:camera::name", "ISO", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Encoder Version", "string");
            AddInfo("makernotes:olympus:camera::name", "Decoder Version", "string");
        }


        static void InitTable524()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:olympus:camera::name", "Date Time Original", "string");
            AddInfo("makernotes:olympus:camera::name", "Date Time 2", "string");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Width", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Height", "int16u");
        }


        static void InitTable525()
        {
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Exposure Bias Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev White Balance Value", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev WB Fine Adjustment", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Gray Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Saturation Emphasis", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Memory Color Emphasis", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Contrast Value", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Sharpness Value", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Color Space", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Engine", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Noise Reduction", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Edit Status", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Settings", "int16u");
        }


        static void InitTable526()
        {
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Exposure Bias Value", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev White Balance", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev White Balance Value", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev WB Fine Adjustment", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Gray Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Contrast Value", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Sharpness Value", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Saturation Emphasis", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Memory Color Emphasis", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Color Space", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Noise Reduction", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Engine", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Picture Mode", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM Saturation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM Contrast", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM Sharpness", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM BW Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM Picture Tone", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Gradation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Saturation 3", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Auto Gradation", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev PM Noise Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Raw Dev Art Filter", "int16u");
        }


        static void InitTable527()
        {
            AddInfo("makernotes:olympus:camera::name", "Raw Info Version", "undef");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Used", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Auto", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Shade", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Cloudy", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Fine Weather", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Tungsten", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Evening Sunlight", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Daylight Fluor", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Day White Fluor", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels Cool White Fluor", "int16u");
            AddInfo("makernotes:olympus:camera::name", "WB RB Levels White Fluorescent", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Color Matrix 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Coring Filter", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Coring Values", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Black Level 2", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Y Cb Cr Coefficients", "rational32u");
            AddInfo("makernotes:olympus:camera::name", "Valid Pixel Depth", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Left", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Top", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Crop Width", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Crop Height", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Light Source", "int16u");
            AddInfo("makernotes:olympus:camera::name", "White Balance Comp", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Saturation Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Hue Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Contrast Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "Sharpness Setting", "int16s");
            AddInfo("makernotes:olympus:camera::name", "CM Exposure Compensation", "rational64s");
            AddInfo("makernotes:olympus:camera::name", "CM White Balance", "int16u");
            AddInfo("makernotes:olympus:camera::name", "CM White Balance Comp", "int16s");
            AddInfo("makernotes:olympus:camera::name", "CM White Balance Gray Point", "int16u");
            AddInfo("makernotes:olympus:camera::name", "CM Saturation", "int16s");
            AddInfo("makernotes:olympus:camera::name", "CM Hue", "int16s");
            AddInfo("makernotes:olympus:camera::name", "CM Contrast", "int16s");
            AddInfo("makernotes:olympus:camera::name", "CM Sharpness", "int16s");
        }


        static void InitTable528()
        {
            AddInfo("makernotes:olympus:image::name", "Resolution", "?");
            AddInfo("makernotes:olympus:image::name", "Camera Type", "?");
        }


        static void InitTable529()
        {
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Width", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Height", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Offset", "int32u");
        }


        static void InitTable530()
        {
            AddInfo("makernotes:olympus:audio::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:audio::name", "File Number", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Date/Time Original", "undef");
            AddInfo("makernotes:olympus:audio::name", "Date Time End", "undef");
            AddInfo("makernotes:olympus:audio::name", "Recording Time", "undef");
            AddInfo("makernotes:olympus:audio::name", "Duration", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 01", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 02", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 03", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 04", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 05", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 06", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 07", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 08", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 09", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 10", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 11", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 12", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 13", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 14", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 15", "int32u");
            AddInfo("makernotes:olympus:audio::name", "Index 16", "int32u");
        }


        static void InitTable531()
        {
            AddInfo("makernotes:olympus:camera::name", "Make", "string");
            AddInfo("makernotes:olympus:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:olympus:camera::name", "Date Time 1", "string");
            AddInfo("makernotes:olympus:camera::name", "Date Time 2", "string");
        }


        static void InitTable532()
        {
            AddInfo("makernotes:olympus:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Preview Image", "undef");
        }


        static void InitTable533()
        {
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Image", "undef");
        }


        static void InitTable534()
        {
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Width", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Height", "int16u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:olympus:camera::name", "Thumbnail Image", "undef");
        }


        static void InitTable535()
        {
            AddInfo("openexr:openexr:image::name", "Layout", "?");
            AddInfo("openexr:openexr:image::name", "EXR Version", "?");
            AddInfo("openexr:openexr:image::name", "Adopted Neutral", "?");
            AddInfo("openexr:openexr:image::name", "GPS Altitude", "?");
            AddInfo("openexr:openexr:image::name", "Aperture", "?");
            AddInfo("openexr:openexr:image::name", "Date Time Original", "?");
            AddInfo("openexr:openexr:image::name", "Channels", "?");
            AddInfo("openexr:openexr:image::name", "Chromaticities", "?");
            AddInfo("openexr:openexr:image::name", "Comments", "?");
            AddInfo("openexr:openexr:image::name", "Compression", "?");
            AddInfo("openexr:openexr:image::name", "Data Window", "?");
            AddInfo("openexr:openexr:image::name", "Display Window", "?");
            AddInfo("openexr:openexr:image::name", "Environment Map", "?");
            AddInfo("openexr:openexr:image::name", "Exposure Time", "?");
            AddInfo("openexr:openexr:image::name", "Focus Distance", "?");
            AddInfo("openexr:openexr:image::name", "Frames Per Second", "?");
            AddInfo("openexr:openexr:image::name", "ISO", "?");
            AddInfo("openexr:openexr:image::name", "Key Code", "?");
            AddInfo("openexr:openexr:image::name", "GPS Latitude", "?");
            AddInfo("openexr:openexr:image::name", "Line Order", "?");
            AddInfo("openexr:openexr:image::name", "GPS Longitude", "?");
            AddInfo("openexr:openexr:image::name", "Look Mod Transform", "?");
            AddInfo("openexr:openexr:image::name", "Multi View", "?");
            AddInfo("openexr:openexr:image::name", "Owner", "?");
            AddInfo("openexr:openexr:image::name", "Pixel Aspect Ratio", "?");
            AddInfo("openexr:openexr:image::name", "Preview", "?");
            AddInfo("openexr:openexr:image::name", "Rendering Transform", "?");
            AddInfo("openexr:openexr:image::name", "Screen Window Center", "?");
            AddInfo("openexr:openexr:image::name", "Screen Window Width", "?");
            AddInfo("openexr:openexr:image::name", "Tiles", "?");
            AddInfo("openexr:openexr:image::name", "Time Code", "?");
            AddInfo("openexr:openexr:image::name", "Time Zone", "?");
            AddInfo("openexr:openexr:image::name", "White Luminance", "?");
            AddInfo("openexr:openexr:image::name", "World To Camera", "?");
            AddInfo("openexr:openexr:image::name", "World To NDC", "?");
            AddInfo("openexr:openexr:image::name", "Wrap Modes", "?");
            AddInfo("openexr:openexr:image::name", "X Resolution", "?");
        }


        static void InitTable536()
        {
            AddInfo("pdf:pdf:document::name", "Container Version", "?");
            AddInfo("pdf:pdf:document::name", "Creator Version", "?");
            AddInfo("pdf:pdf:document::name", "Round Trip Version", "?");
        }


        static void InitTable537()
        {
            AddInfo("pdf:pdf:other::name", "Has XFA", "?");
        }


        static void InitTable538()
        {
            AddInfo("pdf:pdf:document::name", "Encryption", "?");
            AddInfo("pdf:pdf:document::name", "User Access", "?");
        }


        static void InitTable539()
        {
            AddInfo("pdf:pdf:other::name", "Embedded Image Color Space", "?");
            AddInfo("pdf:pdf:other::name", "Embedded Image Filter", "?");
            AddInfo("pdf:pdf:other::name", "Embedded Image Height", "?");
            AddInfo("pdf:pdf:other::name", "Embedded Image", "?");
            AddInfo("pdf:pdf:other::name", "Embedded Image Width", "?");
        }


        static void InitTable540()
        {
            AddInfo("pdf:pdf:document::name", "Apple Keywords", "string");
            AddInfo("pdf:pdf:document::name", "Author", "string");
            AddInfo("pdf:pdf:document::name", "Create Date", "date");
            AddInfo("pdf:pdf:document::name", "Creator", "string");
            AddInfo("pdf:pdf:document::name", "Keywords", "string");
            AddInfo("pdf:pdf:document::name", "Modify Date", "date");
            AddInfo("pdf:pdf:document::name", "Producer", "string");
            AddInfo("pdf:pdf:document::name", "Subject", "string");
            AddInfo("pdf:pdf:document::name", "Title", "string");
            AddInfo("pdf:pdf:document::name", "Trapped", "string");
        }


        static void InitTable541()
        {
            AddInfo("pdf:pdf:document::name", "Linearized", "?");
        }


        static void InitTable542()
        {
            AddInfo("pdf:pdf:document::name", "Tagged PDF", "?");
        }


        static void InitTable543()
        {
            AddInfo("pdf:pdf:document::name", "Page Count", "?");
        }


        static void InitTable544()
        {
            AddInfo("pdf:pdf:document::name", "Language", "?");
            AddInfo("pdf:pdf:document::name", "Page Layout", "?");
            AddInfo("pdf:pdf:document::name", "Page Mode", "?");
            AddInfo("pdf:pdf:document::name", "PDF Version", "?");
        }


        static void InitTable545()
        {
            AddInfo("pdf:pdf:document::name", "Signer Contact Info", "?");
            AddInfo("pdf:pdf:document::name", "Signing Location", "?");
            AddInfo("pdf:pdf:document::name", "Signing Date", "date");
            AddInfo("pdf:pdf:document::name", "Signing Authority", "?");
            AddInfo("pdf:pdf:document::name", "Authentication Time", "?");
            AddInfo("pdf:pdf:document::name", "Authentication Type", "?");
            AddInfo("pdf:pdf:document::name", "Signing Reason", "?");
        }


        static void InitTable546()
        {
            AddInfo("pdf:pdf:document::name", "Field Permissions", "?");
            AddInfo("pdf:pdf:document::name", "Annotation Usage Rights", "?");
            AddInfo("pdf:pdf:document::name", "Document Usage Rights", "?");
            AddInfo("pdf:pdf:document::name", "Embedded File Usage Rights", "?");
            AddInfo("pdf:pdf:document::name", "Form Fields", "?");
            AddInfo("pdf:pdf:document::name", "Form Usage Rights", "?");
            AddInfo("pdf:pdf:document::name", "Form Extra Usage Rights", "?");
            AddInfo("pdf:pdf:document::name", "Usage Rights Message", "?");
            AddInfo("pdf:pdf:document::name", "Modification Permissions", "?");
            AddInfo("pdf:pdf:document::name", "Signature Usage Rights", "?");
        }


        static void InitTable547()
        {
            AddInfo("file:file:image::name", "PGF Version", "int8u");
            AddInfo("file:file:image::name", "Image Width", "int32u");
            AddInfo("file:file:image::name", "Image Height", "int32u");
            AddInfo("file:file:image::name", "Pyramid Levels", "int8u");
            AddInfo("file:file:image::name", "Quality", "int8u");
            AddInfo("file:file:image::name", "Bits Per Pixel", "int8u");
            AddInfo("file:file:image::name", "Color Components", "int8u");
            AddInfo("file:file:image::name", "Color Mode", "int8u");
            AddInfo("file:file:image::name", "Background Color", "int8u");
        }


        static void InitTable548()
        {
            AddInfo("pict:pict:other::name", "No Operation", "null");
            AddInfo("pict:pict:other::name", "Clipping Region", "rgn");
            AddInfo("pict:pict:other::name", "Background Pattern", "int8u");
            AddInfo("pict:pict:other::name", "Font Number", "int16u");
            AddInfo("pict:pict:other::name", "Text Font Style", "int8u");
            AddInfo("pict:pict:other::name", "Text Source Mode", "int16u");
            AddInfo("pict:pict:other::name", "Extra Space", "fixed32s");
            AddInfo("pict:pict:other::name", "Pen Size", "point");
            AddInfo("pict:pict:other::name", "Pen Mode", "int16u");
            AddInfo("pict:pict:other::name", "Pen Pattern", "int8u");
            AddInfo("pict:pict:other::name", "Fill Pattern", "int8u");
            AddInfo("pict:pict:other::name", "Oval Size", "point");
            AddInfo("pict:pict:other::name", "Origin", "point");
            AddInfo("pict:pict:other::name", "Text Size", "int16u");
            AddInfo("pict:pict:other::name", "Foreground Color", "int32u");
            AddInfo("pict:pict:other::name", "Background Color", "int32u");
            AddInfo("pict:pict:other::name", "Text Ratio", "rect");
            AddInfo("pict:pict:other::name", "Version", "int8u");
            AddInfo("pict:pict:other::name", "Background Pixel Pattern", "pixpat");
            AddInfo("pict:pict:other::name", "Pen Pixel Pattern", "pixpat");
            AddInfo("pict:pict:other::name", "Fill Pixel Pattern", "pixpat");
            AddInfo("pict:pict:other::name", "Fractional Pen Position", "int16u");
            AddInfo("pict:pict:other::name", "Added Width for NonSpace Characters", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "unknown");
            AddInfo("pict:pict:other::name", "Foreground Color", "rgbcolor");
            AddInfo("pict:pict:other::name", "Background Color", "rgbcolor");
            AddInfo("pict:pict:other::name", "Highlight Mode Flag", "null");
            AddInfo("pict:pict:other::name", "Highlight Color", "rgbcolor");
            AddInfo("pict:pict:other::name", "Use Default Highlight Color", "null");
            AddInfo("pict:pict:other::name", "Op Color", "rgbcolor");
            AddInfo("pict:pict:other::name", "Line", "rect");
            AddInfo("pict:pict:other::name", "Line From", "point");
            AddInfo("pict:pict:other::name", "Short Line", "shortline");
            AddInfo("pict:pict:other::name", "Short Line From", "int8u");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Long Text", "pointtext");
            AddInfo("pict:pict:other::name", "DH Text", "int8utext");
            AddInfo("pict:pict:other::name", "DV Text", "int8utext");
            AddInfo("pict:pict:other::name", "DHDV Text", "int8u2text");
            AddInfo("pict:pict:other::name", "Font Name", "fontname");
            AddInfo("pict:pict:other::name", "Line Justify", "int8u");
            AddInfo("pict:pict:other::name", "Glyph State", "int8u");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Frame Rect", "rect");
            AddInfo("pict:pict:other::name", "Paint Rect", "rect");
            AddInfo("pict:pict:other::name", "Erase Rect", "rect");
            AddInfo("pict:pict:other::name", "Invert Rect", "rect");
            AddInfo("pict:pict:other::name", "Fill Rect", "rect");
            AddInfo("pict:pict:other::name", "Reserved", "rect");
            AddInfo("pict:pict:other::name", "Frame Same Rect", "null");
            AddInfo("pict:pict:other::name", "Paint Same Rect", "null");
            AddInfo("pict:pict:other::name", "Erase Same Rect", "null");
            AddInfo("pict:pict:other::name", "Invert Same Rect", "null");
            AddInfo("pict:pict:other::name", "Fill Same Rect", "null");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Frame R Rect", "rect");
            AddInfo("pict:pict:other::name", "Paint R Rect", "rect");
            AddInfo("pict:pict:other::name", "Erase R Rect", "rect");
            AddInfo("pict:pict:other::name", "Invert R Rect", "rect");
            AddInfo("pict:pict:other::name", "Fill R Rect", "rect");
            AddInfo("pict:pict:other::name", "Reserved", "rect");
            AddInfo("pict:pict:other::name", "Frame Same R Rect", "null");
            AddInfo("pict:pict:other::name", "Paint Same R Rect", "null");
            AddInfo("pict:pict:other::name", "Erase Same R Rect", "null");
            AddInfo("pict:pict:other::name", "Invert Same R Rect", "null");
            AddInfo("pict:pict:other::name", "Fill Same R Rect", "null");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Frame Oval", "rect");
            AddInfo("pict:pict:other::name", "Paint Oval", "rect");
            AddInfo("pict:pict:other::name", "Erase Oval", "rect");
            AddInfo("pict:pict:other::name", "Invert Oval", "rect");
            AddInfo("pict:pict:other::name", "Fill Oval", "rect");
            AddInfo("pict:pict:other::name", "Reserved", "rect");
            AddInfo("pict:pict:other::name", "Frame Same Oval", "null");
            AddInfo("pict:pict:other::name", "Paint Same Oval", "null");
            AddInfo("pict:pict:other::name", "Erase Same Oval", "null");
            AddInfo("pict:pict:other::name", "Invert Same Oval", "null");
            AddInfo("pict:pict:other::name", "Fill Same Oval", "null");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Frame Arc", "arc");
            AddInfo("pict:pict:other::name", "Paint Arc", "arc");
            AddInfo("pict:pict:other::name", "Erase Arc", "arc");
            AddInfo("pict:pict:other::name", "Invert Arc", "arc");
            AddInfo("pict:pict:other::name", "Fill Arc", "arc");
            AddInfo("pict:pict:other::name", "Reserved", "arc");
            AddInfo("pict:pict:other::name", "Frame Same Arc", "point");
            AddInfo("pict:pict:other::name", "Paint Same Arc", "point");
            AddInfo("pict:pict:other::name", "Erase Same Arc", "point");
            AddInfo("pict:pict:other::name", "Invert Same Arc", "point");
            AddInfo("pict:pict:other::name", "Fill Same Arc", "point");
            AddInfo("pict:pict:other::name", "Reserved", "int32u");
            AddInfo("pict:pict:other::name", "Frame Poly", "polygon");
            AddInfo("pict:pict:other::name", "Paint Poly", "polygon");
            AddInfo("pict:pict:other::name", "Erase Poly", "polygon");
            AddInfo("pict:pict:other::name", "Invert Poly", "polygon");
            AddInfo("pict:pict:other::name", "Fill Poly", "polygon");
            AddInfo("pict:pict:other::name", "Reserved", "polygon");
            AddInfo("pict:pict:other::name", "Frame Same Poly", "null");
            AddInfo("pict:pict:other::name", "Paint Same Poly", "null");
            AddInfo("pict:pict:other::name", "Erase Same Poly", "null");
            AddInfo("pict:pict:other::name", "Invert Same Poly", "null");
            AddInfo("pict:pict:other::name", "Fill Same Poly", "null");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Frame Rgn", "rgn");
            AddInfo("pict:pict:other::name", "Paint Rgn", "rgn");
            AddInfo("pict:pict:other::name", "Erase Rgn", "rgn");
            AddInfo("pict:pict:other::name", "Invert Rgn", "rgn");
            AddInfo("pict:pict:other::name", "Fill Rgn", "rgn");
            AddInfo("pict:pict:other::name", "Reserved", "rgn");
            AddInfo("pict:pict:other::name", "Frame Same Rgn", "null");
            AddInfo("pict:pict:other::name", "Paint Same Rgn", "null");
            AddInfo("pict:pict:other::name", "Erase Same Rgn", "null");
            AddInfo("pict:pict:other::name", "Invert Same Rgn", "null");
            AddInfo("pict:pict:other::name", "Fill Same Rgn", "null");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "CopyBits with Clipped Rectangle", "bitsrect#");
            AddInfo("pict:pict:other::name", "CopyBits with Clipped Region", "bitsrgn#");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Packed CopyBits with Clipped Rectangle", "bitsrect#");
            AddInfo("pict:pict:other::name", "Packed CopyBits with Clipped Region", "bitsrgn#");
            AddInfo("pict:pict:other::name", "Direct Bits Rect", "directbitsrect");
            AddInfo("pict:pict:other::name", "Direct Bits Rgn", "directbitsrgn");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Short Comment", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "int16data");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Reserved", "int32udata");
            AddInfo("pict:pict:other::name", "End of picture", "null");
            AddInfo("pict:pict:other::name", "Reserved", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "int32u");
            AddInfo("pict:pict:other::name", "Version number of picture", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "int8u");
            AddInfo("pict:pict:other::name", "Header Op", "int16u");
            AddInfo("pict:pict:other::name", "Reserved", "int8u");
            AddInfo("pict:pict:other::name", "Reserved", "int8u");
            AddInfo("pict:pict:other::name", "Reserved", "null");
            AddInfo("pict:pict:other::name", "Reserved", "int32udata");
            AddInfo("pict:pict:other::name", "Compressed Quick Time", "compressedquicktime");
            AddInfo("pict:pict:other::name", "Uncompressed Quick Time", "int32udata");
            AddInfo("pict:pict:other::name", "Reserved", "int32udata");
        }


        static void InitTable549()
        {
            AddInfo("plist:xml:document::name", "Date/Time Original", "?");
            AddInfo("plist:xml:document::name", "Duration", "?");
            AddInfo("plist:xml:document::name", "GPS Latitude", "?");
            AddInfo("plist:xml:document::name", "GPS Longitude", "?");
            AddInfo("plist:xml:document::name", "GPS Map Datum", "?");
            AddInfo("plist:xml:document::name", "XML File Type", "?");
            AddInfo("plist:xml:document::name", "Cast", "?");
            AddInfo("plist:xml:document::name", "Codirectors", "?");
            AddInfo("plist:xml:document::name", "Directors", "?");
            AddInfo("plist:xml:document::name", "Producers", "?");
            AddInfo("plist:xml:document::name", "Screenwriters", "?");
            AddInfo("plist:xml:document::name", "Studio", "?");
        }


        static void InitTable550()
        {
            AddInfo("png:png:image::name", "Image Width", "int32u");
            AddInfo("png:png:image::name", "Image Height", "int32u");
            AddInfo("png:png:image::name", "Bit Depth", "int8u");
            AddInfo("png:png:image::name", "Color Type", "int8u");
            AddInfo("png:png:image::name", "Compression", "int8u");
            AddInfo("png:png:image::name", "Filter", "int8u");
            AddInfo("png:png:image::name", "Interlace", "int8u");
        }


        static void InitTable551()
        {
            AddInfo("png:png:image::name", "Palette", "?");
            AddInfo("png:png:image::name", "Background Color", "?");
            AddInfo("png:png:image::name", "Digital Signature", "?");
            AddInfo("png:png:image::name", "Fractal Parameters", "?");
            AddInfo("png:png:image::name", "Gamma", "?");
            AddInfo("png:png:image::name", "GIF Graphic Control Extension", "?");
            AddInfo("png:png:image::name", "GIF Plain Text Extension", "?");
            AddInfo("png:png:image::name", "GIF Application Extension", "?");
            AddInfo("png:png:image::name", "Palette Histogram", "?");
            AddInfo("png:png:image::name", "Profile Name", "?");
            AddInfo("png:png:image::name", "Image Offset", "?");
            AddInfo("png:png:image::name", "Pixel Calibration", "?");
            AddInfo("png:png:image::name", "Significant Bits", "?");
            AddInfo("png:png:image::name", "Suggested Palette", "?");
            AddInfo("png:png:image::name", "SRGB Rendering", "?");
            AddInfo("png:png:image::name", "Modify Date", "?");
            AddInfo("png:png:image::name", "Transparency", "?");
        }


        static void InitTable552()
        {
            AddInfo("png:png-phys:image::name", "Pixels Per Unit X", "int32u");
            AddInfo("png:png-phys:image::name", "Pixels Per Unit Y", "int32u");
            AddInfo("png:png-phys:image::name", "Pixel Units", "int8u");
        }


        static void InitTable553()
        {
            AddInfo("png:png:image::name", "White Point X", "int32u");
            AddInfo("png:png:image::name", "White Point Y", "int32u");
            AddInfo("png:png:image::name", "Red X", "int32u");
            AddInfo("png:png:image::name", "Red Y", "int32u");
            AddInfo("png:png:image::name", "Green X", "int32u");
            AddInfo("png:png:image::name", "Green Y", "int32u");
            AddInfo("png:png:image::name", "Blue X", "int32u");
            AddInfo("png:png:image::name", "Blue Y", "int32u");
        }


        static void InitTable554()
        {
            AddInfo("png:png:image::name", "Stereo Mode", "int8u");
        }


        static void InitTable555()
        {
            AddInfo("png:png:image::name", "Subject Units", "int8u");
            AddInfo("png:png:image::name", "Subject Pixel Width", "var_string");
            AddInfo("png:png:image::name", "Subject Pixel Height", "var_string");
        }


        static void InitTable556()
        {
            AddInfo("png:png:image::name", "Artist", "string");
            AddInfo("png:png:image::name", "Author", "string");
            AddInfo("png:png:image::name", "Comment", "string");
            AddInfo("png:png:image::name", "Copyright", "string");
            AddInfo("png:png:image::name", "Creation Time", "string");
            AddInfo("png:png:image::name", "Description", "string");
            AddInfo("png:png:image::name", "Disclaimer", "string");
            AddInfo("png:png:image::name", "Document", "string");
            AddInfo("png:png:image::name", "Label", "string");
            AddInfo("png:png:image::name", "Make", "string");
            AddInfo("png:png:image::name", "Model", "string");
            AddInfo("png:png:image::name", "Software", "string");
            AddInfo("png:png:image::name", "Source", "string");
            AddInfo("png:png:image::name", "Time Stamp", "string");
            AddInfo("png:png:image::name", "Title", "string");
            AddInfo("png:png:image::name", "URL", "string");
            AddInfo("png:png:image::name", "PNG Warning", "string");
            AddInfo("png:png:image::name", "Create Date", "string");
            AddInfo("png:png:image::name", "Mod Date", "string");
        }


        static void InitTable557()
        {
            AddInfo("png:png:image::name", "Virtual Image Width", "int32u");
            AddInfo("png:png:image::name", "Virtual Image Height", "int32u");
            AddInfo("png:png:image::name", "Virtual Page Units", "int8u");
        }


        static void InitTable558()
        {
            AddInfo("psp:psp:image::name", "Title", "?");
            AddInfo("psp:psp:image::name", "Create Date", "int32u");
            AddInfo("psp:psp:image::name", "Modify Date", "int32u");
            AddInfo("psp:psp:image::name", "Artist", "?");
            AddInfo("psp:psp:image::name", "Copyright", "?");
            AddInfo("psp:psp:image::name", "Description", "?");
            AddInfo("psp:psp:image::name", "Creator App ID", "int32u");
            AddInfo("psp:psp:image::name", "Creator App Version", "int8u");
        }


        static void InitTable559()
        {
            AddInfo("psp:psp:image::name", "Image Width", "int32u");
            AddInfo("psp:psp:image::name", "Image Height", "int32u");
            AddInfo("psp:psp:image::name", "Image Resolution", "double");
            AddInfo("psp:psp:image::name", "Resolution Unit", "int8u");
            AddInfo("psp:psp:image::name", "Compression", "int16u");
            AddInfo("psp:psp:image::name", "Bits Per Sample", "int16u");
            AddInfo("psp:psp:image::name", "Planes", "int16u");
            AddInfo("psp:psp:image::name", "Num Colors", "int32u");
        }


        static void InitTable560()
        {
            AddInfo("psp:psp:image::name", "File Version", "?");
        }


        static void InitTable561()
        {
            AddInfo("palm:mobi:document::name", "DRM Server ID", "string");
            AddInfo("palm:mobi:document::name", "DRM Commerce ID", "string");
            AddInfo("palm:mobi:document::name", "DRM E-Book Base ID", "string");
            AddInfo("palm:mobi:document::name", "Author", "string");
            AddInfo("palm:mobi:document::name", "Publisher", "string");
            AddInfo("palm:mobi:document::name", "Imprint", "string");
            AddInfo("palm:mobi:document::name", "Description", "string");
            AddInfo("palm:mobi:document::name", "ISBN", "string");
            AddInfo("palm:mobi:document::name", "Subject", "string");
            AddInfo("palm:mobi:document::name", "Publish Date", "string");
            AddInfo("palm:mobi:document::name", "Review", "string");
            AddInfo("palm:mobi:document::name", "Contributor", "string");
            AddInfo("palm:mobi:document::name", "Rights", "string");
            AddInfo("palm:mobi:document::name", "Subject Code", "string");
            AddInfo("palm:mobi:document::name", "Book Type", "string");
            AddInfo("palm:mobi:document::name", "Source", "string");
            AddInfo("palm:mobi:document::name", "ASIN", "string");
            AddInfo("palm:mobi:document::name", "Book Version", "string");
            AddInfo("palm:mobi:document::name", "Sample Flag", "int32u");
            AddInfo("palm:mobi:document::name", "Start Reading", "int32u");
            AddInfo("palm:mobi:document::name", "Adult", "string");
            AddInfo("palm:mobi:document::name", "Retail Price", "string");
            AddInfo("palm:mobi:document::name", "Retail Price Currency", "string");
            AddInfo("palm:mobi:document::name", "Resource Count", "int32u");
            AddInfo("palm:mobi:document::name", "KF8 Cover URI", "string");
            AddInfo("palm:mobi:document::name", "Dictionary Short Name", "string");
            AddInfo("palm:mobi:document::name", "Creator Software", "int32u");
            AddInfo("palm:mobi:document::name", "Creator Major Version", "int32u");
            AddInfo("palm:mobi:document::name", "Creator Minor Version", "int32u");
            AddInfo("palm:mobi:document::name", "Creator Build Number", "int32u");
            AddInfo("palm:mobi:document::name", "Watermark", "string");
            AddInfo("palm:mobi:document::name", "Tamper-proof Keys", "string");
            AddInfo("palm:mobi:document::name", "Clipping Limit", "int8u");
            AddInfo("palm:mobi:document::name", "Publisher Limit", "string");
            AddInfo("palm:mobi:document::name", "Text To Speech", "int8u");
            AddInfo("palm:mobi:document::name", "Rental Flag", "int8u");
            AddInfo("palm:mobi:document::name", "Rental Expiration Date", "string");
            AddInfo("palm:mobi:document::name", "CDE Type", "int32u");
            AddInfo("palm:mobi:document::name", "Last Update Time", "string");
            AddInfo("palm:mobi:document::name", "Updated Title", "string");
            AddInfo("palm:mobi:document::name", "ASIN2", "string");
            AddInfo("palm:mobi:document::name", "Language", "string");
            AddInfo("palm:mobi:document::name", "Alignment", "string");
            AddInfo("palm:mobi:document::name", "Creator Build Number 2", "string");
        }


        static void InitTable562()
        {
            AddInfo("palm:mobi:document::name", "Compression", "int16u");
            AddInfo("palm:mobi:document::name", "Uncompressed Text Length", "int32u");
            AddInfo("palm:mobi:document::name", "Encryption", "int32u");
            AddInfo("palm:mobi:document::name", "Mobi Type", "int32u");
            AddInfo("palm:mobi:document::name", "Code Page", "int32u");
            AddInfo("palm:mobi:document::name", "Mobi Version", "int32u");
            AddInfo("palm:mobi:document::name", "Book Name", "int32u");
            AddInfo("palm:mobi:document::name", "Minimum Version", "int32u");
        }


        static void InitTable563()
        {
            AddInfo("palm:palm:document::name", "Database Name", "string");
            AddInfo("palm:palm:document::name", "Create Date", "int32u");
            AddInfo("palm:palm:document::name", "Modify Date", "int32u");
            AddInfo("palm:palm:document::name", "Last Backup Date", "int32u");
            AddInfo("palm:palm:document::name", "Modification Number", "int32u");
            AddInfo("palm:palm:document::name", "Palm File Type", "undef");
        }


        static void InitTable564()
        {
            AddInfo("makernotes:leica:camera::name", "Lens Type", "int32u");
        }


        static void InitTable565()
        {
            AddInfo("makernotes:panasonic:image::name", "Num Face Positions", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Face 5 Position", "int16u");
        }


        static void InitTable566()
        {
            AddInfo("makernotes:panasonic:image::name", "Faces Recognized", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 1 Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 1 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 1 Age", "string");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 2 Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 2 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 2 Age", "string");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 3 Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 3 Position", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Recognized Face 3 Age", "string");
        }


        static void InitTable567()
        {
            AddInfo("makernotes:leica:camera::name", "Quality", "int16u");
            AddInfo("makernotes:leica:camera::name", "User Profile", "int32u");
            AddInfo("makernotes:leica:camera::name", "Serial Number", "int32u");
            AddInfo("makernotes:leica:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:leica:camera::name", "Lens Type", "int32u");
            AddInfo("makernotes:leica:camera::name", "External Sensor Brightness Value", "rational64s");
            AddInfo("makernotes:leica:camera::name", "Measured LV", "rational64s");
            AddInfo("makernotes:leica:camera::name", "Approximate F Number", "rational64u");
            AddInfo("makernotes:leica:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:leica:camera::name", "Color Temperature", "int32u");
            AddInfo("makernotes:leica:camera::name", "WB Red Level", "rational64u");
            AddInfo("makernotes:leica:camera::name", "WB Green Level", "rational64u");
            AddInfo("makernotes:leica:camera::name", "WB Blue Level", "rational64u");
            AddInfo("makernotes:leica:camera::name", "UV/IR Filter Correction", "int32u");
            AddInfo("makernotes:leica:camera::name", "CCD Version", "int32u");
            AddInfo("makernotes:leica:camera::name", "CCD Board Version", "int32u");
            AddInfo("makernotes:leica:camera::name", "Controller Board Version", "int32u");
            AddInfo("makernotes:leica:camera::name", "M16C Version", "int32u");
            AddInfo("makernotes:leica:camera::name", "Image ID Number", "int32u");
        }


        static void InitTable568()
        {
            AddInfo("makernotes:leica:camera::name", "WB RGB Levels", "int16u");
        }


        static void InitTable569()
        {
            AddInfo("makernotes:leica:camera::name", "Lens Model", "string");
            AddInfo("makernotes:leica:camera::name", "Original File Name", "string");
            AddInfo("makernotes:leica:camera::name", "Original Directory", "string");
            AddInfo("makernotes:leica:camera::name", "Exposure Mode", "int8u");
            AddInfo("makernotes:leica:camera::name", "Film Mode", "string");
            AddInfo("makernotes:leica:camera::name", "WB RGB Levels", "rational64u");
        }


        static void InitTable570()
        {
            AddInfo("makernotes:leica:camera::name", "Preview Image", "undef");
            AddInfo("makernotes:leica:camera::name", "Unknown Block", "?");
            AddInfo("makernotes:leica:camera::name", "Lens Type", "string");
        }


        static void InitTable571()
        {
            AddInfo("makernotes:panasonic:camera::name", "Image Quality", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Firmware Version", "undef");
            AddInfo("makernotes:panasonic:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "Image Stabilization", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Macro Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Shooting Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Audio", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Data Dump", "?");
            AddInfo("makernotes:panasonic:camera::name", "White Balance Bias", "int16s");
            AddInfo("makernotes:panasonic:camera::name", "Flash Bias", "int16s");
            AddInfo("makernotes:panasonic:camera::name", "Internal Serial Number", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Panasonic Exif Version", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Color Effect", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Time Since Power On", "int32u");
            AddInfo("makernotes:panasonic:camera::name", "Burst Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Sequence Number", "int32u");
            AddInfo("makernotes:panasonic:camera::name", "Contrast Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Contrast Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Contrast Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Contrast Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Self Timer", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "AF Assist Lamp", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Color Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Baby Age", "string");
            AddInfo("makernotes:panasonic:camera::name", "Optical Zoom Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Conversion Lens", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Travel Day", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "World Time Location", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Text Stamp", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Program ISO", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Advanced Scene Type", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Text Stamp", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Faces Detected", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Film Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Color Temp Kelvin", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Bracket Settings", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "WB Shift AB", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "WB Shift GM", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Flash Curtain", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Long Exposure Noise Reduction", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Panasonic Image Width", "int32u");
            AddInfo("makernotes:panasonic:camera::name", "Panasonic Image Height", "int32u");
            AddInfo("makernotes:panasonic:camera::name", "AF Point Position", "rational64u");
            AddInfo("makernotes:panasonic:camera::name", "Lens Type", "string");
            AddInfo("makernotes:panasonic:camera::name", "Lens Serial Number", "string");
            AddInfo("makernotes:panasonic:camera::name", "Accessory Type", "string");
            AddInfo("makernotes:panasonic:camera::name", "Accessory Serial Number", "string");
            AddInfo("makernotes:panasonic:camera::name", "Transform", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Intelligent Exposure", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Lens Firmware Version", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Flash Warning", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Recognized Face Flags", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Title", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Baby Name", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Location", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Country", "undef");
            AddInfo("makernotes:panasonic:camera::name", "State", "undef");
            AddInfo("makernotes:panasonic:camera::name", "City", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Landmark", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Intelligent Resolution", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "Burst Speed", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Intelligent D-Range", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Clear Retouch", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "City 2", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Manometer Pressure", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Photo Style", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Shading Compensation", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Accelerometer Z", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Accelerometer X", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Accelerometer Y", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "Roll Angle", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Pitch Angle", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Sweep Panorama Direction", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "Sweep Panorama Field Of View", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Timer Recording", "int8u");
            AddInfo("makernotes:panasonic:camera::name", "Internal ND Filter", "rational64u");
            AddInfo("makernotes:panasonic:camera::name", "HDR", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Shutter Type", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Clear Retouch Value", "rational64u");
            AddInfo("makernotes:panasonic:camera::name", "Touch AE", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:panasonic:camera::name", "Scene Mode", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "WB Red Level", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "WB Green Level", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "WB Blue Level", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Flash Fired", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Text Stamp", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Text Stamp", "int16u");
            AddInfo("makernotes:panasonic:camera::name", "Baby Age", "string");
            AddInfo("makernotes:panasonic:camera::name", "Transform", "undef");
        }


        static void InitTable572()
        {
            AddInfo("makernotes:panasonic:image::name", "Make", "string");
            AddInfo("makernotes:panasonic:image::name", "Camera Model Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Camera Model Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Camera Model Name", "string");
            AddInfo("makernotes:panasonic:image::name", "Version 1", "string");
            AddInfo("makernotes:panasonic:image::name", "Version 2", "string");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Test", "undef");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Width", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Height", "int16u");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Image", "undef");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Width", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Height", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Length", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Image", "undef");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Width", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Height", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Length", "int32urev");
            AddInfo("makernotes:panasonic:image::name", "Thumbnail Image", "undef");
        }


        static void InitTable573()
        {
            AddInfo("makernotes:leica:camera::name", "File Index", "int16u");
        }


        static void InitTable574()
        {
            AddInfo("makernotes:leica:camera::name", "Contrast", "int32u");
            AddInfo("makernotes:leica:camera::name", "Sharpening", "int32u");
            AddInfo("makernotes:leica:camera::name", "Saturation", "int32u");
            AddInfo("makernotes:leica:camera::name", "White Balance", "int32u");
            AddInfo("makernotes:leica:camera::name", "JPEG Quality", "int32u");
            AddInfo("makernotes:leica:camera::name", "WB RGB Levels", "rational64u");
            AddInfo("makernotes:leica:camera::name", "User Profile", "string");
            AddInfo("makernotes:leica:camera::name", "JPEG Size", "int32u");
            AddInfo("makernotes:leica:camera::name", "Serial Number", "string");
            AddInfo("makernotes:leica:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:leica:camera::name", "Base ISO", "int32u");
            AddInfo("makernotes:leica:camera::name", "Sensor Width", "int32u");
            AddInfo("makernotes:leica:camera::name", "Sensor Height", "int32u");
            AddInfo("makernotes:leica:camera::name", "Sensor Bit Depth", "int32u");
            AddInfo("makernotes:leica:camera::name", "Camera Temperature", "int32s");
            AddInfo("makernotes:leica:camera::name", "Lens Type", "int32u");
            AddInfo("makernotes:leica:camera::name", "Approximate F Number", "rational64u");
            AddInfo("makernotes:leica:camera::name", "Measured LV", "int32s");
            AddInfo("makernotes:leica:camera::name", "External Sensor Brightness Value", "int32s");
        }


        static void InitTable575()
        {
            AddInfo("makernotes:panasonic:image::name", "Maker Note Type", "string");
            AddInfo("makernotes:panasonic:image::name", "Gain", "int16u");
        }


        static void InitTable576()
        {
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Param 02", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Param 04", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Scale", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Correction", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Param 08", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Param 09", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion Param 11", "int16s");
            AddInfo("panasonicraw:panasonicraw:image::name", "Distortion N", "int16s");
        }


        static void InitTable577()
        {
            AddInfo("exif:ifd0:image::name", "Panasonic Raw Version", "undef");
            AddInfo("exif:subifd1:image::name", "Panasonic Raw Version", "undef");
            AddInfo("exif:exififd:image::name", "Panasonic Raw Version", "undef");
            AddInfo("exif:ifd0:image::name", "Sensor Width", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Width", "?");
            AddInfo("exif:exififd:image::name", "Sensor Width", "?");
            AddInfo("exif:ifd0:image::name", "Sensor Height", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Height", "?");
            AddInfo("exif:exififd:image::name", "Sensor Height", "?");
            AddInfo("exif:ifd0:image::name", "Sensor Top Border", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Top Border", "?");
            AddInfo("exif:exififd:image::name", "Sensor Top Border", "?");
            AddInfo("exif:ifd0:image::name", "Sensor Left Border", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Left Border", "?");
            AddInfo("exif:exififd:image::name", "Sensor Left Border", "?");
            AddInfo("exif:ifd0:image::name", "Sensor Bottom Border", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Bottom Border", "?");
            AddInfo("exif:exififd:image::name", "Sensor Bottom Border", "?");
            AddInfo("exif:ifd0:image::name", "Sensor Right Border", "?");
            AddInfo("exif:subifd1:image::name", "Sensor Right Border", "?");
            AddInfo("exif:exififd:image::name", "Sensor Right Border", "?");
            AddInfo("exif:ifd0:image::name", "Black Level 1", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level 1", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level 1", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level 2", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level 2", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level 2", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level 3", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level 3", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level 3", "int16u");
            AddInfo("exif:ifd0:image::name", "Linearity Limit Red", "int16u");
            AddInfo("exif:subifd1:image::name", "Linearity Limit Red", "int16u");
            AddInfo("exif:exififd:image::name", "Linearity Limit Red", "int16u");
            AddInfo("exif:ifd0:image::name", "Linearity Limit Green", "int16u");
            AddInfo("exif:subifd1:image::name", "Linearity Limit Green", "int16u");
            AddInfo("exif:exififd:image::name", "Linearity Limit Green", "int16u");
            AddInfo("exif:ifd0:image::name", "Linearity Limit Blue", "int16u");
            AddInfo("exif:subifd1:image::name", "Linearity Limit Blue", "int16u");
            AddInfo("exif:exififd:image::name", "Linearity Limit Blue", "int16u");
            AddInfo("exif:ifd0:image::name", "Red Balance", "int16u");
            AddInfo("exif:subifd1:image::name", "Red Balance", "int16u");
            AddInfo("exif:exififd:image::name", "Red Balance", "int16u");
            AddInfo("exif:ifd0:image::name", "Blue Balance", "int16u");
            AddInfo("exif:subifd1:image::name", "Blue Balance", "int16u");
            AddInfo("exif:exififd:image::name", "Blue Balance", "int16u");
            AddInfo("exif:ifd0:image::name", "ISO", "int16u");
            AddInfo("exif:subifd1:image::name", "ISO", "int16u");
            AddInfo("exif:exififd:image::name", "ISO", "int16u");
            AddInfo("exif:ifd0:image::name", "High ISO Multiplier Red", "int16u");
            AddInfo("exif:subifd1:image::name", "High ISO Multiplier Red", "int16u");
            AddInfo("exif:exififd:image::name", "High ISO Multiplier Red", "int16u");
            AddInfo("exif:ifd0:image::name", "High ISO Multiplier Green", "int16u");
            AddInfo("exif:subifd1:image::name", "High ISO Multiplier Green", "int16u");
            AddInfo("exif:exififd:image::name", "High ISO Multiplier Green", "int16u");
            AddInfo("exif:ifd0:image::name", "High ISO Multiplier Blue", "int16u");
            AddInfo("exif:subifd1:image::name", "High ISO Multiplier Blue", "int16u");
            AddInfo("exif:exififd:image::name", "High ISO Multiplier Blue", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level Red", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level Red", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level Red", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level Green", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level Green", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level Green", "int16u");
            AddInfo("exif:ifd0:image::name", "Black Level Blue", "int16u");
            AddInfo("exif:subifd1:image::name", "Black Level Blue", "int16u");
            AddInfo("exif:exififd:image::name", "Black Level Blue", "int16u");
            AddInfo("exif:ifd0:image::name", "WB Red Level", "int16u");
            AddInfo("exif:subifd1:image::name", "WB Red Level", "int16u");
            AddInfo("exif:exififd:image::name", "WB Red Level", "int16u");
            AddInfo("exif:ifd0:image::name", "WB Green Level", "int16u");
            AddInfo("exif:subifd1:image::name", "WB Green Level", "int16u");
            AddInfo("exif:exififd:image::name", "WB Green Level", "int16u");
            AddInfo("exif:ifd0:image::name", "WB Blue Level", "int16u");
            AddInfo("exif:subifd1:image::name", "WB Blue Level", "int16u");
            AddInfo("exif:exififd:image::name", "WB Blue Level", "int16u");
            AddInfo("exif:ifd0:image::name", "Jpg From Raw", "undef");
            AddInfo("exif:subifd1:image::name", "Jpg From Raw", "undef");
            AddInfo("exif:exififd:image::name", "Jpg From Raw", "undef");
            AddInfo("exif:ifd0:image::name", "Make", "string");
            AddInfo("exif:subifd1:image::name", "Make", "string");
            AddInfo("exif:exififd:image::name", "Make", "string");
            AddInfo("exif:ifd0:image::name", "Camera Model Name", "string");
            AddInfo("exif:subifd1:image::name", "Camera Model Name", "string");
            AddInfo("exif:exififd:image::name", "Camera Model Name", "string");
            AddInfo("exif:ifd0:image::name", "Strip Offsets", "?");
            AddInfo("exif:subifd1:image::name", "Strip Offsets", "?");
            AddInfo("exif:exififd:image::name", "Strip Offsets", "?");
            AddInfo("exif:ifd0:image::name", "Orientation", "int16u");
            AddInfo("exif:subifd1:image::name", "Orientation", "int16u");
            AddInfo("exif:exififd:image::name", "Orientation", "int16u");
            AddInfo("exif:ifd0:image::name", "Rows Per Strip", "?");
            AddInfo("exif:subifd1:image::name", "Rows Per Strip", "?");
            AddInfo("exif:exififd:image::name", "Rows Per Strip", "?");
            AddInfo("exif:ifd0:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:subifd1:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:exififd:image::name", "Strip Byte Counts", "?");
            AddInfo("exif:ifd0:image::name", "Raw Data Offset", "?");
            AddInfo("exif:subifd1:image::name", "Raw Data Offset", "?");
            AddInfo("exif:exififd:image::name", "Raw Data Offset", "?");
            AddInfo("exif:ifd0:image::name", "Application Notes", "int8u");
            AddInfo("exif:subifd1:image::name", "Application Notes", "int8u");
            AddInfo("exif:exififd:image::name", "Application Notes", "int8u");
            AddInfo("exif:ifd0:image::name", "IPTC-NAA", "int32u");
            AddInfo("exif:subifd1:image::name", "IPTC-NAA", "int32u");
            AddInfo("exif:exififd:image::name", "IPTC-NAA", "int32u");
        }


        static void InitTable578()
        {
            AddInfo("panasonicraw:panasonicraw:other::name", "Num WB Entries", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 1", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 1", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 2", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 2", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 3", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 3", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 4", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 4", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 5", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 5", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 6", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 6", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 7", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RB Levels 7", "int16u");
        }


        static void InitTable579()
        {
            AddInfo("panasonicraw:panasonicraw:other::name", "Num WB Entries", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 1", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 1", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 2", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 2", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 3", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 3", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 4", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 4", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 5", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 5", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 6", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 6", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB Type 7", "int16u");
            AddInfo("panasonicraw:panasonicraw:other::name", "WB RGB Levels 7", "int16u");
        }


        static void InitTable580()
        {
            AddInfo("makernotes:pentax:camera::name", "AE Exposure Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE ISO", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Xv", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AEB Xv", "int8s");
            AddInfo("makernotes:pentax:camera::name", "AE Min Exposure Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Program Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Flags", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Aperture Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Min Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Metering Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE White Balance", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Metering Mode 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Flash Exposure Comp. Setting", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Level Indicator", "int8u");
        }


        static void InitTable581()
        {
            AddInfo("makernotes:pentax:camera::name", "AE Exposure Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE ISO", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Xv", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AEB Xv", "int8s");
            AddInfo("makernotes:pentax:camera::name", "AE Error", "int8s");
            AddInfo("makernotes:pentax:camera::name", "AE Aperture Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Scene Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Min Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Min Exposure Time", "int8u");
        }


        static void InitTable582()
        {
            AddInfo("makernotes:pentax:camera::name", "AE Exposure Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE ISO", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Max Aperture 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Min Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AE Min Exposure Time", "int8u");
        }


        static void InitTable583()
        {
            AddInfo("makernotes:pentax:camera::name", "AF Points Unknown 1", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Points Unknown 2", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Predictor", "int16s");
            AddInfo("makernotes:pentax:camera::name", "AF Defocus", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AF Integration Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AF Points In Focus", "int8u");
        }


        static void InitTable584()
        {
            AddInfo("makernotes:pentax:camera::name", "White Balance Auto Adjustment", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Tungsten AWB", "int8u");
        }


        static void InitTable585()
        {
            AddInfo("makernotes:pentax:camera::name", "Power Source", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery State", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery State", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery State", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Grip Battery State", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Grip Battery State", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery A/D No Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery A/D No Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery Voltage 1", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery A/D Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery A/D Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Grip Battery A/D No Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery Voltage 2", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Grip Battery A/D Load", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery Voltage 3", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Body Battery Voltage 4", "int16u");
        }


        static void InitTable586()
        {
            AddInfo("makernotes:pentax:camera::name", "Pentax Model ID", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Manufacture Date", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Production Code", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Internal Serial Number", "int32u");
        }


        static void InitTable587()
        {
            AddInfo("makernotes:pentax:camera::name", "Picture Mode 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Program Line", "int8u");
            AddInfo("makernotes:pentax:camera::name", "EV Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "E-Dial In Program", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Aperture Ring Use", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Flash Options", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Metering Mode 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AF Point Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Focus Mode 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AF Point Selected 2", "int16u");
            AddInfo("makernotes:pentax:camera::name", "ISO Floor", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Drive Mode 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Exposure Bracket Step Size", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Bracket Shot Number", "int8u");
            AddInfo("makernotes:pentax:camera::name", "White Balance Set", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Multiple Exposure Set", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Raw And Jpg Recording", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Jpg Recorded Pixels", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Link AE To AF Point", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sensitivity Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "ISO Auto", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Flash Options 2", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Metering Mode 3", "int8u");
            AddInfo("makernotes:pentax:camera::name", "SR Active", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Rotation", "int8u");
            AddInfo("makernotes:pentax:camera::name", "ISO Setting", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sensitivity Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Tv Exposure Time Setting", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Av Aperture Setting", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sv ISO Setting", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Base Exposure Compensation", "int8u");
        }


        static void InitTable588()
        {
            AddInfo("makernotes:pentax:image::name", "WB Shift AB", "int8s");
            AddInfo("makernotes:pentax:image::name", "WB Shift GM", "int8s");
        }


        static void InitTable589()
        {
            AddInfo("makernotes:pentax:camera::name", "EV Steps", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sensitivity Steps", "int8u");
        }


        static void InitTable590()
        {
            AddInfo("makernotes:pentax:camera::name", "Faces Detected", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Face Position", "int8u");
        }


        static void InitTable591()
        {
            AddInfo("makernotes:pentax:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 8 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 9 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 10 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 11 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 12 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 13 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 14 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 15 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 16 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 17 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 18 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 19 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 20 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 21 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 22 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 23 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 24 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 25 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 26 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 27 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 28 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 29 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 30 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 31 Position", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 32 Position", "int16u");
        }


        static void InitTable592()
        {
            AddInfo("makernotes:pentax:image::name", "Face 1 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 2 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 3 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 4 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 5 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 6 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 7 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 8 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 9 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 10 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 11 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 12 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 13 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 14 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 15 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 16 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 17 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 18 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 19 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 20 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 21 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 22 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 23 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 24 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 25 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 26 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 27 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 28 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 29 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 30 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 31 Size", "int16u");
            AddInfo("makernotes:pentax:image::name", "Face 32 Size", "int16u");
        }


        static void InitTable593()
        {
            AddInfo("makernotes:pentax:image::name", "Source Directory Index", "int16u");
            AddInfo("makernotes:pentax:image::name", "Source File Index", "int16u");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 01", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 02", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 03", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 04", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 05", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 06", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 07", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 08", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 09", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 10", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 11", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 12", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 13", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 14", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 15", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 16", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 17", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 18", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 19", "undef");
            AddInfo("makernotes:pentax:image::name", "Digital Filter 20", "undef");
        }


        static void InitTable594()
        {
            AddInfo("makernotes:pentax:camera::name", "Flash Status", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Internal Flash Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "External Flash Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Internal Flash Strength", "int8u");
            AddInfo("makernotes:pentax:camera::name", "TTL DA A Up", "int8u");
            AddInfo("makernotes:pentax:camera::name", "TTL DA A Down", "int8u");
            AddInfo("makernotes:pentax:camera::name", "TTL DA B Up", "int8u");
            AddInfo("makernotes:pentax:camera::name", "TTL DA B Down", "int8u");
            AddInfo("makernotes:pentax:camera::name", "External Flash Guide Number", "int8u");
            AddInfo("makernotes:pentax:camera::name", "External Flash Exposure Comp", "int8u");
            AddInfo("makernotes:pentax:camera::name", "External Flash Bounce", "int8u");
        }


        static void InitTable595()
        {
            AddInfo("makernotes:pentax:camera::name", "Model", "string");
        }


        static void InitTable596()
        {
            AddInfo("makernotes:pentax:camera::name", "Make", "string");
            AddInfo("makernotes:pentax:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:pentax:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "Date Time 1", "string");
            AddInfo("makernotes:pentax:camera::name", "Date Time 2", "string");
            AddInfo("makernotes:pentax:camera::name", "Thumbnail Width", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Thumbnail Height", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Thumbnail Image", "undef");
        }


        static void InitTable597()
        {
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB Daylight", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 01", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 02", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 03", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 04", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 05", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 06", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 07", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 08", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 09", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 10", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 11", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 12", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 13", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 14", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 15", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Kelvin WB 16", "int16u");
        }


        static void InitTable598()
        {
            AddInfo("makernotes:pentax:image::name", "Distortion Correction", "int8u");
            AddInfo("makernotes:pentax:image::name", "Chromatic Aberration Correction", "int8u");
            AddInfo("makernotes:pentax:image::name", "Peripheral Illumination Corr", "int8u");
            AddInfo("makernotes:pentax:image::name", "Diffraction Correction", "int8u");
        }


        static void InitTable599()
        {
            AddInfo("makernotes:pentax:camera::name", "Auto Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Min Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Lens F Stops", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Lens Kind", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC1", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Min Focus Distance", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Focus Range Index", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC3", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC4", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC5", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC6", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC7", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Focal Length", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Nominal Max Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Nominal Min Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC10", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC11", "int8u");
            AddInfo("makernotes:pentax:camera::name", "New Lens Data Hook", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC12", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Max Aperture", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC14", "int8u");
            AddInfo("makernotes:pentax:camera::name", "LC15", "int8u");
        }


        static void InitTable600()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable601()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable602()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable603()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable604()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable605()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Model", "string");
            AddInfo("makernotes:pentax:camera::name", "Lens Info", "string");
        }


        static void InitTable606()
        {
            AddInfo("makernotes:pentax:camera::name", "Lens Type", "int8u");
        }


        static void InitTable607()
        {
            AddInfo("makernotes:pentax:camera::name", "Level Orientation", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Composition Adjust", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Roll Angle", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Pitch Angle", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Composition Adjust X", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Composition Adjust Y", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Composition Adjust Rotation", "int8s");
        }


        static void InitTable608()
        {
            AddInfo("makernotes:pentax:camera::name", "Make", "string");
            AddInfo("makernotes:pentax:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:pentax:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:pentax:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "ISO", "int16u");
        }


        static void InitTable609()
        {
            AddInfo("makernotes:pentax:camera::name", "Pentax Version", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Pentax Model Type", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Preview Image Size", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Pentax Model ID", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Date", "undef");
            AddInfo("makernotes:pentax:camera::name", "Time", "undef");
            AddInfo("makernotes:pentax:camera::name", "Quality", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Pentax Image Size", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Picture Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Point Selected", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Point Selected", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Points In Focus", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Points In Focus", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Focus Position", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:pentax:camera::name", "F Number", "int16u");
            AddInfo("makernotes:pentax:camera::name", "ISO", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Light Reading", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Exposure Compensation", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Auto Bracketing", "int16u");
            AddInfo("makernotes:pentax:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:pentax:camera::name", "White Balance Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Blue Balance", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Red Balance", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Digital Zoom", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:pentax:camera::name", "World Time Location", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Hometown City", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Destination City", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Hometown DST", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Destination DST", "int16u");
            AddInfo("makernotes:pentax:camera::name", "DSP Firmware Version", "undef");
            AddInfo("makernotes:pentax:camera::name", "CPU Firmware Version", "undef");
            AddInfo("makernotes:pentax:camera::name", "Frame Number", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Effective LV", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Effective LV", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Image Editing", "undef");
            AddInfo("makernotes:pentax:camera::name", "Picture Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Drive Mode", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sensor Size", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Image Area Offset", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Raw Image Size", "int16u");
            AddInfo("makernotes:pentax:camera::name", "AF Points In Focus", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Data Scaling", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Preview Image Borders", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Sensitivity Adjust", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Image Edit Count", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Camera Temperature", "int8s");
            AddInfo("makernotes:pentax:camera::name", "AE Lock", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Flash Exposure Comp", "int32s");
            AddInfo("makernotes:pentax:camera::name", "Flash Exposure Comp", "int8s");
            AddInfo("makernotes:pentax:camera::name", "Image Tone", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Color Temperature", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Daylight", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Shade", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Cloudy", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Tungsten", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Fluorescent D", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Fluorescent N", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Fluorescent W", "undef");
            AddInfo("makernotes:pentax:camera::name", "Color Temp Flash", "undef");
            AddInfo("makernotes:pentax:camera::name", "Shutter Count", "undef");
            AddInfo("makernotes:pentax:camera::name", "Raw Development Process", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Hue", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Dynamic Range Expansion", "undef");
            AddInfo("makernotes:pentax:camera::name", "High/Low Key Adj", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Contrast Highlight", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Contrast Shadow", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Contrast Highlight/Shadow Adj", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Fine Sharpness", "int8u");
            AddInfo("makernotes:pentax:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:pentax:camera::name", "AF Adjustment", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Monochrome Filter Effect", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Monochrome Toning", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Face Detect", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Shadow Correction", "int8u");
            AddInfo("makernotes:pentax:camera::name", "ISO Auto Parameters", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Cross Process", "int8u");
            AddInfo("makernotes:pentax:camera::name", "White Level", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Bleach Bypass Toning", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Aspect Ratio", "?");
            AddInfo("makernotes:pentax:camera::name", "Blur Control", "int8u");
            AddInfo("makernotes:pentax:camera::name", "HDR", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Neutral Density Filter", "int8u");
            AddInfo("makernotes:pentax:camera::name", "ISO", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Black Point", "int16u");
            AddInfo("makernotes:pentax:camera::name", "White Point", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Color Matrix A", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Color Matrix B", "int16s");
            AddInfo("makernotes:pentax:camera::name", "AE Metering Segments", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Flash Metering Segments", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Slave Flash Metering Segments", "int8u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Daylight", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Shade", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Cloudy", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Tungsten", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent D", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent N", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent W", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Flash", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Saturation Info", "?");
            AddInfo("makernotes:pentax:camera::name", "Huffman Table", "?");
            AddInfo("makernotes:pentax:camera::name", "Serial Number", "string");
            AddInfo("makernotes:pentax:camera::name", "Artist", "string");
            AddInfo("makernotes:pentax:camera::name", "Copyright", "string");
            AddInfo("makernotes:pentax:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:pentax:camera::name", "Contrast Detect AF Area", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Cross Process Params", "undef");
            AddInfo("makernotes:pentax:camera::name", "Data Dump", "?");
            AddInfo("makernotes:pentax:camera::name", "Tone Curve", "?");
            AddInfo("makernotes:pentax:camera::name", "Tone Curves", "?");
            AddInfo("makernotes:pentax:camera::name", "Unknown Block", "undef");
        }


        static void InitTable610()
        {
            AddInfo("makernotes:pentax:camera::name", "Make", "string");
            AddInfo("makernotes:pentax:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:pentax:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:pentax:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:pentax:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Date Time 1", "string");
            AddInfo("makernotes:pentax:camera::name", "Date Time 2", "string");
            AddInfo("makernotes:pentax:camera::name", "ISO", "int32u");
            AddInfo("makernotes:pentax:camera::name", "GPS Version ID", "undef");
            AddInfo("makernotes:pentax:camera::name", "GPS Latitude Ref", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Latitude", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "GPS Longitude Ref", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Longitude", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "GPS Altitude Ref", "int8u");
            AddInfo("makernotes:pentax:camera::name", "GPS Altitude", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "GPS Time Stamp", "rational64u");
            AddInfo("makernotes:pentax:camera::name", "GPS Satellites", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Status", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Measure Mode", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Map Datum", "string");
            AddInfo("makernotes:pentax:camera::name", "GPS Date Stamp", "string");
            AddInfo("makernotes:pentax:camera::name", "Audio Codec ID", "string");
            AddInfo("makernotes:pentax:camera::name", "Preview Image", "undef");
        }


        static void InitTable611()
        {
            AddInfo("makernotes:pentax:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Preview Image", "undef");
        }


        static void InitTable612()
        {
            AddInfo("makernotes:pentax:camera::name", "Maker Note Version", "undef");
        }


        static void InitTable613()
        {
            AddInfo("makernotes:pentax:camera::name", "SR Result", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Shake Reduction", "int8u");
            AddInfo("makernotes:pentax:camera::name", "SR Half Press Time", "int8u");
            AddInfo("makernotes:pentax:camera::name", "SR Focal Length", "int8u");
        }


        static void InitTable614()
        {
            AddInfo("makernotes:pentax:camera::name", "SR Result", "int8u");
            AddInfo("makernotes:pentax:camera::name", "Shake Reduction", "int8u");
        }


        static void InitTable615()
        {
            AddInfo("makernotes:pentax:camera::name", "Camera Orientation", "int8u");
        }


        static void InitTable616()
        {
            AddInfo("makernotes:pentax:camera::name", "Camera Temperature 2", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Camera Temperature 3", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Camera Temperature 4", "int16s");
            AddInfo("makernotes:pentax:camera::name", "Camera Temperature 5", "int16s");
        }


        static void InitTable617()
        {
            AddInfo("makernotes:pentax:time::name", "World Time Location", "int8u");
            AddInfo("makernotes:pentax:time::name", "Hometown DST", "int8u");
            AddInfo("makernotes:pentax:time::name", "Destination DST", "int8u");
            AddInfo("makernotes:pentax:time::name", "Hometown City", "int8u");
            AddInfo("makernotes:pentax:time::name", "Destination City", "int8u");
        }


        static void InitTable618()
        {
            AddInfo("makernotes:pentax:camera::name", "Recording Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Quality", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:pentax:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Digital Zoom", "int32u");
            AddInfo("makernotes:pentax:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:pentax:camera::name", "ISO", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Color Filter", "int16u");
            AddInfo("makernotes:pentax:camera::name", "Hometown City Code", "undef");
            AddInfo("makernotes:pentax:camera::name", "Destination City Code", "undef");
        }


        static void InitTable619()
        {
            AddInfo("makernotes:pentax:camera::name", "Firmware Version", "?");
        }


        static void InitTable620()
        {
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Daylight", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Shade", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Cloudy", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Tungsten", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent D", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent N", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent W", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Flash", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Fluorescent L", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels Unknown", "int16u");
            AddInfo("makernotes:pentax:camera::name", "WB RGGB Levels User Selected", "int16u");
        }


        static void InitTable621()
        {
            AddInfo("makernotes:phaseone:camera::name", "Camera Orientation", "?");
            AddInfo("makernotes:phaseone:camera::name", "Serial Number", "?");
            AddInfo("makernotes:phaseone:camera::name", "ISO", "?");
            AddInfo("makernotes:phaseone:camera::name", "Color Matrix 1", "float");
            AddInfo("makernotes:phaseone:camera::name", "WB RGB Levels", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Width", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Height", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Left Margin", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Top Margin", "?");
            AddInfo("makernotes:phaseone:camera::name", "Image Width", "?");
            AddInfo("makernotes:phaseone:camera::name", "Image Height", "?");
            AddInfo("makernotes:phaseone:camera::name", "Raw Format", "?");
            AddInfo("makernotes:phaseone:camera::name", "Raw Data", "?");
            AddInfo("makernotes:phaseone:camera::name", "Date/Time Original", "int32u");
            AddInfo("makernotes:phaseone:camera::name", "Image Number", "?");
            AddInfo("makernotes:phaseone:camera::name", "Software", "?");
            AddInfo("makernotes:phaseone:camera::name", "System", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Temperature", "?");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Temperature 2", "?");
            AddInfo("makernotes:phaseone:camera::name", "Unknown Date", "int32u");
            AddInfo("makernotes:phaseone:camera::name", "Strip Offsets", "?");
            AddInfo("makernotes:phaseone:camera::name", "Black Level", "?");
            AddInfo("makernotes:phaseone:camera::name", "Split Column", "?");
            AddInfo("makernotes:phaseone:camera::name", "Black Level Data", "?");
            AddInfo("makernotes:phaseone:camera::name", "Phase One 0x0225", "int16s");
            AddInfo("makernotes:phaseone:camera::name", "Color Matrix 2", "?");
            AddInfo("makernotes:phaseone:camera::name", "Firmware Versions", "?");
            AddInfo("makernotes:phaseone:camera::name", "Shutter Speed Value", "?");
            AddInfo("makernotes:phaseone:camera::name", "Aperture Value", "?");
            AddInfo("makernotes:phaseone:camera::name", "Exposure Compensation", "float");
            AddInfo("makernotes:phaseone:camera::name", "Focal Length", "int32u");
            AddInfo("makernotes:phaseone:camera::name", "Camera Model", "?");
            AddInfo("makernotes:phaseone:camera::name", "Lens Model", "?");
            AddInfo("makernotes:phaseone:camera::name", "Max Aperture Value", "?");
            AddInfo("makernotes:phaseone:camera::name", "Min Aperture Value", "?");
        }


        static void InitTable622()
        {
            AddInfo("makernotes:phaseone:camera::name", "Sensor Defects", "undef");
            AddInfo("makernotes:phaseone:camera::name", "All Color Flat Field 1", "undef");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x0404", "string");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x0405", "string");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x0406", "string");
            AddInfo("makernotes:phaseone:camera::name", "Serial Number", "string");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x0408", "float");
            AddInfo("makernotes:phaseone:camera::name", "Red Blue Flat Field", "undef");
            AddInfo("makernotes:phaseone:camera::name", "All Color Flat Field 2", "undef");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x0413", "double");
            AddInfo("makernotes:phaseone:camera::name", "All Color Flat Field 3", "undef");
            AddInfo("makernotes:phaseone:camera::name", "Linearization Coefficients 1", "float");
            AddInfo("makernotes:phaseone:camera::name", "Linearization Coefficients 2", "float");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x041c", "float");
            AddInfo("makernotes:phaseone:camera::name", "Sensor Calibration 0x041e", "undef");
        }


        static void InitTable623()
        {
            AddInfo("photocd:photocd:image::name", "Specification Version", "int8u");
            AddInfo("photocd:photocd:image::name", "Authoring Software Release", "int8u");
            AddInfo("photocd:photocd:image::name", "Image Magnification Descriptor", "int8u");
            AddInfo("photocd:photocd:image::name", "Create Date", "int32u");
            AddInfo("photocd:photocd:image::name", "Modify Date", "int32u");
            AddInfo("photocd:photocd:image::name", "Image Medium", "int8u");
            AddInfo("photocd:photocd:image::name", "Product Type", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Vendor ID", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Product ID", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Firmware Version", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Firmware Date", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Serial Number", "string");
            AddInfo("photocd:photocd:image::name", "Scanner Pixel Size", "undef");
            AddInfo("photocd:photocd:image::name", "Image Workstation Make", "string");
            AddInfo("photocd:photocd:image::name", "Character Set", "int8u");
            AddInfo("photocd:photocd:image::name", "Character Escape Sequence", "undef");
            AddInfo("photocd:photocd:image::name", "Photo Finisher Name", "string");
            AddInfo("photocd:photocd:image::name", "Has SBA", "undef");
            AddInfo("photocd:photocd:image::name", "Scene Balance Algorithm Revision", "int8u");
            AddInfo("photocd:photocd:image::name", "Scene Balance Algorithm Command", "int8u");
            AddInfo("photocd:photocd:image::name", "Scene Balance Algorithm Film ID", "int16u");
            AddInfo("photocd:photocd:image::name", "Copyright Status", "int8u");
            AddInfo("photocd:photocd:image::name", "Copyright File Name", "string");
            AddInfo("photocd:photocd:image::name", "Orientation", "int8u");
            AddInfo("photocd:photocd:image::name", "Image Width", "int8u");
            AddInfo("photocd:photocd:image::name", "Image Height", "int8u");
            AddInfo("photocd:photocd:image::name", "Compression Class", "int8u");
        }


        static void InitTable624()
        {
            AddInfo("photomechanic:photomechanic:image::name", "Raw Crop Left", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Raw Crop Top", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Raw Crop Right", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Raw Crop Bottom", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Constrained Crop Width", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Constrained Crop Height", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Frame Num", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Rotation", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Crop Left", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Crop Top", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Crop Right", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Crop Bottom", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Tagged", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Color Class", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Rating", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Preview Crop Left", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Preview Crop Top", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Preview Crop Right", "int32s");
            AddInfo("photomechanic:photomechanic:image::name", "Preview Crop Bottom", "int32s");
        }


        static void InitTable625()
        {
            AddInfo("xmp:xmp-photomech:image::name", "Color Class", "integer");
            AddInfo("xmp:xmp-photomech:image::name", "Country Code", "string");
            AddInfo("xmp:xmp-photomech:image::name", "Edit Status", "string");
            AddInfo("xmp:xmp-photomech:image::name", "PM Version", "string");
            AddInfo("xmp:xmp-photomech:image::name", "Prefs", "string");
            AddInfo("xmp:xmp-photomech:image::name", "Tagged", "boolean");
            AddInfo("xmp:xmp-photomech:image::name", "Time Created", "string");
        }


        static void InitTable626()
        {
            AddInfo("photoshop:photoshop:image::name", "Num Channels", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Image Height", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Image Width", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Bit Depth", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Color Mode", "int16u");
        }


        static void InitTable627()
        {
            AddInfo("photoshop:photoshop:image::name", "Photoshop Quality", "int16s");
            AddInfo("photoshop:photoshop:image::name", "Photoshop Format", "int16s");
            AddInfo("photoshop:photoshop:image::name", "Progressive Scans", "int16s");
        }


        static void InitTable628()
        {
            AddInfo("photoshop:photoshop:image::name", "Photoshop 2 Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Macintosh Print Info", "?");
            AddInfo("photoshop:photoshop:image::name", "XML Data", "?");
            AddInfo("photoshop:photoshop:image::name", "Photoshop 2 Color Table", "?");
            AddInfo("photoshop:photoshop:image::name", "Alpha Channels Names", "?");
            AddInfo("photoshop:photoshop:image::name", "Display Info", "?");
            AddInfo("photoshop:photoshop:image::name", "P String Caption", "?");
            AddInfo("photoshop:photoshop:image::name", "Border Information", "?");
            AddInfo("photoshop:photoshop:image::name", "Background Color", "?");
            AddInfo("photoshop:photoshop:image::name", "Print Flags", "int8u");
            AddInfo("photoshop:photoshop:image::name", "BW Halftoning Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Color Halftoning Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Duotone Halftoning Info", "?");
            AddInfo("photoshop:photoshop:image::name", "BW Transfer Func", "?");
            AddInfo("photoshop:photoshop:image::name", "Color Transfer Funcs", "?");
            AddInfo("photoshop:photoshop:image::name", "Duotone Transfer Funcs", "?");
            AddInfo("photoshop:photoshop:image::name", "Duotone Image Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Effective BW", "int8u");
            AddInfo("photoshop:photoshop:image::name", "Obsolete Photoshop Tag 1", "?");
            AddInfo("photoshop:photoshop:image::name", "EPS Options", "?");
            AddInfo("photoshop:photoshop:image::name", "Quick Mask Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Obsolete Photoshop Tag 2", "?");
            AddInfo("photoshop:photoshop:image::name", "Target Layer ID", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Working Path", "?");
            AddInfo("photoshop:photoshop:image::name", "Layers Group Info", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Obsolete Photoshop Tag 3", "?");
            AddInfo("photoshop:photoshop:image::name", "Raw Image Mode", "?");
            AddInfo("photoshop:photoshop:image::name", "Grid Guides Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Photoshop BGR Thumbnail", "undef");
            AddInfo("photoshop:photoshop:image::name", "Copyright Flag", "int8u");
            AddInfo("photoshop:photoshop:image::name", "URL", "string");
            AddInfo("photoshop:photoshop:image::name", "Photoshop Thumbnail", "undef");
            AddInfo("photoshop:photoshop:image::name", "Global Angle", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Color Samplers Resource", "?");
            AddInfo("photoshop:photoshop:image::name", "Watermark", "int8u");
            AddInfo("photoshop:photoshop:image::name", "ICC Untagged", "int8u");
            AddInfo("photoshop:photoshop:image::name", "Effects Visible", "int8u");
            AddInfo("photoshop:photoshop:image::name", "Spot Halftone", "?");
            AddInfo("photoshop:photoshop:image::name", "IDs Base Value", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Unicode Alpha Names", "?");
            AddInfo("photoshop:photoshop:image::name", "Indexed Colour Table Count", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Transparent Index", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Global Altitude", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Slices", "?");
            AddInfo("photoshop:photoshop:image::name", "Workflow URL", "?");
            AddInfo("photoshop:photoshop:image::name", "Jump To XPEP", "?");
            AddInfo("photoshop:photoshop:image::name", "Alpha Identifiers", "?");
            AddInfo("photoshop:photoshop:image::name", "URL List", "?");
            AddInfo("photoshop:photoshop:image::name", "Version Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Exif Info 2", "?");
            AddInfo("photoshop:photoshop:image::name", "IPTC Digest", "string");
            AddInfo("photoshop:photoshop:image::name", "Print Scale", "?");
            AddInfo("photoshop:photoshop:image::name", "Pixel Aspect Ratio", "?");
            AddInfo("photoshop:photoshop:image::name", "Layer Comps", "?");
            AddInfo("photoshop:photoshop:image::name", "Alternate Duotone Colors", "?");
            AddInfo("photoshop:photoshop:image::name", "Alternate Spot Colors", "?");
            AddInfo("photoshop:photoshop:image::name", "Layer Selection IDs", "?");
            AddInfo("photoshop:photoshop:image::name", "HDR Toning Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Print Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Layer Groups Enabled ID", "int8u");
            AddInfo("photoshop:photoshop:image::name", "Color Samplers Resource 2", "?");
            AddInfo("photoshop:photoshop:image::name", "Measurement Scale", "?");
            AddInfo("photoshop:photoshop:image::name", "Timeline Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Sheet Disclosure", "?");
            AddInfo("photoshop:photoshop:image::name", "Display Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Onion Skins", "?");
            AddInfo("photoshop:photoshop:image::name", "Count Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Print Info 2", "?");
            AddInfo("photoshop:photoshop:image::name", "Print Style", "?");
            AddInfo("photoshop:photoshop:image::name", "Macintosh NS Print Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Windows DEVMODE", "?");
            AddInfo("photoshop:photoshop:image::name", "Auto Save File Path", "?");
            AddInfo("photoshop:photoshop:image::name", "Auto Save Format", "?");
            AddInfo("photoshop:photoshop:image::name", "Path Selection State", "?");
            AddInfo("photoshop:photoshop:image::name", "Clipping Path Name", "?");
            AddInfo("photoshop:photoshop:image::name", "Origin Path Info", "?");
            AddInfo("photoshop:photoshop:image::name", "Image Ready Variables", "?");
            AddInfo("photoshop:photoshop:image::name", "Image Ready Data Sets", "?");
            AddInfo("photoshop:photoshop:image::name", "Lightroom Workflow", "?");
            AddInfo("photoshop:photoshop:image::name", "Print Flags Info", "?");
        }


        static void InitTable629()
        {
            AddInfo("photoshop:photoshop:image::name", "X Resolution", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Displayed Units X", "int16u");
            AddInfo("photoshop:photoshop:image::name", "Y Resolution", "int32u");
            AddInfo("photoshop:photoshop:image::name", "Displayed Units Y", "int16u");
        }


        static void InitTable630()
        {
            AddInfo("postscript:postscript:image::name", "Author", "string");
            AddInfo("postscript:postscript:image::name", "Bounding Box", "?");
            AddInfo("postscript:postscript:image::name", "Copyright", "string");
            AddInfo("postscript:postscript:image::name", "Create Date", "string");
            AddInfo("postscript:postscript:image::name", "Creator", "string");
            AddInfo("postscript:postscript:image::name", "Embedded File Name", "?");
            AddInfo("postscript:postscript:image::name", "For", "string");
            AddInfo("postscript:postscript:image::name", "Image Data", "?");
            AddInfo("postscript:postscript:image::name", "Keywords", "string");
            AddInfo("postscript:postscript:image::name", "Modify Date", "string");
            AddInfo("postscript:postscript:image::name", "Pages", "?");
            AddInfo("postscript:postscript:image::name", "Routing", "string");
            AddInfo("postscript:postscript:image::name", "Subject", "string");
            AddInfo("postscript:postscript:image::name", "TIFF Preview", "?");
            AddInfo("postscript:postscript:image::name", "Title", "string");
            AddInfo("postscript:postscript:image::name", "Version", "string");
        }


        static void InitTable631()
        {
            AddInfo("printim:printim:printing::name", "PrintIM Version", "?");
        }


        static void InitTable632()
        {
            AddInfo("makernotes:qualcomm:camera::name", "HJR Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "HJR Max Num Frames", "?");
            AddInfo("makernotes:qualcomm:camera::name", "HJR N Reduction Flat", "?");
            AddInfo("makernotes:qualcomm:camera::name", "HJR N Reduction Texture", "?");
            AddInfo("makernotes:qualcomm:camera::name", "HJR One To Two Offset", "?");
            AddInfo("makernotes:qualcomm:camera::name", "HJR Texture Threshold", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Aggressiveness", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Current Exp Index", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Current Sensor Luma", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Exposure Index Adj Step", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC High Luma Region Count", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC High Luma Region Threshold", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Indoor Idx", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Luma Target", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Luma Tolerance", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Odoor Idx", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Bright Discarded", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Bright Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Bright Reduction", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Bright Threshold HI", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Bright Threshold LO", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Outdoor Gamma Index", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Snapshot Digital Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Snapshot Exposure Time Ms", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Snapshot Line Count", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Snapshot Sensor Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AEC Vfe Luma", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Boundary", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Collect End Stat", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Far End", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Fine Srch Points", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Fine Step", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Focus Time", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Gross Step", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Near End", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Pos Def Macro", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Pos Def Norm", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Position", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Process", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Reset Lens After Snap", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Steps Near Far", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Steps Near Infinity", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Test Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 34", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 35", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 36", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 37", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 38", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 39", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 40", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 41", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 42", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 43", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 44", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 45", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 46", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 47", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 48", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 49", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Positions 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 34", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 35", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 36", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 37", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 38", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 39", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 40", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 41", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 42", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 43", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 44", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 45", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 46", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 47", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 48", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 49", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Trace Stats 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Undershoot Protect", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Vfe Horz Offset", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Vfe Horz Width", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Vfe Metric Max", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Vfe Vert Height", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AF Vfe Vert Offset", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 0 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 0 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 1 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 1 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 2 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 2 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 3 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 3 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 4 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Faster 4 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Possible Frame Cnt", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 0 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 0 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 1 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 1 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 2 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 2 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 3 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 3 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 4 Exp Mod", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AFR Slower 4 Trigger", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Anti Bading Pixel Clk", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Anti Bading Pixel Clk Per Line", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Antibanding Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Detect", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Edge Filter A33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Lower Threshold", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Noise Filter A33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF3 Upper Threshold", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Brt Lo Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Brt Shrp Deg F1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Brt Shrp Deg F2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Brt Smth Percent", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Brt Up Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Exposure Index 1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Exposure Index 2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A34", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A35", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A41", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A42", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A43", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A44", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A45", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A51", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A52", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A53", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A54", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter1 A55", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A32", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A33", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A34", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A35", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A41", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A42", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A43", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A44", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A45", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A51", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A52", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A53", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A54", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter2 A55", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Filter Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Low Lo Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Low Shrp Deg F1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Low Shrp Deg F2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Low Smth Prcnt", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Low Up Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Luma Filter 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Max Exposure Index", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrm Lo Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrm Shrp Deg F1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrm Shrp Deg F2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrm Smth Prcnt", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrm Up Thres", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrmize Factor1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "ASF5 Nrmize Factor2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Aggressiveness", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Agw Grid Dist 2 Thresh", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Algorithm", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Ave Bg Ratio", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Ave Rg Ratio", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Adj Ref8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Blue Gain Ref8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Cc Bias", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Compact Cluster R2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Green Offset Bg", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Green Offset Rg", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Indoor Sample Influence", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe C1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe C2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe C3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe C4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe M1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe M2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe M3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe M4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe Max Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Lo Vfe Min Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Low Lig Col Cor Ena", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Max B Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Max G Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Max R Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Min B Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Min G Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Min R Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe C1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe C2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe C3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe C4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe M1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe M2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe M3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe M4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe Max Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Norm Vfe Min Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe C1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe C2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe C3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe C4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe M1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe M2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe M3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe M4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe Max Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Oudor Vfe Min Y", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Outdoor Sample Influence", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Prev Wb Bgain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Prev Wb Ggain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Prev Wb Rgain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Adj Ref8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Red Gain Ref8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Sample Decision", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Snapshot B Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "AWB Snapshot R Gain", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Blck Lvl Even Cols", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Blck Lvl Odd Cols", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Cam Mclk Hz", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Chro Thres 1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Chro Thres 2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Luma Thres 1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Luma Thres 2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Luma Thres 3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chro Sup Luma Thres 4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Chrom Supress", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Clip To Af Rato", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Curr Resol", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm A M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm A P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm B M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm B P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm C M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm C P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm D M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm D P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm K Cb", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Chrm K Cr", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Luma K", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Luma V0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Luma V1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Daylt Conv Luma V2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm A M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm A P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm B M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm B P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm C M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm C P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm D M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm D P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm K Cb", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Chrm K Cr", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Luma K", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Luma V0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Luma V1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Conv Luma V2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor C8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor K0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor K1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Cor K2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Luma Gamma Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Def Rgb Gamma Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Defect Pix Cor Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Defect Pix Max Thresh", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Defect Pix Min Thresh", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Discard Frst Frm", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Frm Skip Pttrn", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Gamma Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm A M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm A P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm B M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm B P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm C M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm C P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm D M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm D P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm K Cb", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Chrm K Cr", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Luma K", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Luma V0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Luma V1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Incand Conv Luma V2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "LA Detect", "?");
            AddInfo("makernotes:qualcomm:camera::name", "LA Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Max Prview Fps", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Max Video Fps", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Nghtsht Fps", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Nightshot Mode", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Outlier Distance", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Pclk Invert", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Prview Fps", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Prview Resol", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Blue Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Cx", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Cy", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Green Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Height", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Intervals", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Red Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Tbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 A Width", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Blue Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Cx", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Cy", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Green Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Height", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Intervals", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Red Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Tbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 D65 Width", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Blue Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Cx", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Cy", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Green Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Height", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Intervals", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Ctbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Red Stbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 00", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 10", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 11", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 12", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 13", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 14", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 15", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 16", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 17", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 18", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 19", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 01", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 20", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 21", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 22", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 23", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 24", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 25", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 26", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 27", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 28", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 29", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 02", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 30", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 31", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 03", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 04", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 05", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 06", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 07", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 08", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Tbl 09", "?");
            AddInfo("makernotes:qualcomm:camera::name", "R2 TL84 Width", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Rolloff Enable", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensor Fmt", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensor Type", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensr Ful Hght", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensr Ful Wdth", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensr Qtr Hght", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Sensr Qtr Wdth", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Snapshot Resol", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm A M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm A P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm B M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm B P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm C M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm C P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm D M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm D P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm K Cb", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Chrm K Cr", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Luma K", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Luma V0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Luma V1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "TL84 Conv Luma V2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Video Fps", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm A M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm A P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm B M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm B P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm C M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm C P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm D M", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm D P", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm K Cb", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Chrm K Cr", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Luma K", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Luma V0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Luma V1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Conv Luma V2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C2", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C3", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C4", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C5", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C6", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C7", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor C8", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor K0", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor K1", "?");
            AddInfo("makernotes:qualcomm:camera::name", "Yhi Ylo Cor K2", "?");
        }


        static void InitTable633()
        {
            AddInfo("quicktime:quicktime:audio::name", "Balance", "fixed16s");
        }


        static void InitTable634()
        {
            AddInfo("quicktime:quicktime:audio::name", "Audio Profile Version", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Track ID", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Codec", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Audio Codec Info", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Attributes", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Avg Bitrate", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Max Bitrate", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Sample Rate", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Channels", "int32u");
        }


        static void InitTable635()
        {
            AddInfo("quicktime:quicktime:audio::name", "Audio Format", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Audio Vendor ID", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Audio Channels", "int16u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Bits Per Sample", "int16u");
            AddInfo("quicktime:quicktime:audio::name", "Audio Sample Rate", "fixed32u");
        }


        static void InitTable636()
        {
            AddInfo("quicktime:quicktime:video::name", "Buffer Size", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Max Bitrate", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Average Bitrate", "int32u");
        }


        static void InitTable637()
        {
            AddInfo("quicktime:quicktime:video::name", "Compression", "?");
        }


        static void InitTable638()
        {
            AddInfo("quicktime:quicktime:video::name", "Clean Aperture Width", "rational64u");
            AddInfo("quicktime:quicktime:video::name", "Clean Aperture Height", "rational64u");
            AddInfo("quicktime:quicktime:video::name", "Clean Aperture Offset X", "rational64u");
            AddInfo("quicktime:quicktime:video::name", "Clean Aperture Offset Y", "rational64u");
        }


        static void InitTable639()
        {
            AddInfo("quicktime:quicktime:other::name", "URL", "undef");
            AddInfo("quicktime:quicktime:other::name", "URN", "undef");
        }


        static void InitTable640()
        {
            AddInfo("quicktime:quicktime:audio::name", "Encoder Vendor", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Encoder Version", "int8u");
        }


        static void InitTable641()
        {
            AddInfo("quicktime:quicktime:audio::name", "Audio Available Bit Rate Range", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Bit Rate Control Mode", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Extend Frequencies", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Current Target Bit Rate", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Component Version", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Available Number Channels", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Is Initialized", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Does Sample Rate Conversion", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Minimum Delay Mode", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Minimum Number Input Packets", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Minimum Number Output Packets", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Output Precedence", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Zero Frames Padded", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Maximum Packet Byte Size", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Requires Packet Description", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Packet Frame Size", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Codec Prime Method", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Quality Setting", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Input Buffer Size", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Used Input Buffer Size", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Use Recommended Sample Rate", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio VBR Quality", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Encoding Params Version", "?");
            AddInfo("quicktime:quicktime:audio::name", "Audio Has Variable Packet Byte Sizes", "?");
        }


        static void InitTable642()
        {
            AddInfo("quicktime:quicktime:video::name", "File Profile Version", "int32u");
            AddInfo("quicktime:quicktime:video::name", "File Function Flags", "int32u");
        }


        static void InitTable643()
        {
            AddInfo("quicktime:quicktime:video::name", "Major Brand", "undef");
            AddInfo("quicktime:quicktime:video::name", "Minor Version", "undef");
            AddInfo("quicktime:quicktime:video::name", "Compatible Brands", "undef");
        }


        static void InitTable644()
        {
            AddInfo("quicktime:makernotes:image::name", "Preview Image Width", "int32u");
            AddInfo("quicktime:makernotes:image::name", "Preview Image Height", "int32u");
            AddInfo("quicktime:makernotes:image::name", "Preview Image Length", "int32u");
            AddInfo("quicktime:makernotes:image::name", "Serial Number", "string");
            AddInfo("quicktime:makernotes:image::name", "Preview Image", "undef");
        }


        static void InitTable645()
        {
            AddInfo("quicktime:quicktime:other::name", "Text", "?");
        }


        static void InitTable646()
        {
            AddInfo("quicktime:quicktime:video::name", "Gen Media Version", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Gen Flags", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Gen Graphics Mode", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Gen Op Color", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Gen Balance", "fixed16s");
        }


        static void InitTable647()
        {
            AddInfo("quicktime:quicktime:video::name", "Unknown slmt", "int32u");
        }


        static void InitTable648()
        {
            AddInfo("quicktime:quicktime:video::name", "Handler Class", "undef");
            AddInfo("quicktime:quicktime:video::name", "Handler Type", "undef");
            AddInfo("quicktime:quicktime:video::name", "Handler Vendor ID", "undef");
            AddInfo("quicktime:quicktime:video::name", "Handler Description", "string");
        }


        static void InitTable649()
        {
            AddInfo("quicktime:quicktime:other::name", "Max PDU Size", "int16u");
            AddInfo("quicktime:quicktime:other::name", "Avg PDU Size", "int16u");
            AddInfo("quicktime:quicktime:other::name", "Max Bitrate", "int32u");
            AddInfo("quicktime:quicktime:other::name", "Avg Bitrate", "int32u");
        }


        static void InitTable650()
        {
            AddInfo("quicktime:quicktime:video::name", "Realtime Streaming Protocol", "?");
            AddInfo("quicktime:quicktime:video::name", "Streaming Data Protocol", "?");
        }


        static void InitTable651()
        {
            AddInfo("quicktime:quicktime:other::name", "Hint Format", "undef");
            AddInfo("quicktime:quicktime:other::name", "Hint Track Version", "int16u");
            AddInfo("quicktime:quicktime:other::name", "Max Packet Size", "int32u");
            AddInfo("quicktime:quicktime:other::name", "Sequence Number Random Offset", "int32u");
            AddInfo("quicktime:quicktime:other::name", "RTP Time Scale", "int32u");
            AddInfo("quicktime:quicktime:other::name", "Timestamp Random Offset", "int32u");
        }


        static void InitTable652()
        {
            AddInfo("quicktime:quicktime:video::name", "Immediate Data Bytes", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Largest Packet Duration", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Media Track Bytes", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Repeated Data Bytes", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Max Data Rate", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Num Packets", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Num Packets", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Payload Type", "undef");
            AddInfo("quicktime:quicktime:video::name", "Largest Packet Size", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Max Transmission Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Min Transmission Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes No RTP Headers", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes No RTP Headers", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes No RTP Headers", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes", "int64u");
            AddInfo("quicktime:quicktime:video::name", "Total Bytes", "int64u");
        }


        static void InitTable653()
        {
            AddInfo("quicktime:quicktime:image::name", "Compressor ID", "string");
            AddInfo("quicktime:quicktime:image::name", "Vendor ID", "string");
            AddInfo("quicktime:quicktime:image::name", "Source Image Width", "int16u");
            AddInfo("quicktime:quicktime:image::name", "Source Image Height", "int16u");
            AddInfo("quicktime:quicktime:image::name", "X Resolution", "fixed32u");
            AddInfo("quicktime:quicktime:image::name", "Y Resolution", "fixed32u");
            AddInfo("quicktime:quicktime:image::name", "Compressor Name", "string");
            AddInfo("quicktime:quicktime:image::name", "Bit Depth", "int16u");
            AddInfo("quicktime:quicktime:image::name", "Color Representation", "int16u");
            AddInfo("quicktime:quicktime:image::name", "Video Field Order", "int16u");
            AddInfo("quicktime:quicktime:image::name", "Gamma", "fixed32u");
            AddInfo("quicktime:quicktime:image::name", "Pixel Aspect Ratio", "int16u");
        }


        static void InitTable654()
        {
            AddInfo("quicktime:quicktime:image::name", "Image Data", "?");
        }


        static void InitTable655()
        {
            AddInfo("quicktime:quicktime:audio::name", "Parent Short Title", "?");
            AddInfo("quicktime:quicktime:audio::name", "Parent Product ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Parent Title", "?");
            AddInfo("quicktime:quicktime:audio::name", "Short Title", "?");
            AddInfo("quicktime:quicktime:audio::name", "Unknown AACR", "?");
            AddInfo("quicktime:quicktime:audio::name", "Unknown CDEK", "?");
            AddInfo("quicktime:quicktime:audio::name", "Unknown CDET", "?");
            AddInfo("quicktime:quicktime:audio::name", "GUID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Product Version", "?");
            AddInfo("quicktime:quicktime:audio::name", "Album Artist", "?");
            AddInfo("quicktime:quicktime:audio::name", "Apple Store Account Type", "?");
            AddInfo("quicktime:quicktime:audio::name", "Album", "?");
            AddInfo("quicktime:quicktime:audio::name", "Apple Store Account", "?");
            AddInfo("quicktime:quicktime:audio::name", "Album Title ID", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Author", "?");
            AddInfo("quicktime:quicktime:audio::name", "Category", "?");
            AddInfo("quicktime:quicktime:audio::name", "Apple Store Catalog ID", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Cover Art", "?");
            AddInfo("quicktime:quicktime:audio::name", "Compilation", "?");
            AddInfo("quicktime:quicktime:audio::name", "Copyright", "?");
            AddInfo("quicktime:quicktime:audio::name", "Description", "?");
            AddInfo("quicktime:quicktime:audio::name", "Disk Number", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Description", "?");
            AddInfo("quicktime:quicktime:audio::name", "Episode Global Unique ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Genre ID", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Genre", "?");
            AddInfo("quicktime:quicktime:audio::name", "Grouping", "?");
            AddInfo("quicktime:quicktime:audio::name", "Google Host Header", "string");
            AddInfo("quicktime:quicktime:audio::name", "Google Ping Message", "string");
            AddInfo("quicktime:quicktime:audio::name", "Google Ping URL", "string");
            AddInfo("quicktime:quicktime:audio::name", "Google Source Data", "string");
            AddInfo("quicktime:quicktime:audio::name", "Google Start Time", "string");
            AddInfo("quicktime:quicktime:audio::name", "Google Track Duration", "string");
            AddInfo("quicktime:quicktime:audio::name", "HD Video", "?");
            AddInfo("quicktime:quicktime:audio::name", "iTunes U", "?");
            AddInfo("quicktime:quicktime:audio::name", "Keyword", "?");
            AddInfo("quicktime:quicktime:audio::name", "Long Description", "?");
            AddInfo("quicktime:quicktime:audio::name", "Podcast", "?");
            AddInfo("quicktime:quicktime:audio::name", "Performer", "?");
            AddInfo("quicktime:quicktime:audio::name", "Play Gap", "?");
            AddInfo("quicktime:quicktime:audio::name", "Play List ID", "int8u");
            AddInfo("quicktime:quicktime:audio::name", "Product ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Purchase Date", "?");
            AddInfo("quicktime:quicktime:audio::name", "Podcast URL", "?");
            AddInfo("quicktime:quicktime:audio::name", "Rating Percent", "?");
            AddInfo("quicktime:quicktime:audio::name", "Release Date", "?");
            AddInfo("quicktime:quicktime:audio::name", "Rating", "?");
            AddInfo("quicktime:quicktime:audio::name", "Apple Store Country", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Sort Album Artist", "?");
            AddInfo("quicktime:quicktime:audio::name", "Sort Album", "?");
            AddInfo("quicktime:quicktime:audio::name", "Sort Artist", "?");
            AddInfo("quicktime:quicktime:audio::name", "Sort Composer", "?");
            AddInfo("quicktime:quicktime:audio::name", "Sort Name", "?");
            AddInfo("quicktime:quicktime:audio::name", "Sort Show", "?");
            AddInfo("quicktime:quicktime:audio::name", "Media Type", "?");
            AddInfo("quicktime:quicktime:audio::name", "Title", "?");
            AddInfo("quicktime:quicktime:audio::name", "Beats Per Minute", "int16u");
            AddInfo("quicktime:quicktime:audio::name", "Track Number", "undef");
            AddInfo("quicktime:quicktime:audio::name", "TV Episode ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "TV Episode", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "TV Network Name", "?");
            AddInfo("quicktime:quicktime:audio::name", "TV Show", "?");
            AddInfo("quicktime:quicktime:audio::name", "TV Season", "int32u");
            AddInfo("quicktime:quicktime:audio::name", "Year", "?");
            AddInfo("quicktime:quicktime:audio::name", "Artist", "?");
            AddInfo("quicktime:quicktime:audio::name", "Album", "?");
            AddInfo("quicktime:quicktime:audio::name", "Comment", "?");
            AddInfo("quicktime:quicktime:audio::name", "Composer", "?");
            AddInfo("quicktime:quicktime:audio::name", "Copyright", "?");
            AddInfo("quicktime:quicktime:audio::name", "Content Create Date", "?");
            AddInfo("quicktime:quicktime:audio::name", "Description", "?");
            AddInfo("quicktime:quicktime:audio::name", "Encoded By", "?");
            AddInfo("quicktime:quicktime:audio::name", "Genre", "?");
            AddInfo("quicktime:quicktime:audio::name", "Grouping", "?");
            AddInfo("quicktime:quicktime:audio::name", "Lyrics", "?");
            AddInfo("quicktime:quicktime:audio::name", "Title", "?");
            AddInfo("quicktime:quicktime:audio::name", "Narrator", "?");
            AddInfo("quicktime:quicktime:audio::name", "Publisher", "?");
            AddInfo("quicktime:quicktime:audio::name", "Encoder", "?");
            AddInfo("quicktime:quicktime:audio::name", "Track", "?");
            AddInfo("quicktime:quicktime:audio::name", "Composer", "?");
        }


        static void InitTable656()
        {
            AddInfo("quicktime:quicktime:other::name", "Encoded With", "?");
            AddInfo("quicktime:quicktime:other::name", "Album", "?");
            AddInfo("quicktime:quicktime:other::name", "Artist", "?");
            AddInfo("quicktime:quicktime:other::name", "Artwork", "?");
            AddInfo("quicktime:quicktime:other::name", "Author", "?");
            AddInfo("quicktime:quicktime:other::name", "Frame Readout Time", "?");
            AddInfo("quicktime:quicktime:other::name", "Camera Identifier", "?");
            AddInfo("quicktime:quicktime:other::name", "User Collection", "?");
            AddInfo("quicktime:quicktime:other::name", "Comment", "?");
            AddInfo("quicktime:quicktime:other::name", "Copyright", "?");
            AddInfo("quicktime:quicktime:other::name", "Creation Date", "?");
            AddInfo("quicktime:quicktime:other::name", "Description", "?");
            AddInfo("quicktime:quicktime:other::name", "Camera Direction", "?");
            AddInfo("quicktime:quicktime:other::name", "Camera Motion", "?");
            AddInfo("quicktime:quicktime:other::name", "Director", "?");
            AddInfo("quicktime:quicktime:other::name", "Genre", "?");
            AddInfo("quicktime:quicktime:other::name", "Information", "?");
            AddInfo("quicktime:quicktime:other::name", "Keywords", "?");
            AddInfo("quicktime:quicktime:other::name", "GPS Coordinates", "?");
            AddInfo("quicktime:quicktime:other::name", "Location Body", "?");
            AddInfo("quicktime:quicktime:other::name", "Location Date", "?");
            AddInfo("quicktime:quicktime:other::name", "Location Name", "?");
            AddInfo("quicktime:quicktime:other::name", "Location Note", "?");
            AddInfo("quicktime:quicktime:other::name", "Location Role", "?");
            AddInfo("quicktime:quicktime:other::name", "Make", "?");
            AddInfo("quicktime:quicktime:other::name", "Model", "?");
            AddInfo("quicktime:quicktime:other::name", "Balance", "?");
            AddInfo("quicktime:quicktime:other::name", "Bass", "?");
            AddInfo("quicktime:quicktime:other::name", "Audio Gain", "?");
            AddInfo("quicktime:quicktime:other::name", "Mute", "int8u");
            AddInfo("quicktime:quicktime:other::name", "Pitch Shift", "?");
            AddInfo("quicktime:quicktime:other::name", "Trebel", "?");
            AddInfo("quicktime:quicktime:other::name", "Brightness", "?");
            AddInfo("quicktime:quicktime:other::name", "Color", "?");
            AddInfo("quicktime:quicktime:other::name", "Contrast", "?");
            AddInfo("quicktime:quicktime:other::name", "Tint", "?");
            AddInfo("quicktime:quicktime:other::name", "Player Version", "?");
            AddInfo("quicktime:quicktime:other::name", "Producer", "?");
            AddInfo("quicktime:quicktime:other::name", "Publisher", "?");
            AddInfo("quicktime:quicktime:other::name", "User Rating", "?");
            AddInfo("quicktime:quicktime:other::name", "Software", "?");
            AddInfo("quicktime:quicktime:other::name", "Title", "?");
            AddInfo("quicktime:quicktime:other::name", "Version", "?");
            AddInfo("quicktime:quicktime:other::name", "Year", "?");
        }


        static void InitTable657()
        {
            AddInfo("quicktime:quicktime:video::name", "Preview PICT", "?");
            AddInfo("quicktime:quicktime:video::name", "AR Drone File", "?");
            AddInfo("quicktime:quicktime:video::name", "Free", "?");
            AddInfo("quicktime:quicktime:video::name", "Junk", "?");
            AddInfo("quicktime:quicktime:video::name", "Movie Data", "?");
            AddInfo("quicktime:quicktime:video::name", "Movie Data Offset", "?");
            AddInfo("quicktime:quicktime:video::name", "Movie Data Size", "?");
            AddInfo("quicktime:quicktime:video::name", "Preview PICT", "?");
            AddInfo("quicktime:quicktime:video::name", "AR Drone Telemetry", "?");
            AddInfo("quicktime:quicktime:video::name", "Skip", "?");
            AddInfo("quicktime:quicktime:video::name", "Thumbnail Image", "?");
            AddInfo("quicktime:quicktime:video::name", "UUID-Unknown", "?");
            AddInfo("quicktime:quicktime:video::name", "Wide", "?");
        }


        static void InitTable658()
        {
            AddInfo("quicktime:track#:video::name", "Media Header Version", "int32u");
            AddInfo("quicktime:track#:video::name", "Media Create Date", "int32u");
            AddInfo("quicktime:track#:video::name", "Media Modify Date", "int32u");
            AddInfo("quicktime:track#:video::name", "Media Time Scale", "int32u");
            AddInfo("quicktime:track#:video::name", "Media Duration", "int32u");
            AddInfo("quicktime:track#:video::name", "Media Language Code", "int16u");
        }


        static void InitTable659()
        {
            AddInfo("quicktime:track#:video::name", "Null Media Header", "?");
        }


        static void InitTable660()
        {
            AddInfo("quicktime:quicktime:video::name", "Binary XML", "?");
            AddInfo("quicktime:quicktime:video::name", "Data Information", "?");
            AddInfo("quicktime:quicktime:video::name", "Free", "?");
            AddInfo("quicktime:quicktime:video::name", "Item Information", "?");
            AddInfo("quicktime:quicktime:video::name", "Item Location", "?");
            AddInfo("quicktime:quicktime:video::name", "IPMP Control", "?");
            AddInfo("quicktime:quicktime:video::name", "Item Protection", "?");
            AddInfo("quicktime:quicktime:video::name", "Primary Item Reference", "?");
        }


        static void InitTable661()
        {
            AddInfo("quicktime:quicktime:video::name", "Title", "?");
            AddInfo("quicktime:quicktime:video::name", "Production Date", "?");
            AddInfo("quicktime:quicktime:video::name", "Software", "?");
            AddInfo("quicktime:quicktime:video::name", "Product", "?");
            AddInfo("quicktime:quicktime:video::name", "Track Property", "?");
            AddInfo("quicktime:quicktime:video::name", "Time Zone", "?");
            AddInfo("quicktime:quicktime:video::name", "Modify Date", "?");
        }


        static void InitTable662()
        {
            AddInfo("quicktime:quicktime:video::name", "Initial Object Descriptor", "?");
            AddInfo("quicktime:quicktime:video::name", "UUID-Unknown", "?");
        }


        static void InitTable663()
        {
            AddInfo("quicktime:quicktime:video::name", "Movie Header Version", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Create Date", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Modify Date", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Time Scale", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Duration", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Preferred Rate", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Preferred Volume", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Matrix Structure", "fixed32s");
            AddInfo("quicktime:quicktime:video::name", "Preview Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Preview Duration", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Poster Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Selection Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Selection Duration", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Current Time", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Next Track ID", "int32u");
        }


        static void InitTable664()
        {
            AddInfo("quicktime:quicktime:other::name", "Other Format", "undef");
            AddInfo("quicktime:quicktime:other::name", "Font Table", "undef");
        }


        static void InitTable665()
        {
            AddInfo("quicktime:quicktime:image::name", "Preview Date", "int32u");
            AddInfo("quicktime:quicktime:image::name", "Preview Version", "int16u");
            AddInfo("quicktime:quicktime:image::name", "Preview Atom Type", "string");
            AddInfo("quicktime:quicktime:image::name", "Preview Atom Index", "int16u");
        }


        static void InitTable666()
        {
            AddInfo("quicktime:quicktime:audio::name", "Original Format", "?");
        }


        static void InitTable667()
        {
            AddInfo("quicktime:quicktime:audio::name", "Version Restrictions", "?");
            AddInfo("quicktime:quicktime:audio::name", "Media Flags", "?");
            AddInfo("quicktime:quicktime:audio::name", "Mode Flags", "?");
            AddInfo("quicktime:quicktime:audio::name", "Platform", "?");
            AddInfo("quicktime:quicktime:audio::name", "Item ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Item Tool", "string");
            AddInfo("quicktime:quicktime:audio::name", "Transaction ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "Item Vendor ID", "?");
        }


        static void InitTable668()
        {
            AddInfo("quicktime:quicktime:video::name", "Chunk Offset 64", "?");
            AddInfo("quicktime:quicktime:video::name", "Composition To Decode Timeline Mapping", "?");
            AddInfo("quicktime:quicktime:video::name", "Composition Time To Sample", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample Padding Bits", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample To Group", "?");
            AddInfo("quicktime:quicktime:video::name", "Idependent And Disposable Samples", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample Group Description", "?");
            AddInfo("quicktime:quicktime:video::name", "Chunk Offset", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample Degradation Priority", "?");
            AddInfo("quicktime:quicktime:video::name", "Partial Sync Samples", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample To Chunk", "?");
            AddInfo("quicktime:quicktime:video::name", "Shadow Sync Sample Table", "?");
            AddInfo("quicktime:quicktime:video::name", "Sync Sample Table", "?");
            AddInfo("quicktime:quicktime:video::name", "Sample Sizes", "?");
            AddInfo("quicktime:quicktime:video::name", "Video Frame Rate", "undef");
            AddInfo("quicktime:quicktime:video::name", "Time To Sample Table", "?");
            AddInfo("quicktime:quicktime:video::name", "Compact Sample Sizes", "?");
            AddInfo("quicktime:quicktime:video::name", "Sub-sample Information", "?");
        }


        static void InitTable669()
        {
            AddInfo("quicktime:quicktime:audio::name", "Certificate", "?");
            AddInfo("quicktime:quicktime:audio::name", "Initialization Vector", "?");
            AddInfo("quicktime:quicktime:audio::name", "Key ID", "?");
            AddInfo("quicktime:quicktime:audio::name", "User Name", "?");
            AddInfo("quicktime:quicktime:audio::name", "User ID", "?");
        }


        static void InitTable670()
        {
            AddInfo("quicktime:quicktime:audio::name", "Scheme Type", "undef");
            AddInfo("quicktime:quicktime:audio::name", "Scheme Version", "int16u");
            AddInfo("quicktime:quicktime:audio::name", "Scheme URL", "string");
        }


        static void InitTable671()
        {
            AddInfo("quicktime:quicktime:video::name", "Text Font", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Text Face", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Text Size", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Text Color", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Background Color", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Font Name", "pstring");
        }


        static void InitTable672()
        {
            AddInfo("quicktime:track#:video::name", "UUID-Unknown", "?");
        }


        static void InitTable673()
        {
            AddInfo("quicktime:track#:video::name", "Clean Aperture Dimensions", "fixed32u");
            AddInfo("quicktime:track#:video::name", "Encoded Pixels Dimensions", "fixed32u");
            AddInfo("quicktime:track#:video::name", "Production Aperture Dimensions", "fixed32u");
        }


        static void InitTable674()
        {
            AddInfo("quicktime:track#:video::name", "Track Header Version", "int8u");
            AddInfo("quicktime:track#:video::name", "Track Create Date", "int32u");
            AddInfo("quicktime:track#:video::name", "Track Modify Date", "int32u");
            AddInfo("quicktime:track#:video::name", "Track ID", "int32u");
            AddInfo("quicktime:track#:video::name", "Track Duration", "int32u");
            AddInfo("quicktime:track#:video::name", "Track Layer", "int16u");
            AddInfo("quicktime:track#:video::name", "Track Volume", "int16u");
            AddInfo("quicktime:track#:video::name", "Matrix Structure", "fixed32s");
            AddInfo("quicktime:track#:video::name", "Image Width", "int32u");
            AddInfo("quicktime:track#:video::name", "Image Height", "int32u");
        }


        static void InitTable675()
        {
            AddInfo("quicktime:track#:video::name", "Chapter List Track ID", "int32u");
            AddInfo("quicktime:track#:video::name", "Elementary Stream Track", "int32u");
            AddInfo("quicktime:track#:video::name", "Time Code", "int32u");
        }


        static void InitTable676()
        {
            AddInfo("quicktime:quicktime:video::name", "Play All Frames", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Compressor Version", "string");
            AddInfo("quicktime:quicktime:video::name", "Firmware Version", "string");
            AddInfo("quicktime:quicktime:video::name", "Camera Model Name", "string");
            AddInfo("quicktime:quicktime:video::name", "Go Pro Type", "?");
            AddInfo("quicktime:quicktime:video::name", "Loop Style", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Maker Note Pentax Unknown", "?");
            AddInfo("quicktime:quicktime:video::name", "Preview Image", "?");
            AddInfo("quicktime:quicktime:video::name", "Play Mode", "?");
            AddInfo("quicktime:quicktime:video::name", "Play Selection", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Unknown Tags", "?");
            AddInfo("quicktime:quicktime:video::name", "Window Location", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Unknown adzc", "?");
            AddInfo("quicktime:quicktime:video::name", "Unknown adze", "?");
            AddInfo("quicktime:quicktime:video::name", "Unknown adzm", "?");
            AddInfo("quicktime:quicktime:video::name", "Album", "?");
            AddInfo("quicktime:quicktime:video::name", "Album Artist", "?");
            AddInfo("quicktime:quicktime:video::name", "Camera Angle", "string");
            AddInfo("quicktime:quicktime:video::name", "Aperture Mode", "undef");
            AddInfo("quicktime:quicktime:video::name", "Author", "?");
            AddInfo("quicktime:quicktime:video::name", "Content ID", "?");
            AddInfo("quicktime:quicktime:video::name", "Content Distributor ID", "?");
            AddInfo("quicktime:quicktime:video::name", "Chapter List", "?");
            AddInfo("quicktime:quicktime:video::name", "Clip File Name", "string");
            AddInfo("quicktime:quicktime:video::name", "Clip ID", "string");
            AddInfo("quicktime:quicktime:video::name", "Classification", "?");
            AddInfo("quicktime:quicktime:video::name", "Camera ID", "string");
            AddInfo("quicktime:quicktime:video::name", "Camera Model Name", "string");
            AddInfo("quicktime:quicktime:video::name", "Collection Name", "?");
            AddInfo("quicktime:quicktime:video::name", "Copyright", "?");
            AddInfo("quicktime:quicktime:video::name", "Code Version", "?");
            AddInfo("quicktime:quicktime:video::name", "Cover URI", "?");
            AddInfo("quicktime:quicktime:video::name", "Date Time Original", "?");
            AddInfo("quicktime:quicktime:video::name", "Description", "?");
            AddInfo("quicktime:quicktime:video::name", "Genre", "?");
            AddInfo("quicktime:quicktime:video::name", "Hint Version", "?");
            AddInfo("quicktime:quicktime:video::name", "Icon URI", "?");
            AddInfo("quicktime:quicktime:video::name", "Info URL", "?");
            AddInfo("quicktime:quicktime:video::name", "Track Type", "?");
            AddInfo("quicktime:quicktime:video::name", "Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Location Information", "?");
            AddInfo("quicktime:quicktime:video::name", "Lyrics URI", "?");
            AddInfo("quicktime:quicktime:video::name", "Make", "?");
            AddInfo("quicktime:quicktime:video::name", "Camera Model Name", "?");
            AddInfo("quicktime:quicktime:video::name", "Name", "?");
            AddInfo("quicktime:quicktime:video::name", "Performer", "?");
            AddInfo("quicktime:quicktime:video::name", "Reel Name", "string");
            AddInfo("quicktime:quicktime:video::name", "Rating", "?");
            AddInfo("quicktime:quicktime:video::name", "Scene", "string");
            AddInfo("quicktime:quicktime:video::name", "Shot Name", "string");
            AddInfo("quicktime:quicktime:video::name", "Serial Number", "string");
            AddInfo("quicktime:quicktime:video::name", "Thumbnail Image", "?");
            AddInfo("quicktime:quicktime:video::name", "Thumbnail PNG", "?");
            AddInfo("quicktime:quicktime:video::name", "Unknown Thumbnail", "?");
            AddInfo("quicktime:quicktime:video::name", "Title", "?");
            AddInfo("quicktime:quicktime:video::name", "User Rating", "?");
            AddInfo("quicktime:quicktime:video::name", "Vendor", "?");
            AddInfo("quicktime:quicktime:video::name", "Year", "?");
            AddInfo("quicktime:quicktime:video::name", "Artist", "?");
            AddInfo("quicktime:quicktime:video::name", "Album", "?");
            AddInfo("quicktime:quicktime:video::name", "Arranger", "?");
            AddInfo("quicktime:quicktime:video::name", "Arranger Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Comment", "?");
            AddInfo("quicktime:quicktime:video::name", "Composer Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Composer", "?");
            AddInfo("quicktime:quicktime:video::name", "Copyright", "?");
            AddInfo("quicktime:quicktime:video::name", "Content Create Date", "?");
            AddInfo("quicktime:quicktime:video::name", "Director", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 1", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 2", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 3", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 4", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 5", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 6", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 7", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 8", "?");
            AddInfo("quicktime:quicktime:video::name", "Edit 9", "?");
            AddInfo("quicktime:quicktime:video::name", "Format", "?");
            AddInfo("quicktime:quicktime:video::name", "Genre", "?");
            AddInfo("quicktime:quicktime:video::name", "Grouping", "?");
            AddInfo("quicktime:quicktime:video::name", "Information", "?");
            AddInfo("quicktime:quicktime:video::name", "ISRC Code", "?");
            AddInfo("quicktime:quicktime:video::name", "Record Label Name", "?");
            AddInfo("quicktime:quicktime:video::name", "Record Label URL", "?");
            AddInfo("quicktime:quicktime:video::name", "Lyrics", "?");
            AddInfo("quicktime:quicktime:video::name", "Make", "?");
            AddInfo("quicktime:quicktime:video::name", "Maker URL", "?");
            AddInfo("quicktime:quicktime:video::name", "Model", "?");
            AddInfo("quicktime:quicktime:video::name", "Title", "?");
            AddInfo("quicktime:quicktime:video::name", "Producer Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Recording Copyright", "?");
            AddInfo("quicktime:quicktime:video::name", "Producer", "?");
            AddInfo("quicktime:quicktime:video::name", "Performers", "?");
            AddInfo("quicktime:quicktime:video::name", "Performer Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Performer URL", "?");
            AddInfo("quicktime:quicktime:video::name", "Requirements", "?");
            AddInfo("quicktime:quicktime:video::name", "Subtitle Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Subtitle", "?");
            AddInfo("quicktime:quicktime:video::name", "Source Credits", "?");
            AddInfo("quicktime:quicktime:video::name", "Song Writer", "?");
            AddInfo("quicktime:quicktime:video::name", "Song Writer Keywords", "?");
            AddInfo("quicktime:quicktime:video::name", "Software Version", "?");
            AddInfo("quicktime:quicktime:video::name", "Encoder", "?");
            AddInfo("quicktime:quicktime:video::name", "Track", "?");
            AddInfo("quicktime:quicktime:video::name", "Composer", "?");
            AddInfo("quicktime:quicktime:video::name", "GPS Coordinates", "?");
        }


        static void InitTable677()
        {
            AddInfo("quicktime:quicktime:video::name", "Display Size", "int8u");
            AddInfo("quicktime:quicktime:video::name", "Slide Show", "int8u");
        }


        static void InitTable678()
        {
            AddInfo("quicktime:quicktime:video::name", "Graphics Mode", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Op Color", "int16u");
        }


        static void InitTable679()
        {
            AddInfo("quicktime:quicktime:video::name", "Video Profile Version", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Track ID", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Codec", "undef");
            AddInfo("quicktime:quicktime:video::name", "Video Codec Info", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Attributes", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Avg Bitrate", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Max Bitrate", "int32u");
            AddInfo("quicktime:quicktime:video::name", "Video Avg Frame Rate", "fixed32u");
            AddInfo("quicktime:quicktime:video::name", "Video Max Frame Rate", "fixed32u");
            AddInfo("quicktime:quicktime:video::name", "Video Size", "int16u");
            AddInfo("quicktime:quicktime:video::name", "Pixel Aspect Ratio", "int16u");
        }


        static void InitTable680()
        {
            AddInfo("quicktime:quicktime:other::name", "Purchase File Format", "?");
        }


        static void InitTable681()
        {
            AddInfo("quicktime:quicktime:audio::name", "Disc Number", "?");
            AddInfo("quicktime:quicktime:audio::name", "Track Number", "?");
            AddInfo("quicktime:quicktime:audio::name", "Data", "?");
            AddInfo("quicktime:quicktime:audio::name", "Content Rating", "?");
            AddInfo("quicktime:quicktime:audio::name", "Volume Normalization", "?");
            AddInfo("quicktime:quicktime:audio::name", "iTunSMPB", "?");
            AddInfo("quicktime:quicktime:audio::name", "CDDB1 Info", "?");
            AddInfo("quicktime:quicktime:audio::name", "CDDB Track Number", "?");
            AddInfo("quicktime:quicktime:audio::name", "Mean", "?");
            AddInfo("quicktime:quicktime:audio::name", "Name", "?");
            AddInfo("quicktime:quicktime:audio::name", "Popularimeter", "?");
            AddInfo("quicktime:quicktime:audio::name", "iTunTool", "int32u");
        }


        static void InitTable682()
        {
            AddInfo("riff:riff:image::name", "Alpha Preprocessing", "int8u");
            AddInfo("riff:riff:image::name", "Alpha Filtering", "int8u");
            AddInfo("riff:riff:image::name", "Alpha Compression", "int8u");
        }


        static void InitTable683()
        {
            AddInfo("riff:riff:image::name", "Background Color", "int8u");
            AddInfo("riff:riff:image::name", "Animation Loop Count", "int8u");
        }


        static void InitTable684()
        {
            AddInfo("riff:riff:image::name", "Duration", "int32u");
        }


        static void InitTable685()
        {
            AddInfo("riff:riff:video::name", "Frame Rate", "int32u");
            AddInfo("riff:riff:video::name", "Max Data Rate", "int32u");
            AddInfo("riff:riff:video::name", "Frame Count", "int32u");
            AddInfo("riff:riff:video::name", "Stream Count", "int32u");
            AddInfo("riff:riff:video::name", "Image Width", "int32u");
            AddInfo("riff:riff:video::name", "Image Height", "int32u");
        }


        static void InitTable686()
        {
            AddInfo("riff:riff:audio::name", "Encoding", "int16u");
            AddInfo("riff:riff:audio::name", "Num Channels", "int16u");
            AddInfo("riff:riff:audio::name", "Sample Rate", "int32u");
            AddInfo("riff:riff:audio::name", "Avg Bytes Per Sec", "int32u");
            AddInfo("riff:riff:audio::name", "Bits Per Sample", "int16u");
        }


        static void InitTable687()
        {
            AddInfo("riff:riff:audio::name", "Description", "string");
            AddInfo("riff:riff:audio::name", "Originator", "string");
            AddInfo("riff:riff:audio::name", "Originator Reference", "string");
            AddInfo("riff:riff:audio::name", "Date/Time Original", "string");
            AddInfo("riff:riff:audio::name", "Time Reference", "int32u");
            AddInfo("riff:riff:audio::name", "BWF Version", "int16u");
            AddInfo("riff:riff:audio::name", "Coding History", "string");
        }


        static void InitTable688()
        {
            AddInfo("riff:riff:audio::name", "Make", "?");
            AddInfo("riff:riff:audio::name", "Model", "?");
            AddInfo("riff:riff:audio::name", "Maker Notes", "?");
            AddInfo("riff:riff:audio::name", "Related Image File", "?");
            AddInfo("riff:riff:audio::name", "Time Created", "?");
            AddInfo("riff:riff:audio::name", "User Comment", "?");
            AddInfo("riff:riff:audio::name", "Exif Version", "?");
        }


        static void InitTable689()
        {
            AddInfo("riff:riff:video::name", "Total Frame Count", "int32u");
        }


        static void InitTable690()
        {
            AddInfo("riff:riff:image::name", "Date/Time Original", "?");
            AddInfo("riff:riff:image::name", "Time Code", "?");
        }


        static void InitTable691()
        {
            AddInfo("riff:riff:audio::name", "Rated", "?");
            AddInfo("riff:riff:audio::name", "Comment", "?");
            AddInfo("riff:riff:audio::name", "Encoded By", "?");
            AddInfo("riff:riff:audio::name", "Comments", "?");
            AddInfo("riff:riff:audio::name", "Directory", "?");
            AddInfo("riff:riff:audio::name", "Sound Scheme Title", "?");
            AddInfo("riff:riff:audio::name", "Date/Time Original", "?");
            AddInfo("riff:riff:audio::name", "Genre", "?");
            AddInfo("riff:riff:audio::name", "Archival Location", "?");
            AddInfo("riff:riff:audio::name", "Artist", "?");
            AddInfo("riff:riff:audio::name", "First Language", "?");
            AddInfo("riff:riff:audio::name", "Second Language", "?");
            AddInfo("riff:riff:audio::name", "Third Language", "?");
            AddInfo("riff:riff:audio::name", "Fourth Language", "?");
            AddInfo("riff:riff:audio::name", "Fifth Language", "?");
            AddInfo("riff:riff:audio::name", "Sixth Language", "?");
            AddInfo("riff:riff:audio::name", "Seventh Language", "?");
            AddInfo("riff:riff:audio::name", "Eighth Language", "?");
            AddInfo("riff:riff:audio::name", "Ninth Language", "?");
            AddInfo("riff:riff:audio::name", "Base URL", "?");
            AddInfo("riff:riff:audio::name", "Default Audio Stream", "?");
            AddInfo("riff:riff:audio::name", "Costume Designer", "?");
            AddInfo("riff:riff:audio::name", "Commissioned", "?");
            AddInfo("riff:riff:audio::name", "Comment", "?");
            AddInfo("riff:riff:audio::name", "Cinematographer", "?");
            AddInfo("riff:riff:audio::name", "Country", "?");
            AddInfo("riff:riff:audio::name", "Copyright", "?");
            AddInfo("riff:riff:audio::name", "Date Created", "?");
            AddInfo("riff:riff:audio::name", "Cropped", "?");
            AddInfo("riff:riff:audio::name", "Dimensions", "?");
            AddInfo("riff:riff:audio::name", "Date/Time Original", "?");
            AddInfo("riff:riff:audio::name", "Dots Per Inch", "?");
            AddInfo("riff:riff:audio::name", "Distributed By", "?");
            AddInfo("riff:riff:audio::name", "Edited By", "?");
            AddInfo("riff:riff:audio::name", "Encoded By", "?");
            AddInfo("riff:riff:audio::name", "Engineer", "?");
            AddInfo("riff:riff:audio::name", "Genre", "?");
            AddInfo("riff:riff:audio::name", "Keywords", "?");
            AddInfo("riff:riff:audio::name", "Lightness", "?");
            AddInfo("riff:riff:audio::name", "Logo URL", "?");
            AddInfo("riff:riff:audio::name", "Logo Icon URL", "?");
            AddInfo("riff:riff:audio::name", "Language", "?");
            AddInfo("riff:riff:audio::name", "More Info Banner Image", "?");
            AddInfo("riff:riff:audio::name", "More Info Banner URL", "?");
            AddInfo("riff:riff:audio::name", "Medium", "?");
            AddInfo("riff:riff:audio::name", "More Info Text", "?");
            AddInfo("riff:riff:audio::name", "More Info URL", "?");
            AddInfo("riff:riff:audio::name", "Music By", "?");
            AddInfo("riff:riff:audio::name", "Title", "?");
            AddInfo("riff:riff:audio::name", "Production Designer", "?");
            AddInfo("riff:riff:audio::name", "Num Colors", "?");
            AddInfo("riff:riff:audio::name", "Product", "?");
            AddInfo("riff:riff:audio::name", "Produced By", "?");
            AddInfo("riff:riff:audio::name", "Ripped By", "?");
            AddInfo("riff:riff:audio::name", "Rating", "?");
            AddInfo("riff:riff:audio::name", "Subject", "?");
            AddInfo("riff:riff:audio::name", "Software", "?");
            AddInfo("riff:riff:audio::name", "Secondary Genre", "?");
            AddInfo("riff:riff:audio::name", "Sharpness", "?");
            AddInfo("riff:riff:audio::name", "Time Code", "?");
            AddInfo("riff:riff:audio::name", "Source", "?");
            AddInfo("riff:riff:audio::name", "Source Form", "?");
            AddInfo("riff:riff:audio::name", "Production Studio", "?");
            AddInfo("riff:riff:audio::name", "Starring", "?");
            AddInfo("riff:riff:audio::name", "Technician", "?");
            AddInfo("riff:riff:audio::name", "Watermark URL", "?");
            AddInfo("riff:riff:audio::name", "Written By", "?");
            AddInfo("riff:riff:audio::name", "Language", "?");
            AddInfo("riff:riff:audio::name", "Location", "?");
            AddInfo("riff:riff:audio::name", "Part", "?");
            AddInfo("riff:riff:audio::name", "Number Of Parts", "?");
            AddInfo("riff:riff:audio::name", "Rate", "?");
            AddInfo("riff:riff:audio::name", "Starring", "?");
            AddInfo("riff:riff:audio::name", "Statistics", "?");
            AddInfo("riff:riff:audio::name", "Tape Name", "?");
            AddInfo("riff:riff:audio::name", "End Timecode", "?");
            AddInfo("riff:riff:audio::name", "Start Timecode", "?");
            AddInfo("riff:riff:audio::name", "Title", "?");
            AddInfo("riff:riff:audio::name", "Length", "?");
            AddInfo("riff:riff:audio::name", "Organization", "?");
            AddInfo("riff:riff:audio::name", "Track Number", "?");
            AddInfo("riff:riff:audio::name", "URL", "?");
            AddInfo("riff:riff:audio::name", "Version", "?");
            AddInfo("riff:riff:audio::name", "Vegas Version Major", "?");
            AddInfo("riff:riff:audio::name", "Vegas Version Minor", "?");
            AddInfo("riff:riff:audio::name", "Year", "?");
        }


        static void InitTable692()
        {
            AddInfo("riff:riff:other::name", "Date/Time Original", "?");
            AddInfo("riff:riff:other::name", "Text Junk", "?");
            AddInfo("riff:riff:other::name", "Old XMP", "?");
            AddInfo("riff:riff:other::name", "Afsp", "?");
            AddInfo("riff:riff:other::name", "Cue Points", "?");
            AddInfo("riff:riff:other::name", "Number Of Samples", "?");
        }


        static void InitTable693()
        {
            AddInfo("riff:riff:image::name", "Stream Name", "?");
        }


        static void InitTable694()
        {
            AddInfo("riff:riff:video::name", "Vendor Name", "?");
            AddInfo("riff:riff:video::name", "Unknown Data", "?");
        }


        static void InitTable695()
        {
            AddInfo("riff:riff:video::name", "Stream Type", "string");
            AddInfo("riff:riff:video::name", "Audio Codec", "string");
            AddInfo("riff:riff:video::name", "Video Codec", "string");
            AddInfo("riff:riff:video::name", "Codec", "string");
            AddInfo("riff:riff:video::name", "Audio Sample Rate", "rational64u");
            AddInfo("riff:riff:video::name", "Video Frame Rate", "rational64u");
            AddInfo("riff:riff:video::name", "Stream Sample Rate", "rational64u");
            AddInfo("riff:riff:video::name", "Audio Sample Count", "int32u");
            AddInfo("riff:riff:video::name", "Video Frame Count", "int32u");
            AddInfo("riff:riff:video::name", "Stream Sample Count", "int32u");
            AddInfo("riff:riff:video::name", "Quality", "int32u");
            AddInfo("riff:riff:video::name", "Sample Size", "int32u");
        }


        static void InitTable696()
        {
            AddInfo("riff:riff:image::name", "VP8 Version", "int8u");
            AddInfo("riff:riff:image::name", "Image Width", "int16u");
            AddInfo("riff:riff:image::name", "Horizontal Scale", "int16u");
            AddInfo("riff:riff:image::name", "Image Height", "int16u");
            AddInfo("riff:riff:image::name", "Vertical Scale", "int16u");
        }


        static void InitTable697()
        {
            AddInfo("riff:riff:image::name", "Image Width", "int16u");
            AddInfo("riff:riff:image::name", "Image Height", "int32u");
        }


        static void InitTable698()
        {
            AddInfo("riff:riff:image::name", "Image Width", "int32u");
            AddInfo("riff:riff:image::name", "Image Height", "int32u");
        }


        static void InitTable699()
        {
            AddInfo("rsrc:rsrc:document::name", "Application Missing Msg", "?");
            AddInfo("rsrc:rsrc:document::name", "Creator Application", "?");
            AddInfo("rsrc:rsrc:document::name", "Keywords", "?");
            AddInfo("rsrc:rsrc:document::name", "Description", "?");
            AddInfo("rsrc:rsrc:document::name", "Open With Application", "?");
            AddInfo("rsrc:rsrc:document::name", "Application Version", "?");
        }


        static void InitTable700()
        {
            AddInfo("rtf:rtf:document::name", "Author", "?");
            AddInfo("rtf:rtf:document::name", "Backup Time", "date");
            AddInfo("rtf:rtf:document::name", "Category", "?");
            AddInfo("rtf:rtf:document::name", "Comment", "?");
            AddInfo("rtf:rtf:document::name", "Company", "?");
            AddInfo("rtf:rtf:document::name", "Copyright", "?");
            AddInfo("rtf:rtf:document::name", "Create Date", "date");
            AddInfo("rtf:rtf:document::name", "Comments", "?");
            AddInfo("rtf:rtf:document::name", "Total Edit Time", "?");
            AddInfo("rtf:rtf:document::name", "Hyperlink Base", "?");
            AddInfo("rtf:rtf:document::name", "Internal ID Number", "?");
            AddInfo("rtf:rtf:document::name", "Keywords", "?");
            AddInfo("rtf:rtf:document::name", "Manager", "?");
            AddInfo("rtf:rtf:document::name", "Characters", "?");
            AddInfo("rtf:rtf:document::name", "Characters With Spaces", "?");
            AddInfo("rtf:rtf:document::name", "Pages", "?");
            AddInfo("rtf:rtf:document::name", "Words", "?");
            AddInfo("rtf:rtf:document::name", "Last Modified By", "?");
            AddInfo("rtf:rtf:document::name", "Last Printed", "date");
            AddInfo("rtf:rtf:document::name", "Modify Date", "date");
            AddInfo("rtf:rtf:document::name", "Subject", "?");
            AddInfo("rtf:rtf:document::name", "Title", "?");
            AddInfo("rtf:rtf:document::name", "Internal Version Number", "?");
            AddInfo("rtf:rtf:document::name", "Revision Number", "?");
        }


        static void InitTable701()
        {
            AddInfo("radiance:radiance:image::name", "Command", "?");
            AddInfo("radiance:radiance:image::name", "Orientation", "?");
            AddInfo("radiance:radiance:image::name", "Color Correction", "?");
            AddInfo("radiance:radiance:image::name", "Exposure", "?");
            AddInfo("radiance:radiance:image::name", "Format", "?");
            AddInfo("radiance:radiance:image::name", "Gamma", "?");
            AddInfo("radiance:radiance:image::name", "Pixel Aspect Ratio", "?");
            AddInfo("radiance:radiance:image::name", "Color Primaries", "?");
            AddInfo("radiance:radiance:image::name", "Software", "?");
            AddInfo("radiance:radiance:image::name", "View", "?");
        }


        static void InitTable702()
        {
            AddInfo("rawzor:rawzor:other::name", "Compression Factor", "?");
            AddInfo("rawzor:rawzor:other::name", "Original File Size", "?");
            AddInfo("rawzor:rawzor:other::name", "Original File Type", "?");
            AddInfo("rawzor:rawzor:other::name", "Rawzor Creator Version", "?");
            AddInfo("rawzor:rawzor:other::name", "Rawzor Required Version", "?");
        }


        static void InitTable703()
        {
            AddInfo("real:real-ra3:audio::name", "Channels", "int16u");
            AddInfo("real:real-ra3:audio::name", "Unknown", "int16u");
            AddInfo("real:real-ra3:audio::name", "Bytes Per Minute", "int16u");
            AddInfo("real:real-ra3:audio::name", "Audio Bytes", "int32u");
            AddInfo("real:real-ra3:audio::name", "Title Len", "int8u");
            AddInfo("real:real-ra3:audio::name", "Title", "string");
            AddInfo("real:real-ra3:audio::name", "Artist Len", "int8u");
            AddInfo("real:real-ra3:audio::name", "Artist", "string");
            AddInfo("real:real-ra3:audio::name", "Copyright Len", "int8u");
            AddInfo("real:real-ra3:audio::name", "Copyright", "string");
            AddInfo("real:real-ra3:audio::name", "Comment Len", "int8u");
            AddInfo("real:real-ra3:audio::name", "Comment", "string");
        }


        static void InitTable704()
        {
            AddInfo("real:real-ra4:audio::name", "Four CC1", "undef");
            AddInfo("real:real-ra4:audio::name", "Audio File Size", "int32u");
            AddInfo("real:real-ra4:audio::name", "Version 2", "int16u");
            AddInfo("real:real-ra4:audio::name", "Header Size", "int32u");
            AddInfo("real:real-ra4:audio::name", "Codec Flavor ID", "int16u");
            AddInfo("real:real-ra4:audio::name", "Coded Frame Size", "int32u");
            AddInfo("real:real-ra4:audio::name", "Audio Bytes", "int32u");
            AddInfo("real:real-ra4:audio::name", "Bytes Per Minute", "int32u");
            AddInfo("real:real-ra4:audio::name", "Unknown", "int32u");
            AddInfo("real:real-ra4:audio::name", "Sub Packet H", "int16u");
            AddInfo("real:real-ra4:audio::name", "Audio Frame Size", "int16u");
            AddInfo("real:real-ra4:audio::name", "Sub Packet Size", "int16u");
            AddInfo("real:real-ra4:audio::name", "Unknown", "int16u");
            AddInfo("real:real-ra4:audio::name", "Sample Rate", "int16u");
            AddInfo("real:real-ra4:audio::name", "Unknown", "int16u");
            AddInfo("real:real-ra4:audio::name", "Bits Per Sample", "int16u");
            AddInfo("real:real-ra4:audio::name", "Channels", "int16u");
            AddInfo("real:real-ra4:audio::name", "Four CC2 Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Four CC2", "undef");
            AddInfo("real:real-ra4:audio::name", "Four CC3 Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Four CC3", "undef");
            AddInfo("real:real-ra4:audio::name", "Unknown", "int8u");
            AddInfo("real:real-ra4:audio::name", "Unknown", "int16u");
            AddInfo("real:real-ra4:audio::name", "Title Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Title", "string");
            AddInfo("real:real-ra4:audio::name", "Artist Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Artist", "string");
            AddInfo("real:real-ra4:audio::name", "Copyright Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Copyright", "string");
            AddInfo("real:real-ra4:audio::name", "Comment Len", "int8u");
            AddInfo("real:real-ra4:audio::name", "Comment", "string");
        }


        static void InitTable705()
        {
            AddInfo("real:real-ra5:audio::name", "Four CC1", "undef");
            AddInfo("real:real-ra5:audio::name", "Audio File Size", "int32u");
            AddInfo("real:real-ra5:audio::name", "Version 2", "int16u");
            AddInfo("real:real-ra5:audio::name", "Header Size", "int32u");
            AddInfo("real:real-ra5:audio::name", "Codec Flavor ID", "int16u");
            AddInfo("real:real-ra5:audio::name", "Coded Frame Size", "int32u");
            AddInfo("real:real-ra5:audio::name", "Audio Bytes", "int32u");
            AddInfo("real:real-ra5:audio::name", "Bytes Per Minute", "int32u");
            AddInfo("real:real-ra5:audio::name", "Unknown", "int32u");
            AddInfo("real:real-ra5:audio::name", "Sub Packet H", "int16u");
            AddInfo("real:real-ra5:audio::name", "Frame Size", "int16u");
            AddInfo("real:real-ra5:audio::name", "Sub Packet Size", "int16u");
            AddInfo("real:real-ra5:audio::name", "Sample Rate", "int16u");
            AddInfo("real:real-ra5:audio::name", "Sample Rate 2", "int16u");
            AddInfo("real:real-ra5:audio::name", "Bits Per Sample", "int32u");
            AddInfo("real:real-ra5:audio::name", "Channels", "int16u");
            AddInfo("real:real-ra5:audio::name", "Genr", "int32u");
            AddInfo("real:real-ra5:audio::name", "Four CC3", "undef");
        }


        static void InitTable706()
        {
            AddInfo("real:real-cont:video::name", "Title Len", "int16u");
            AddInfo("real:real-cont:video::name", "Title", "string");
            AddInfo("real:real-cont:video::name", "Author Len", "int16u");
            AddInfo("real:real-cont:video::name", "Author", "string");
            AddInfo("real:real-cont:video::name", "Copyright Len", "int16u");
            AddInfo("real:real-cont:video::name", "Copyright", "string");
            AddInfo("real:real-cont:video::name", "Comment Len", "int16u");
            AddInfo("real:real-cont:video::name", "Comment", "string");
        }


        static void InitTable707()
        {
            AddInfo("real:real-mdpr:video::name", "Audiences", "?");
            AddInfo("real:real-mdpr:video::name", "Audio Format", "?");
            AddInfo("real:real-mdpr:video::name", "Content Rating", "?");
            AddInfo("real:real-mdpr:video::name", "Create Date", "?");
            AddInfo("real:real-mdpr:video::name", "Description", "?");
            AddInfo("real:real-mdpr:video::name", "File ID", "?");
            AddInfo("real:real-mdpr:video::name", "Software", "?");
            AddInfo("real:real-mdpr:video::name", "Indexable", "?");
            AddInfo("real:real-mdpr:video::name", "Keywords", "?");
            AddInfo("real:real-mdpr:video::name", "Modify Date", "?");
            AddInfo("real:real-mdpr:video::name", "Target Audiences", "?");
            AddInfo("real:real-mdpr:video::name", "Video Quality", "?");
            AddInfo("real:real-mdpr:video::name", "Audio Mode", "?");
            AddInfo("real:real-mdpr:video::name", "Video Mode", "?");
        }


        static void InitTable708()
        {
            AddInfo("real:real-mdpr:video::name", "Stream Number", "int16u");
            AddInfo("real:real-mdpr:video::name", "Stream Max Bitrate", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Avg Bitrate", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Max Packet Size", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Avg Packet Size", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Start Time", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Preroll", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Duration", "int32u");
            AddInfo("real:real-mdpr:video::name", "Stream Name Len", "int8u");
            AddInfo("real:real-mdpr:video::name", "Stream Name", "string");
            AddInfo("real:real-mdpr:video::name", "Stream Mime Len", "int8u");
            AddInfo("real:real-mdpr:video::name", "Stream Mime Type", "string");
            AddInfo("real:real-mdpr:video::name", "File Info Len", "int32u");
            AddInfo("real:real-mdpr:video::name", "File Info Len 2", "int32u");
            AddInfo("real:real-mdpr:video::name", "File Info Version", "int16u");
            AddInfo("real:real-mdpr:video::name", "Physical Streams", "int16u");
            AddInfo("real:real-mdpr:video::name", "Physical Stream Numbers", "int16u");
            AddInfo("real:real-mdpr:video::name", "Data Offsets", "int32u");
            AddInfo("real:real-mdpr:video::name", "Num Rules", "int16u");
            AddInfo("real:real-mdpr:video::name", "Physical Stream Number Map", "int16u");
            AddInfo("real:real-mdpr:video::name", "Num Properties", "int16u");
        }


        static void InitTable709()
        {
            AddInfo("real:real-rjmd:video::name", "Album Name", "?");
            AddInfo("real:real-rjmd:video::name", "Track Category", "?");
            AddInfo("real:real-rjmd:video::name", "Track Comments", "?");
            AddInfo("real:real-rjmd:video::name", "Track Lyrics", "?");
        }


        static void InitTable710()
        {
            AddInfo("real:real:video::name", "Text", "?");
            AddInfo("real:real:video::name", "URL", "?");
        }


        static void InitTable711()
        {
            AddInfo("real:real-prop:video::name", "Max Bitrate", "int32u");
            AddInfo("real:real-prop:video::name", "Avg Bitrate", "int32u");
            AddInfo("real:real-prop:video::name", "Max Packet Size", "int32u");
            AddInfo("real:real-prop:video::name", "Avg Packet Size", "int32u");
            AddInfo("real:real-prop:video::name", "Num Packets", "int32u");
            AddInfo("real:real-prop:video::name", "Duration", "int32u");
            AddInfo("real:real-prop:video::name", "Preroll", "int32u");
            AddInfo("real:real-prop:video::name", "Index Offset", "int32u");
            AddInfo("real:real-prop:video::name", "Data Offset", "int32u");
            AddInfo("real:real-prop:video::name", "Num Streams", "int16u");
            AddInfo("real:real-prop:video::name", "Flags", "int16u");
        }


        static void InitTable712()
        {
            AddInfo("makernotes:reconyx:camera::name", "Maker Note Version", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Firmware Version", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Firmware Date", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Trigger Mode", "string");
            AddInfo("makernotes:reconyx:camera::name", "Sequence", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Event Number", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Date/Time Original", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Moon Phase", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Ambient Temperature Fahrenheit", "int16s");
            AddInfo("makernotes:reconyx:camera::name", "Ambient Temperature", "int16s");
            AddInfo("makernotes:reconyx:camera::name", "Serial Number", "undef");
            AddInfo("makernotes:reconyx:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Brightness", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Infrared Illuminator", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Motion Sensitivity", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "Battery Voltage", "int16u");
            AddInfo("makernotes:reconyx:camera::name", "User Label", "string");
        }


        static void InitTable713()
        {
            AddInfo("makernotes:ricoh:video::name", "Ricoh RDC2", "?");
            AddInfo("makernotes:ricoh:video::name", "Thumbnail Image", "?");
            AddInfo("makernotes:ricoh:video::name", "Comment", "?");
        }


        static void InitTable714()
        {
            AddInfo("makernotes:ricoh:camera::name", "Faces Detected", "int8u");
            AddInfo("makernotes:ricoh:camera::name", "Face Detect Frame Size", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Face 8 Position", "int16u");
        }


        static void InitTable715()
        {
            AddInfo("makernotes:ricoh:camera::name", "Firmware Revision", "string");
            AddInfo("makernotes:ricoh:camera::name", "Firmware Revision 2", "string");
        }


        static void InitTable716()
        {
            AddInfo("makernotes:ricoh:image::name", "Ricoh Image Width", "int16u");
            AddInfo("makernotes:ricoh:image::name", "Ricoh Image Height", "int16u");
            AddInfo("makernotes:ricoh:image::name", "Ricoh Date", "int8u");
            AddInfo("makernotes:ricoh:image::name", "Preview Image Start", "int16u");
            AddInfo("makernotes:ricoh:image::name", "Preview Image Length", "int16u");
            AddInfo("makernotes:ricoh:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:ricoh:image::name", "Macro", "int8u");
            AddInfo("makernotes:ricoh:image::name", "Sharpness", "int8u");
            AddInfo("makernotes:ricoh:image::name", "White Balance", "int8u");
            AddInfo("makernotes:ricoh:image::name", "ISO Setting", "int8u");
            AddInfo("makernotes:ricoh:image::name", "Saturation", "int8u");
        }


        static void InitTable717()
        {
            AddInfo("makernotes:ricoh:camera::name", "Maker Note Type", "string");
            AddInfo("makernotes:ricoh:camera::name", "Firmware Version", "string");
            AddInfo("makernotes:ricoh:camera::name", "Serial Number", "undef");
            AddInfo("makernotes:ricoh:camera::name", "Internal Serial Number", "undef");
            AddInfo("makernotes:ricoh:camera::name", "Recording Format", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Exposure Program", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Sharpness", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "White Balance Fine Tune", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Auto Bracketing", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Macro Mode", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:ricoh:camera::name", "Manual Flash Output", "rational64s");
            AddInfo("makernotes:ricoh:camera::name", "Full Press Snap", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Dynamic Range Expansion", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Noise Reduction", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Image Effects", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Vignetting", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Contrast", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Saturation", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Sharpness", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Toning Effect", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Hue Adjust", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Wide Adapter", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Crop Mode 35mm", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "ND Filter", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "WB Bracket Shot Number", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "AF Status", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "AF Area X Position 1", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "AF Area Y Position 1", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "AF Area X Position", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "AF Area Y Position", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:ricoh:camera::name", "Color Temp Kelvin", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Color Temperature", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Focal Length", "rational64u");
            AddInfo("makernotes:ricoh:camera::name", "Sensor Width", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Sensor Height", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Cropped Image Width", "int32u");
            AddInfo("makernotes:ricoh:camera::name", "Cropped Image Height", "int32u");
        }


        static void InitTable718()
        {
            AddInfo("app5:rmeta:image::name", "Azimuth", "?");
            AddInfo("app5:rmeta:image::name", "Condition", "?");
            AddInfo("app5:rmeta:image::name", "Lit", "?");
            AddInfo("app5:rmeta:image::name", "Location", "?");
            AddInfo("app5:rmeta:image::name", "Sign Type", "?");
            AddInfo("app5:rmeta:image::name", "Sound File", "?");
        }


        static void InitTable719()
        {
            AddInfo("makernotes:ricoh:camera::name", "Body Firmware", "string");
            AddInfo("makernotes:ricoh:camera::name", "Body Serial Number", "string");
            AddInfo("makernotes:ricoh:camera::name", "Lens Firmware", "string");
            AddInfo("makernotes:ricoh:camera::name", "Lens Serial Number", "string");
        }


        static void InitTable720()
        {
            AddInfo("makernotes:ricoh:camera::name", "Manufacture Date 1", "string");
            AddInfo("makernotes:ricoh:camera::name", "Manufacture Date 2", "string");
            AddInfo("makernotes:ricoh:camera::name", "Noise Reduction", "int32u");
        }


        static void InitTable721()
        {
            AddInfo("makernotes:ricoh:camera::name", "Blue Gain", "?");
            AddInfo("makernotes:ricoh:camera::name", "Green Gain", "?");
            AddInfo("makernotes:ricoh:camera::name", "Firmware Version", "?");
            AddInfo("makernotes:ricoh:camera::name", "Red Gain", "?");
            AddInfo("makernotes:ricoh:camera::name", "Firmware Version", "?");
        }


        static void InitTable722()
        {
            AddInfo("makernotes:ricoh:camera::name", "Accelerometer", "rational64s");
            AddInfo("makernotes:ricoh:camera::name", "Compass", "rational64u");
        }


        static void InitTable723()
        {
            AddInfo("makernotes:ricoh:camera::name", "Ricoh Model", "string");
            AddInfo("makernotes:ricoh:camera::name", "Ricoh Make", "undef");
        }


        static void InitTable724()
        {
            AddInfo("makernotes:samsung:video::name", "Effect", "?");
            AddInfo("makernotes:samsung:video::name", "Quality", "?");
        }


        static void InitTable725()
        {
            AddInfo("makernotes:samsung:camera::name", "Make", "string");
            AddInfo("makernotes:samsung:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:samsung:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:samsung:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:samsung:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:samsung:camera::name", "ISO", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Software", "string");
        }


        static void InitTable726()
        {
            AddInfo("makernotes:samsung:image::name", "Maker Note Version", "undef");
            AddInfo("makernotes:samsung:image::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:samsung:image::name", "Preview Image Length", "int32u");
        }


        static void InitTable727()
        {
            AddInfo("makernotes:samsung:image::name", "Picture Wizard Mode", "int16u");
            AddInfo("makernotes:samsung:image::name", "Picture Wizard Color", "int16u");
            AddInfo("makernotes:samsung:image::name", "Picture Wizard Saturation", "int16u");
            AddInfo("makernotes:samsung:image::name", "Picture Wizard Sharpness", "int16u");
            AddInfo("makernotes:samsung:image::name", "Picture Wizard Contrast", "int16u");
        }


        static void InitTable728()
        {
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Width", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Height", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Offset", "int32u");
        }


        static void InitTable729()
        {
            AddInfo("makernotes:samsung:other::name", "Embedded Image", "?");
            AddInfo("makernotes:samsung:other::name", "Embedded Image Name", "?");
            AddInfo("makernotes:samsung:other::name", "Embedded Audio File", "?");
            AddInfo("makernotes:samsung:other::name", "Embedded Audio File Name", "?");
        }


        static void InitTable730()
        {
            AddInfo("makernotes:samsung:image::name", "Maker Note Version", "undef");
            AddInfo("makernotes:samsung:image::name", "Device Type", "int32u");
            AddInfo("makernotes:samsung:image::name", "Samsung Model ID", "int32u");
            AddInfo("makernotes:samsung:image::name", "Picture Wizard", "int16u");
            AddInfo("makernotes:samsung:image::name", "Local Location Name", "string");
            AddInfo("makernotes:samsung:image::name", "Location Name", "string");
            AddInfo("makernotes:samsung:image::name", "Camera Temperature", "rational64s");
            AddInfo("makernotes:samsung:image::name", "Raw Compression Mode", "int32u");
            AddInfo("makernotes:samsung:image::name", "Face Detect", "int16u");
            AddInfo("makernotes:samsung:image::name", "Face Recognition", "int32u");
            AddInfo("makernotes:samsung:image::name", "Face Name", "string");
            AddInfo("makernotes:samsung:image::name", "Firmware Name", "string");
            AddInfo("makernotes:samsung:image::name", "Lens Type", "int16u");
            AddInfo("makernotes:samsung:image::name", "Lens Firmware", "string");
            AddInfo("makernotes:samsung:image::name", "Internal Lens Serial Number", "string");
            AddInfo("makernotes:samsung:image::name", "Sensor Areas", "int32u");
            AddInfo("makernotes:samsung:image::name", "Color Space", "int16u");
            AddInfo("makernotes:samsung:image::name", "Smart Range", "int16u");
            AddInfo("makernotes:samsung:image::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:samsung:image::name", "ISO", "int32u");
            AddInfo("makernotes:samsung:image::name", "Exposure Time", "rational64u");
            AddInfo("makernotes:samsung:image::name", "F Number", "rational64u");
            AddInfo("makernotes:samsung:image::name", "Focal Length In 35mm Format", "int32u");
            AddInfo("makernotes:samsung:image::name", "Encryption Key", "int32u");
            AddInfo("makernotes:samsung:image::name", "WB RGGB Levels Uncorrected", "int32u");
            AddInfo("makernotes:samsung:image::name", "WB RGGB Levels Auto", "int32u");
            AddInfo("makernotes:samsung:image::name", "WB RGGB Levels Illuminator 1", "int32u");
            AddInfo("makernotes:samsung:image::name", "WB RGGB Levels Illuminator 2", "int32u");
            AddInfo("makernotes:samsung:image::name", "WB RGGB Levels Black", "int32s");
            AddInfo("makernotes:samsung:image::name", "Color Matrix", "int32s");
            AddInfo("makernotes:samsung:image::name", "Color Matrix SRGB", "int32s");
            AddInfo("makernotes:samsung:image::name", "Color Matrix Adobe RGB", "int32s");
            AddInfo("makernotes:samsung:image::name", "Cb Cr Matrix Default", "int32s");
            AddInfo("makernotes:samsung:image::name", "Cb Cr Matrix", "int32s");
            AddInfo("makernotes:samsung:image::name", "Cb Cr Gain Default", "int32u");
            AddInfo("makernotes:samsung:image::name", "Cb Cr Gain", "int32u");
            AddInfo("makernotes:samsung:image::name", "Tone Curve SRGB Default", "int32u");
            AddInfo("makernotes:samsung:image::name", "Tone Curve Adobe RGB Default", "int32u");
            AddInfo("makernotes:samsung:image::name", "Tone Curve SRGB", "int32u");
            AddInfo("makernotes:samsung:image::name", "Tone Curve Adobe RGB", "int32u");
            AddInfo("makernotes:samsung:image::name", "Raw Data", "int32s");
            AddInfo("makernotes:samsung:image::name", "Distortion", "int32s");
            AddInfo("makernotes:samsung:image::name", "Chromatic Aberration", "int16u");
            AddInfo("makernotes:samsung:image::name", "Vignetting", "int16u");
            AddInfo("makernotes:samsung:image::name", "Vignetting Correction", "int16u");
            AddInfo("makernotes:samsung:image::name", "Vignetting Setting", "int16u");
            AddInfo("makernotes:samsung:image::name", "Samsung Type 2 0xa055", "int32s");
            AddInfo("makernotes:samsung:image::name", "Samsung Type 2 0xa056", "int32s");
            AddInfo("makernotes:samsung:image::name", "Samsung Type 2 0xa057", "int32s");
        }


        static void InitTable731()
        {
            AddInfo("makernotes:samsung:camera::name", "Make", "string");
            AddInfo("makernotes:samsung:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Width", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Height", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:samsung:camera::name", "Thumbnail Image", "undef");
        }


        static void InitTable732()
        {
            AddInfo("makernotes:sanyo:image::name", "Faces Detected", "int32u");
            AddInfo("makernotes:sanyo:image::name", "Face Position", "int32u");
        }


        static void InitTable733()
        {
            AddInfo("makernotes:sanyo:camera::name", "Make", "string");
            AddInfo("makernotes:sanyo:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:sanyo:camera::name", "Exposure Time", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "F Number", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Exposure Compensation", "int32s");
            AddInfo("makernotes:sanyo:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Focal Length", "int32u");
        }


        static void InitTable734()
        {
            AddInfo("makernotes:sanyo:camera::name", "Make", "string");
            AddInfo("makernotes:sanyo:camera::name", "Camera Model Name", "string");
            AddInfo("makernotes:sanyo:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:sanyo:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:sanyo:camera::name", "ISO", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Software", "undef");
            AddInfo("makernotes:sanyo:camera::name", "Software", "undef");
        }


        static void InitTable735()
        {
            AddInfo("makernotes:sanyo:camera::name", "Maker Note Offset", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Sanyo Thumbnail", "undef");
            AddInfo("makernotes:sanyo:camera::name", "Special Mode", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Sanyo Quality", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Macro", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Digital Zoom", "rational64u");
            AddInfo("makernotes:sanyo:camera::name", "Software Version", "?");
            AddInfo("makernotes:sanyo:camera::name", "Pict Info", "?");
            AddInfo("makernotes:sanyo:camera::name", "Camera ID", "?");
            AddInfo("makernotes:sanyo:camera::name", "Sequential Shot", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Wide Range", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Color Adjustment Mode", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Quick Shot", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Self Timer", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Voice Memo", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Record Shutter Release", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Flicker Reduce", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Optical Zoom On", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Digital Zoom On", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Light Source Special", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Resaved", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Scene Select", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Manual Focus Distance", "rational64u");
            AddInfo("makernotes:sanyo:camera::name", "Sequence Shot Interval", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:sanyo:camera::name", "Data Dump", "?");
        }


        static void InitTable736()
        {
            AddInfo("makernotes:sanyo:camera::name", "Thumbnail Width", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Thumbnail Height", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Thumbnail Length", "int32u");
            AddInfo("makernotes:sanyo:camera::name", "Thumbnail Offset", "int32u");
        }


        static void InitTable737()
        {
            AddInfo("app4:scalado:image::name", "Preview Image Height", "int32s");
            AddInfo("app4:scalado:image::name", "Preview Quality", "int32s");
            AddInfo("app4:scalado:image::name", "Data Length", "int32s");
            AddInfo("app4:scalado:image::name", "Preview Image Width", "int32s");
        }


        static void InitTable738()
        {
            AddInfo("makernotes:sigma:camera::name", "Serial Number", "string");
            AddInfo("makernotes:sigma:camera::name", "Drive Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Resolution Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "AF Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Focus Setting", "string");
            AddInfo("makernotes:sigma:camera::name", "White Balance", "string");
            AddInfo("makernotes:sigma:camera::name", "Exposure Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Metering Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Lens Focal Range", "string");
            AddInfo("makernotes:sigma:camera::name", "Color Space", "string");
            AddInfo("makernotes:sigma:camera::name", "Exposure Compensation", "string");
            AddInfo("makernotes:sigma:camera::name", "Exposure Adjust", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Contrast", "string");
            AddInfo("makernotes:sigma:camera::name", "Contrast", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Shadow", "string");
            AddInfo("makernotes:sigma:camera::name", "Shadow", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Highlight", "string");
            AddInfo("makernotes:sigma:camera::name", "Highlight", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Saturation", "string");
            AddInfo("makernotes:sigma:camera::name", "Saturation", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Sharpness", "string");
            AddInfo("makernotes:sigma:camera::name", "Sharpness", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "X3 Fill Light", "string");
            AddInfo("makernotes:sigma:camera::name", "X3 Fill Light", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Color Adjustment", "string");
            AddInfo("makernotes:sigma:camera::name", "Color Adjustment", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Adjustment Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Quality", "string");
            AddInfo("makernotes:sigma:camera::name", "Firmware", "string");
            AddInfo("makernotes:sigma:camera::name", "Software", "string");
            AddInfo("makernotes:sigma:camera::name", "Auto Bracket", "string");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Chrominance Noise Reduction", "string");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Luminance Noise Reduction", "string");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Size", "int16u");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Preview Image Size", "int16u");
            AddInfo("makernotes:sigma:camera::name", "AF Point", "string");
            AddInfo("makernotes:sigma:camera::name", "Maker Note Version", "undef");
            AddInfo("makernotes:sigma:camera::name", "File Format", "string");
            AddInfo("makernotes:sigma:camera::name", "Calibration", "string");
            AddInfo("makernotes:sigma:camera::name", "File Format", "string");
            AddInfo("makernotes:sigma:camera::name", "Lens Type", "string");
            AddInfo("makernotes:sigma:camera::name", "Lens Focal Range", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Lens Max Aperture Range", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Color Mode", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Lens Aperture Range", "string");
            AddInfo("makernotes:sigma:camera::name", "Calibration", "string");
            AddInfo("makernotes:sigma:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Exposure Time", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Exposure Time 2", "string");
            AddInfo("makernotes:sigma:camera::name", "Burst Shot", "int32u");
            AddInfo("makernotes:sigma:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Sensor Temperature", "string");
            AddInfo("makernotes:sigma:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Firmware", "string");
            AddInfo("makernotes:sigma:camera::name", "White Balance", "string");
            AddInfo("makernotes:sigma:camera::name", "Picture Mode", "string");
            AddInfo("makernotes:sigma:camera::name", "Lens Aperture Range", "string");
            AddInfo("makernotes:sigma:camera::name", "F Number", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Exposure Time", "rational64u");
            AddInfo("makernotes:sigma:camera::name", "Exposure Time 2", "string");
            AddInfo("makernotes:sigma:camera::name", "Exposure Time 2", "string");
            AddInfo("makernotes:sigma:camera::name", "Exposure Compensation", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Sensor Temperature", "string");
            AddInfo("makernotes:sigma:camera::name", "Flash Exposure Comp", "rational64s");
            AddInfo("makernotes:sigma:camera::name", "Firmware", "string");
            AddInfo("makernotes:sigma:camera::name", "White Balance", "string");
            AddInfo("makernotes:sigma:camera::name", "Digital Filter", "string");
        }


        static void InitTable739()
        {
            AddInfo("sigmaraw:sigmaraw:other::name", "File Version", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Image Unique ID", "undef");
            AddInfo("sigmaraw:sigmaraw:other::name", "Mark Bits", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Image Width", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Image Height", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Rotation", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "White Balance", "string");
            AddInfo("sigmaraw:sigmaraw:other::name", "Scene Capture Type", "string");
        }


        static void InitTable740()
        {
            AddInfo("sigmaraw:sigmaraw:other::name", "File Version", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Image Width", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Image Height", "int32u");
            AddInfo("sigmaraw:sigmaraw:other::name", "Rotation", "int32u");
        }


        static void InitTable741()
        {
            AddInfo("sigmaraw:sigmaraw:camera::name", "Unused", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Exposure Adjust", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Contrast", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Shadow", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Highlight", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Saturation", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Sharpness", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Red Adjust", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Green Adjust", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Blue Adjust", "float");
            AddInfo("sigmaraw:sigmaraw:camera::name", "X3 Fill Light", "float");
        }


        static void InitTable742()
        {
            AddInfo("sigmaraw:sigmaraw:other::name", "Preview Image", "?");
            AddInfo("sigmaraw:sigmaraw:other::name", "Jpg From Raw", "?");
            AddInfo("sigmaraw:sigmaraw:other::name", "Preview Image", "?");
        }


        static void InitTable743()
        {
            AddInfo("sigmaraw:sigmaraw:camera::name", "Metering Mode", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "AF Area", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "AF In Focus", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Focus Mode", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "F Number", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Aperture Displayed", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Bracket Shot", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Burst Shot", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Make", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Model", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Camera Name", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Serial Number", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Scene Capture Type", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Color Space", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Drive Mode", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Eval State", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Exposure Compensation", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Net Exposure Compensation", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Integration Time", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Firmware Version", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Flash Mode", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Flash Exp Comp", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Flash Power", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Flash TTL Mode", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Flash Type", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Focal Length", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Focal Length In 35mm Format", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Focus", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Image Board ID", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Imager Board ID", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Sensor Temperature", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "ISO", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Lens Aperture Range", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Lens Focal Range", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Lens Type", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Exposure Program", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Quality", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Sensor ID", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Exposure Time", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Shutter Speed Displayed", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Date/Time Original", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "Version BF", "?");
            AddInfo("sigmaraw:sigmaraw:camera::name", "White Balance", "?");
        }


        static void InitTable744()
        {
            AddInfo("makernotes:sony:camera::name", "AF Type", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point In Focus", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point In Focus", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point At Shutter Release", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point At Shutter Release", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Micro Adj", "int8s");
            AddInfo("makernotes:sony:camera::name", "AF Points Used", "int32u");
            AddInfo("makernotes:sony:camera::name", "AF Micro Adj", "int8s");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int8u");
        }


        static void InitTable745()
        {
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Near Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Near Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-middle", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-middle", "int16s");
        }


        static void InitTable746()
        {
            AddInfo("makernotes:sony:camera::name", "AF Status Upper Far Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-left Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Left Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower Far Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-left Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-left Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-left Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Left Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Near Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Near Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-middle", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-middle", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper Far Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-right Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Right Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower Far Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-right Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Right Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-right Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-right Vertical", "int16s");
        }


        static void InitTable747()
        {
            AddInfo("makernotes:sony:camera::name", "Lens Spec", "undef");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Assist-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom Assist-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-7", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-9", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-10", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-11", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-12", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center-14", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Assist-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top Assist-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Far Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Upper-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Lower-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center F2-8", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Micro Adj Value", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Micro Adj Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Micro Adj Registered Lenses", "int8u");
        }


        static void InitTable748()
        {
            AddInfo("makernotes:sony:camera::name", "Lens Spec", "undef");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Middle Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right", "int16s");
        }


        static void InitTable749()
        {
            AddInfo("makernotes:sony:camera::name", "Lens Spec", "undef");
            AddInfo("makernotes:sony:camera::name", "Focal Length", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focal Length Tele Zoom", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Status", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Top-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom-right", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Point", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Status Active Sensor", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Middle Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Vertical", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Top-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Bottom-left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Left", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Center Horizontal", "int16s");
            AddInfo("makernotes:sony:camera::name", "AF Status Right", "int16s");
        }


        static void InitTable750()
        {
            AddInfo("makernotes:sony:camera::name", "Exposure Time", "int16u");
            AddInfo("makernotes:sony:camera::name", "F Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "High Speed Sync", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance Fine Tune", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Custom", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Custom", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Point Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Level", "int16u");
            AddInfo("makernotes:sony:camera::name", "Creative Style", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Space", "int16u");
            AddInfo("makernotes:sony:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:sony:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:sony:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:sony:camera::name", "Zone Matching Value", "int16u");
            AddInfo("makernotes:sony:camera::name", "Brightness", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Control", "int16u");
            AddInfo("makernotes:sony:camera::name", "Priority Setup Shutter Release", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Illuminator", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF With Shutter", "int16u");
            AddInfo("makernotes:sony:camera::name", "Long Exposure Noise Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Style", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Switch", "int16u");
            AddInfo("makernotes:sony:camera::name", "Shutter Speed Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Aperture Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int16u");
            AddInfo("makernotes:sony:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:sony:camera::name", "AE Lock", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Action 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Battery State", "int16u");
            AddInfo("makernotes:sony:camera::name", "Battery Level", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Status", "int16u");
            AddInfo("makernotes:sony:camera::name", "Sony Image Size", "int16u");
            AddInfo("makernotes:sony:camera::name", "Aspect Ratio", "int16u");
            AddInfo("makernotes:sony:camera::name", "Quality", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Level Increments", "int16u");
            AddInfo("makernotes:sony:camera::name", "Red Eye Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "Folder Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Number", "int16u");
        }


        static void InitTable751()
        {
            AddInfo("makernotes:sony:camera::name", "Exposure Time", "int16u");
            AddInfo("makernotes:sony:camera::name", "F Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "High Speed Sync", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance Fine Tune", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Set", "int16u");
            AddInfo("makernotes:sony:camera::name", "Custom WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Custom", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Custom", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Point Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Metering Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "ISO Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Level", "int16u");
            AddInfo("makernotes:sony:camera::name", "Creative Style", "int16u");
            AddInfo("makernotes:sony:camera::name", "Sharpness", "int16u");
            AddInfo("makernotes:sony:camera::name", "Contrast", "int16u");
            AddInfo("makernotes:sony:camera::name", "Saturation", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Control", "int16u");
            AddInfo("makernotes:sony:camera::name", "Long Exposure Noise Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Style", "int16u");
            AddInfo("makernotes:sony:camera::name", "Shutter Speed Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Aperture Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization Setting", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int16u");
            AddInfo("makernotes:sony:camera::name", "Rotation", "int16u");
            AddInfo("makernotes:sony:camera::name", "AE Lock", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Action 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Status", "int16u");
            AddInfo("makernotes:sony:camera::name", "Sony Image Size", "int16u");
            AddInfo("makernotes:sony:camera::name", "Aspect Ratio", "int16u");
            AddInfo("makernotes:sony:camera::name", "Quality", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Level Increments", "int16u");
            AddInfo("makernotes:sony:camera::name", "Drive Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Color Space", "int16u");
        }


        static void InitTable752()
        {
            AddInfo("makernotes:sony:camera::name", "Shutter Speed Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Aperture Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation Set", "int8u");
            AddInfo("makernotes:sony:camera::name", "Drive Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sony Image Size", "int8u");
            AddInfo("makernotes:sony:camera::name", "Aspect Ratio", "int8u");
            AddInfo("makernotes:sony:camera::name", "Quality", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Space", "int8u");
            AddInfo("makernotes:sony:camera::name", "Creative Style Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Contrast Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "Saturation Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "Sharpness Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "White Balance Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Set", "int8s");
            AddInfo("makernotes:sony:camera::name", "Custom WB RGB Levels", "int16urev");
            AddInfo("makernotes:sony:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Control", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "Smile Shutter Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Red Eye Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "HDR Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Viewing Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Face Detection", "int8u");
            AddInfo("makernotes:sony:camera::name", "Smile Shutter", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sweep Panorama Size", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sweep Panorama Direction", "int8u");
            AddInfo("makernotes:sony:camera::name", "Drive Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Multi Frame Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View AF Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "3D Panorama Size", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Button Pressed", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View Metering", "int8u");
            AddInfo("makernotes:sony:camera::name", "Viewing Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "AE Lock", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status Built-in", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status External", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sequence Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Folder Number", "int32u");
            AddInfo("makernotes:sony:camera::name", "Image Number", "int32u");
            AddInfo("makernotes:sony:camera::name", "Shot Number Since Power Up 2", "int32u");
            AddInfo("makernotes:sony:camera::name", "AF Button Pressed", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View Metering", "int8u");
            AddInfo("makernotes:sony:camera::name", "Viewing Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "AE Lock", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status Built-in", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status External", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sequence Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Image Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "Folder Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "E-mount Version Lens", "int16u");
            AddInfo("makernotes:sony:camera::name", "E-mount Version Camera", "int16u");
            AddInfo("makernotes:sony:camera::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "Folder Number", "int16u");
        }


        static void InitTable753()
        {
            AddInfo("makernotes:sony:image::name", "Preview Image Start", "int32u");
            AddInfo("makernotes:sony:image::name", "Preview Image Length", "int32u");
            AddInfo("makernotes:sony:image::name", "Maker Note Version", "undef");
        }


        static void InitTable754()
        {
            AddInfo("makernotes:sony:camera::name", "Battery Temperature", "int8u");
            AddInfo("makernotes:sony:camera::name", "Battery Unknown", "undef");
            AddInfo("makernotes:sony:camera::name", "Battery Voltage", "undef");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Battery Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Extra Info Version", "int8u");
        }


        static void InitTable755()
        {
            AddInfo("makernotes:sony:camera::name", "Battery Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization", "int8u");
        }


        static void InitTable756()
        {
            AddInfo("makernotes:sony:camera::name", "Battery Unknown", "int16u");
            AddInfo("makernotes:sony:camera::name", "Battery Temperature", "int8u");
            AddInfo("makernotes:sony:camera::name", "Battery Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Battery Voltage 1", "int16u");
            AddInfo("makernotes:sony:camera::name", "Battery Voltage 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization", "int8u");
            AddInfo("makernotes:sony:camera::name", "Battery State", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:camera::name", "Mode Dial Position", "int8u");
            AddInfo("makernotes:sony:camera::name", "Memory Card Configuration", "int8u");
            AddInfo("makernotes:sony:camera::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:sony:camera::name", "Camera Orientation", "int8u");
        }


        static void InitTable757()
        {
            AddInfo("makernotes:sony:camera::name", "Faces Detected", "int16s");
            AddInfo("makernotes:sony:camera::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 8 Position", "int16u");
        }


        static void InitTable758()
        {
            AddInfo("makernotes:sony:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 8 Position", "int16u");
        }


        static void InitTable759()
        {
            AddInfo("makernotes:sony:image::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 4 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 5 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 6 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 7 Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Face 8 Position", "int16u");
        }


        static void InitTable760()
        {
            AddInfo("makernotes:sony:camera::name", "Face Test 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Faces Detected", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face Test 8", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 1 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 2 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 3 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 4 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 5 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 6 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 7 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Potential Face 8 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 1 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 2 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 3 Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "Face 4 Position", "int16u");
        }


        static void InitTable761()
        {
            AddInfo("makernotes:sony:camera::name", "Drive Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Drive Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Rotation", "int8u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Bracket Shot Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "White Balance Bracketing", "int8u");
            AddInfo("makernotes:sony:camera::name", "Bracket Shot Number 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Bracket", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Bracket Shot Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:camera::name", "Creative Style", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:sony:camera::name", "Focus Position", "int8u");
            AddInfo("makernotes:sony:camera::name", "Tiff Metering Image", "undef");
        }


        static void InitTable762()
        {
            AddInfo("makernotes:sony:camera::name", "Quality", "int32u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Compensation", "rational64s");
            AddInfo("makernotes:sony:camera::name", "Teleconverter", "int32u");
            AddInfo("makernotes:sony:camera::name", "White Balance Fine Tune", "int32u");
            AddInfo("makernotes:sony:camera::name", "White Balance", "int32u");
            AddInfo("makernotes:sony:camera::name", "Multi Burst Mode", "undef");
            AddInfo("makernotes:sony:camera::name", "Multi Burst Image Width", "int16u");
            AddInfo("makernotes:sony:camera::name", "Multi Burst Image Height", "int16u");
            AddInfo("makernotes:sony:camera::name", "Preview Image", "undef");
            AddInfo("makernotes:sony:camera::name", "Rating", "int32u");
            AddInfo("makernotes:sony:camera::name", "Contrast", "int32s");
            AddInfo("makernotes:sony:camera::name", "Saturation", "int32s");
            AddInfo("makernotes:sony:camera::name", "Sharpness", "int32s");
            AddInfo("makernotes:sony:camera::name", "Brightness", "int32s");
            AddInfo("makernotes:sony:camera::name", "Long Exposure Noise Reduction", "int32u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction", "int16u");
            AddInfo("makernotes:sony:camera::name", "HDR", "int32u");
            AddInfo("makernotes:sony:camera::name", "Multi Frame Noise Reduction", "int32u");
            AddInfo("makernotes:sony:camera::name", "Picture Effect", "int16u");
            AddInfo("makernotes:sony:camera::name", "Soft Skin Effect", "int32u");
            AddInfo("makernotes:sony:camera::name", "Tag 0x2010", "?");
            AddInfo("makernotes:sony:camera::name", "Vignetting Correction", "int32u");
            AddInfo("makernotes:sony:camera::name", "Lateral Chromatic Aberration", "int32u");
            AddInfo("makernotes:sony:camera::name", "Distortion Correction Setting", "int32u");
            AddInfo("makernotes:sony:camera::name", "WB Shift AB GM", "int32s");
            AddInfo("makernotes:sony:camera::name", "Auto Portrait Framed", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int32u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flexible Spot Position", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Point Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Zone Selected", "int8u");
            AddInfo("makernotes:sony:camera::name", "AF Points Used", "?");
            AddInfo("makernotes:sony:camera::name", "AF Points Used", "?");
            AddInfo("makernotes:sony:camera::name", "Focal Plane AF Points Used", "?");
            AddInfo("makernotes:sony:camera::name", "Focal Plane AF Points Used", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9400", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9401", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9402", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9404", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9405", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9406", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9407", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9408", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9409", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940a", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940b", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940c", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940d", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940e", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x940f", "?");
            AddInfo("makernotes:sony:camera::name", "Sony 0x9411", "?");
            AddInfo("makernotes:sony:camera::name", "File Format", "int8u");
            AddInfo("makernotes:sony:camera::name", "Sony Model ID", "int16u");
            AddInfo("makernotes:sony:camera::name", "Creative Style", "string");
            AddInfo("makernotes:sony:camera::name", "Color Temperature", "int32u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter", "int32u");
            AddInfo("makernotes:sony:camera::name", "Scene Mode", "int32u");
            AddInfo("makernotes:sony:camera::name", "Zone Matching", "int32u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer", "int32u");
            AddInfo("makernotes:sony:camera::name", "Image Stabilization", "int32u");
            AddInfo("makernotes:sony:camera::name", "Lens Type", "int32u");
            AddInfo("makernotes:sony:camera::name", "Color Mode", "int32u");
            AddInfo("makernotes:sony:camera::name", "Lens Spec", "int8u");
            AddInfo("makernotes:sony:camera::name", "Full Image Size", "int32u");
            AddInfo("makernotes:sony:camera::name", "Preview Image Size", "int32u");
            AddInfo("makernotes:sony:camera::name", "Macro", "int16u");
            AddInfo("makernotes:sony:camera::name", "Exposure Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Area Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "AF Illuminator", "int16u");
            AddInfo("makernotes:sony:camera::name", "JPEG Quality", "int16u");
            AddInfo("makernotes:sony:camera::name", "Flash Level", "int16s");
            AddInfo("makernotes:sony:camera::name", "Release Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Sequence Number", "int16u");
            AddInfo("makernotes:sony:camera::name", "Anti-Blur", "int16u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int16u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer", "int16u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction 2", "int16u");
            AddInfo("makernotes:sony:camera::name", "Intelligent Auto", "int16u");
            AddInfo("makernotes:sony:camera::name", "White Balance", "int16u");
        }


        static void InitTable763()
        {
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 1", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 3", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 4", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 5", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 6", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 1 Row 7", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 1", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 3", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 4", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 5", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 6", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 7", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 8", "int32u");
            AddInfo("makernotes:sony:image::name", "Meter Info 2 Row 9", "int32u");
        }


        static void InitTable764()
        {
            AddInfo("makernotes:sony:camera::name", "Tiff Metering Image", "?");
        }


        static void InitTable765()
        {
            AddInfo("makernotes:sony:camera::name", "Image Count", "int32u");
            AddInfo("makernotes:sony:camera::name", "Shutter Count", "int32u");
            AddInfo("makernotes:sony:camera::name", "Shutter Count", "int32u");
        }


        static void InitTable766()
        {
            AddInfo("makernotes:sony:camera::name", "Shot Number Since Power Up", "int32u");
        }


        static void InitTable767()
        {
            AddInfo("makernotes:sony:camera::name", "Drive Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:camera::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Dynamic Range Optimizer Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Space", "int8u");
            AddInfo("makernotes:sony:camera::name", "Creative Style Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Contrast Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "Saturation Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "Sharpness Setting", "int8s");
            AddInfo("makernotes:sony:camera::name", "White Balance Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Temperature Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "Color Compensation Filter Set", "int8s");
            AddInfo("makernotes:sony:camera::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Multi Frame Noise Reduction", "int8u");
            AddInfo("makernotes:sony:camera::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "HDR Level", "int8u");
            AddInfo("makernotes:sony:camera::name", "Viewing Mode", "int8u");
            AddInfo("makernotes:sony:camera::name", "Face Detection", "int8u");
            AddInfo("makernotes:sony:camera::name", "Custom WB RB Levels", "int16urev");
            AddInfo("makernotes:sony:camera::name", "Brightness Value", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation Set", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting", "int8u");
            AddInfo("makernotes:sony:camera::name", "F Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Live View AF Method", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO", "int8u");
            AddInfo("makernotes:sony:camera::name", "F Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focal Length 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation 2", "int16s");
            AddInfo("makernotes:sony:camera::name", "Focal Length 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "ISO", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting 2", "int16s");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation 2", "int16s");
            AddInfo("makernotes:sony:camera::name", "F Number", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Time", "int8u");
            AddInfo("makernotes:sony:camera::name", "Orientation 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Position 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focal Length 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int8u");
            AddInfo("makernotes:sony:camera::name", "Exposure Compensation 2", "int16s");
            AddInfo("makernotes:sony:camera::name", "Focus Position 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Exposure Comp. Setting 2", "int16s");
            AddInfo("makernotes:sony:camera::name", "Focus Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Orientation 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Position 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action", "int8u");
            AddInfo("makernotes:sony:camera::name", "Focus Mode 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action 2", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action External", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Action External", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status", "int8u");
            AddInfo("makernotes:sony:camera::name", "Flash Status", "int8u");
        }


        static void InitTable768()
        {
            AddInfo("makernotes:sony:camera::name", "Barcode", "?");
            AddInfo("makernotes:sony:camera::name", "Barcode", "?");
            AddInfo("makernotes:sony:camera::name", "Sensor Temperature", "?");
            AddInfo("makernotes:sony:camera::name", "Firmware Version", "?");
            AddInfo("makernotes:sony:camera::name", "Camera Temperature", "?");
            AddInfo("makernotes:sony:camera::name", "Board Temperature", "?");
            AddInfo("makernotes:sony:camera::name", "Text Info 1", "?");
            AddInfo("makernotes:sony:camera::name", "Text Info 2", "?");
            AddInfo("makernotes:sony:camera::name", "Vibration Reduction", "?");
            AddInfo("makernotes:sony:camera::name", "Barcode", "?");
        }


        static void InitTable769()
        {
            AddInfo("makernotes:sony:image::name", "Jpg From Raw Start", "int32u");
            AddInfo("makernotes:sony:image::name", "Jpg From Raw Length", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony Image Width", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony Image Height", "int16u");
            AddInfo("makernotes:sony:image::name", "Orientation", "int8u");
            AddInfo("makernotes:sony:image::name", "Image Quality", "int8u");
            AddInfo("makernotes:sony:image::name", "Comment", "string");
            AddInfo("makernotes:sony:image::name", "Date/Time Original", "int8u");
            AddInfo("makernotes:sony:image::name", "Modify Date", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Time", "int16s");
            AddInfo("makernotes:sony:image::name", "F Number", "int16s");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Focal Length", "int16s");
            AddInfo("makernotes:sony:image::name", "Flash", "int8u");
        }


        static void InitTable770()
        {
            AddInfo("makernotes:sony:image::name", "Panorama Full Width", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Full Height", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Direction", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Crop Left", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Crop Top", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Crop Right", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Crop Bottom", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Frame Width", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Frame Height", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Source Width", "int32u");
            AddInfo("makernotes:sony:image::name", "Panorama Source Height", "int32u");
        }


        static void InitTable771()
        {
            AddInfo("makernotes:sr2dataifd:camera::name", "Color Mode", "?");
        }


        static void InitTable772()
        {
            AddInfo("makernotes:sr2:camera::name", "SR2 Sub IFD Offset", "?");
            AddInfo("makernotes:sr2:camera::name", "SR2 Sub IFD Length", "?");
            AddInfo("makernotes:sr2:camera::name", "SR2 Sub IFD Key", "int32u");
        }


        static void InitTable773()
        {
            AddInfo("makernotes:sr2subifd:camera::name", "Black Level", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB GRBG Levels Auto", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB GRBG Levels", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Black Level", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGGB Levels", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Daylight", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Cloudy", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Tungsten", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Flash", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 4500K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Fluorescent", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Max Aperture At Max Focal", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Max Aperture At Min Focal", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Max Focal Length", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Min Focal Length", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Color Matrix", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Daylight", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Cloudy", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Tungsten", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Flash", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 4500K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Shade", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Fluorescent", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Fluorescent P1", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Fluorescent P2", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels Fluorescent M1", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 8500K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 6000K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 3200K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "WB RGB Levels 2500K", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "White Level", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Chromatic Aberration Corr Params", "?");
            AddInfo("makernotes:sr2subifd:camera::name", "Distortion Corr Params", "?");
        }


        static void InitTable774()
        {
            AddInfo("makernotes:srf#:camera::name", "SRF2 Key", "?");
            AddInfo("makernotes:srf#:camera::name", "Data Key", "?");
        }


        static void InitTable775()
        {
            AddInfo("makernotes:srf#:camera::name", "SRF6 Offset", "?");
            AddInfo("makernotes:srf#:camera::name", "SRF Data Offset", "?");
            AddInfo("makernotes:srf#:camera::name", "Raw Data Offset", "?");
            AddInfo("makernotes:srf#:camera::name", "Raw Data Length", "?");
            AddInfo("makernotes:srf#:camera::name", "Max Aperture At Max Focal", "?");
            AddInfo("makernotes:srf#:camera::name", "Max Aperture At Min Focal", "?");
            AddInfo("makernotes:srf#:camera::name", "Min Focal Length", "?");
            AddInfo("makernotes:srf#:camera::name", "Max Focal Length", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Red Daylight", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Green Daylight", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Blue Daylight", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Red Cloudy", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Green Cloudy", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Blue Cloudy", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Red Tungsten", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Green Tungsten", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Blue Tungsten", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Red Flash", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Green Flash", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Blue Flash", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Red As Shot", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Green As Shot", "?");
            AddInfo("makernotes:srf#:camera::name", "WB Blue As Shot", "?");
        }


        static void InitTable776()
        {
            AddInfo("makernotes:sony:image::name", "Face Info Offset", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time", "string");
            AddInfo("makernotes:sony:image::name", "Sony Image Height", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony Image Width", "int16u");
            AddInfo("makernotes:sony:image::name", "Faces Detected", "int16u");
            AddInfo("makernotes:sony:image::name", "Face Info Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Meta Version", "string");
        }


        static void InitTable777()
        {
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
        }


        static void InitTable778()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time", "undef");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
        }


        static void InitTable779()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Digital Zoom Ratio", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time", "undef");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
        }


        static void InitTable780()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time", "undef");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
        }


        static void InitTable781()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Digital Zoom Ratio", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time", "undef");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
        }


        static void InitTable782()
        {
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
        }


        static void InitTable783()
        {
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
        }


        static void InitTable784()
        {
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 3", "int8u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Brightness Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Dynamic Range Optimizer", "int8u");
            AddInfo("makernotes:sony:image::name", "HDR Setting", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Compensation", "int16s");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Profile", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Metering Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "WB RGB Levels", "int16u");
            AddInfo("makernotes:sony:image::name", "Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Min Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Max Focal Length", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
        }


        static void InitTable785()
        {
            AddInfo("makernotes:sony:camera::name", "Faces Detected", "?");
            AddInfo("makernotes:sony:camera::name", "Face Detection", "?");
        }


        static void InitTable786()
        {
            AddInfo("makernotes:sony:image::name", "Max Aperture", "int8u");
            AddInfo("makernotes:sony:image::name", "Min Aperture", "int8u");
            AddInfo("makernotes:sony:image::name", "Flash Status", "int8u");
            AddInfo("makernotes:sony:image::name", "Image Count", "int32u");
            AddInfo("makernotes:sony:image::name", "Flash Status", "int8u");
            AddInfo("makernotes:sony:image::name", "Image Count", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony F Number", "int16u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Exposure Time", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony F Number", "int16u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Image Count 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time 2", "undef");
            AddInfo("makernotes:sony:image::name", "Image Count 2", "int32u");
            AddInfo("makernotes:sony:image::name", "Sony Date Time 2", "undef");
            AddInfo("makernotes:sony:image::name", "Internal Serial Number", "int8u");
            AddInfo("makernotes:sony:image::name", "Internal Serial Number", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Spec Features", "undef");
            AddInfo("makernotes:sony:image::name", "Lens Spec Features", "undef");
            AddInfo("makernotes:sony:image::name", "Image Count 3", "int32u");
            AddInfo("makernotes:sony:image::name", "Image Count 3", "int32u");
            AddInfo("makernotes:sony:image::name", "Image Count 3", "int32u");
            AddInfo("makernotes:sony:image::name", "Image Count 3", "int32u");
        }


        static void InitTable787()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Digital Zoom", "int8u");
            AddInfo("makernotes:sony:image::name", "Shot Number Since Power Up", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence Length", "int8u");
            AddInfo("makernotes:sony:image::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Image Height", "int16u");
            AddInfo("makernotes:sony:image::name", "Model Release Year", "int8u");
        }


        static void InitTable788()
        {
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Digital Zoom", "int8u");
            AddInfo("makernotes:sony:image::name", "Shot Number Since Power Up", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence Length", "int8u");
            AddInfo("makernotes:sony:image::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Image Height", "int16u");
            AddInfo("makernotes:sony:image::name", "Model Release Year", "int8u");
        }


        static void InitTable789()
        {
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Shot Number Since Power Up", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence Length", "int8u");
            AddInfo("makernotes:sony:image::name", "Sequence File Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Sequence Length", "int8u");
            AddInfo("makernotes:sony:image::name", "Camera Orientation", "int8u");
            AddInfo("makernotes:sony:image::name", "Quality 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Sony Image Height", "int16u");
            AddInfo("makernotes:sony:image::name", "Model Release Year", "int8u");
        }


        static void InitTable790()
        {
            AddInfo("makernotes:sony:image::name", "Temp Test 1", "int8u");
            AddInfo("makernotes:sony:image::name", "Ambient Temperature", "int8s");
            AddInfo("makernotes:sony:image::name", "Focus Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "AF Area Mode", "int8u");
            AddInfo("makernotes:sony:image::name", "Focus Position 2", "int8u");
        }


        static void InitTable791()
        {
            AddInfo("makernotes:sony:image::name", "Temp Test 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Camera Temperature", "int8s");
        }


        static void InitTable792()
        {
            AddInfo("makernotes:sony:image::name", "Lens Zoom Position", "int16u");
        }


        static void InitTable793()
        {
            AddInfo("makernotes:sony:image::name", "Lens Zoom Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Focus Position 2", "int8u");
        }


        static void InitTable794()
        {
            AddInfo("makernotes:sony:image::name", "Distortion Correction", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
        }


        static void InitTable795()
        {
            AddInfo("makernotes:sony:image::name", "Sony ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Stops Above Base ISO", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony Exposure Time 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Exposure Time", "rational32u");
            AddInfo("makernotes:sony:image::name", "Sony F Number", "int16u");
            AddInfo("makernotes:sony:image::name", "Sony Max Aperture Value", "int16u");
            AddInfo("makernotes:sony:image::name", "Sequence Image Number", "int32u");
            AddInfo("makernotes:sony:image::name", "Release Mode 2", "int8u");
            AddInfo("makernotes:sony:image::name", "High ISO Noise Reduction", "int8u");
            AddInfo("makernotes:sony:image::name", "Long Exposure Noise Reduction", "int8u");
            AddInfo("makernotes:sony:image::name", "Picture Effect 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Exposure Program", "int8u");
            AddInfo("makernotes:sony:image::name", "Creative Style", "int8u");
            AddInfo("makernotes:sony:image::name", "Sharpness", "int8s");
            AddInfo("makernotes:sony:image::name", "Distortion Correction", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Format", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Mount", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 2", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Type", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Parameters", "int16s");
            AddInfo("makernotes:sony:image::name", "Lens Zoom Position", "int16u");
            AddInfo("makernotes:sony:image::name", "Lens Zoom Position", "int16u");
        }


        static void InitTable796()
        {
            AddInfo("makernotes:sony:image::name", "Battery Temperature", "int8u");
            AddInfo("makernotes:sony:image::name", "Battery Level Grip 1", "int8u");
            AddInfo("makernotes:sony:image::name", "Battery Level", "int8u");
            AddInfo("makernotes:sony:image::name", "Battery Level Grip 2", "int8u");
        }


        static void InitTable797()
        {
            AddInfo("makernotes:sony:camera::name", "AF Points Selected", "int32u");
        }


        static void InitTable798()
        {
            AddInfo("makernotes:sony:image::name", "Lens Mount 2", "int8u");
            AddInfo("makernotes:sony:image::name", "Lens Type 3", "int16u");
            AddInfo("makernotes:sony:image::name", "E-mount Version Camera", "int16u");
            AddInfo("makernotes:sony:image::name", "E-mount Version Lens", "int16u");
        }


        static void InitTable799()
        {
            AddInfo("makernotes:sony:image::name", "Tiff Metering Image Width", "int8u");
            AddInfo("makernotes:sony:image::name", "Tiff Metering Image Height", "int8u");
            AddInfo("makernotes:sony:image::name", "Tiff Metering Image", "undef");
        }


        static void InitTable800()
        {
            AddInfo("makernotes:sonyidc:image::name", "IDC Preview Start", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "IDC Preview Length", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "IDC Creative Style", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "Creative Style Was Changed", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "Preset White Balance", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "Color Temperature Adj", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Preset White Balance Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Color Correction", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Saturation Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Contrast Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Brightness Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Hue Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Sharpness Adj", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Sharpness Overshoot", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Sharpness Undershoot", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Sharpness Threshold", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Noise Reduction Mode", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Gray Point", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "D-Range Optimizer Mode", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "D-Range Optimizer Value", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "D-Range Optimizer Highlight", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Highlight Color Distort Reduct", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Noise Reduction Value", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Edge Noise Reduction", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Color Noise Reduction", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "D-Range Optimizer Shadow", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Peripheral Illum Central Radius", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Peripheral Illum Central Value", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Peripheral Illum Periph Value", "int32s");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Brightness X", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Red X", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Green X", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Blue X", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Brightness Y", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Red Y", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Green Y", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Tone Curve Blue Y", "int16u");
            AddInfo("makernotes:sonyidc:image::name", "Current Version", "int32u");
            AddInfo("makernotes:sonyidc:image::name", "Version Create Date", "string");
            AddInfo("makernotes:sonyidc:image::name", "Version Modify Date", "string");
        }


        static void InitTable801()
        {
            AddInfo("stim:stim:image::name", "Crop X Common Offset", "int16u");
            AddInfo("stim:stim:image::name", "Crop X Viewpoint Number", "int8u");
            AddInfo("stim:stim:image::name", "Crop X Offset", "int32s");
            AddInfo("stim:stim:image::name", "Crop X Viewpoint Number 2", "int8u");
            AddInfo("stim:stim:image::name", "Crop X Offset 2", "int32s");
        }


        static void InitTable802()
        {
            AddInfo("stim:stim:image::name", "Crop Y Common Offset", "int16u");
            AddInfo("stim:stim:image::name", "Crop Y Viewpoint Number", "int8u");
            AddInfo("stim:stim:image::name", "Crop Y Offset", "int32s");
            AddInfo("stim:stim:image::name", "Crop Y Viewpoint Number 2", "int8u");
            AddInfo("stim:stim:image::name", "Crop Y Offset 2", "int32s");
        }


        static void InitTable803()
        {
            AddInfo("stim:stim:image::name", "Stim Version", "?");
            AddInfo("stim:stim:image::name", "Application Data", "?");
            AddInfo("stim:stim:image::name", "Image Arrangement", "?");
            AddInfo("stim:stim:image::name", "Image Rotation", "?");
            AddInfo("stim:stim:image::name", "Scaling Factor", "?");
            AddInfo("stim:stim:image::name", "Crop X Size", "?");
            AddInfo("stim:stim:image::name", "Crop Y Size", "?");
            AddInfo("stim:stim:image::name", "View Type", "?");
            AddInfo("stim:stim:image::name", "Representative Image", "?");
            AddInfo("stim:stim:image::name", "Convergence Base Image", "?");
            AddInfo("stim:stim:image::name", "Assumed Display Size", "?");
            AddInfo("stim:stim:image::name", "Assumed Distance View", "?");
            AddInfo("stim:stim:image::name", "Representative Disparity Near", "?");
            AddInfo("stim:stim:image::name", "Representative Disparity Far", "?");
            AddInfo("stim:stim:image::name", "Initial Display Effect", "?");
            AddInfo("stim:stim:image::name", "Convergence Distance", "?");
            AddInfo("stim:stim:image::name", "Camera Arrangement Interval", "?");
            AddInfo("stim:stim:image::name", "Shooting Count", "?");
        }


        static void InitTable804()
        {
            AddInfo("theora:theora:video::name", "Theora Version", "int8u");
            AddInfo("theora:theora:video::name", "Image Width", "int32u");
            AddInfo("theora:theora:video::name", "Image Height", "int32u");
            AddInfo("theora:theora:video::name", "X Offset", "int8u");
            AddInfo("theora:theora:video::name", "Y Offset", "int8u");
            AddInfo("theora:theora:video::name", "Frame Rate", "rational64u");
            AddInfo("theora:theora:video::name", "Pixel Aspect Ratio", "int16u");
            AddInfo("theora:theora:video::name", "Color Space", "int8u");
            AddInfo("theora:theora:video::name", "Nominal Video Bitrate", "int32u");
            AddInfo("theora:theora:video::name", "Quality", "int8u");
            AddInfo("theora:theora:video::name", "Pixel Format", "int8u");
        }


        static void InitTable805()
        {
            AddInfo("torrent:torrent:document::name", "File 1 Length", "?");
            AddInfo("torrent:torrent:document::name", "File 1 MD5 Sum", "?");
            AddInfo("torrent:torrent:document::name", "File 1 Path", "?");
            AddInfo("torrent:torrent:document::name", "File 1 Path UTF-8", "?");
        }


        static void InitTable806()
        {
            AddInfo("torrent:torrent:document::name", "File 1 Duration", "?");
            AddInfo("torrent:torrent:document::name", "File 1 Media", "?");
            AddInfo("torrent:torrent:document::name", "Length", "?");
            AddInfo("torrent:torrent:document::name", "MD5 Sum", "?");
            AddInfo("torrent:torrent:document::name", "Name", "?");
            AddInfo("torrent:torrent:document::name", "Name UTF-8", "?");
            AddInfo("torrent:torrent:document::name", "Piece Length", "?");
            AddInfo("torrent:torrent:document::name", "Pieces", "?");
            AddInfo("torrent:torrent:document::name", "Private", "?");
        }


        static void InitTable807()
        {
            AddInfo("torrent:torrent:document::name", "Announce", "?");
            AddInfo("torrent:torrent:document::name", "Announce List 1", "?");
            AddInfo("torrent:torrent:document::name", "Comment", "?");
            AddInfo("torrent:torrent:document::name", "Creator", "?");
            AddInfo("torrent:torrent:document::name", "Create Date", "?");
            AddInfo("torrent:torrent:document::name", "Encoding", "?");
            AddInfo("torrent:torrent:document::name", "URL List 1", "?");
        }


        static void InitTable808()
        {
            AddInfo("torrent:torrent:document::name", "Profile 1 Audio Codec", "?");
            AddInfo("torrent:torrent:document::name", "Profile 1 Height", "?");
            AddInfo("torrent:torrent:document::name", "Profile 1 Video Codec", "?");
            AddInfo("torrent:torrent:document::name", "Profile 1 Width", "?");
        }


        static void InitTable809()
        {
            AddInfo("vcard:vcard:document::name", "Address", "?");
            AddInfo("vcard:vcard:document::name", "Anniversary", "?");
            AddInfo("vcard:vcard:document::name", "Birthday", "?");
            AddInfo("vcard:vcard:document::name", "Email", "?");
            AddInfo("vcard:vcard:document::name", "Formatted Name", "?");
            AddInfo("vcard:vcard:document::name", "Gender", "?");
            AddInfo("vcard:vcard:document::name", "Geolocation", "?");
            AddInfo("vcard:vcard:document::name", "IMPP", "?");
            AddInfo("vcard:vcard:document::name", "Language", "?");
            AddInfo("vcard:vcard:document::name", "Logo", "?");
            AddInfo("vcard:vcard:document::name", "Name", "?");
            AddInfo("vcard:vcard:document::name", "Nickname", "?");
            AddInfo("vcard:vcard:document::name", "Note", "?");
            AddInfo("vcard:vcard:document::name", "Organization", "?");
            AddInfo("vcard:vcard:document::name", "Photo", "?");
            AddInfo("vcard:vcard:document::name", "Software", "?");
            AddInfo("vcard:vcard:document::name", "Revision", "?");
            AddInfo("vcard:vcard:document::name", "Sound", "?");
            AddInfo("vcard:vcard:document::name", "Telephone", "?");
            AddInfo("vcard:vcard:document::name", "Job Title", "?");
            AddInfo("vcard:vcard:document::name", "Time Zone", "?");
            AddInfo("vcard:vcard:document::name", "UID", "?");
            AddInfo("vcard:vcard:document::name", "URL", "?");
            AddInfo("vcard:vcard:document::name", "VCard Version", "?");
            AddInfo("vcard:vcard:document::name", "AB Date", "?");
            AddInfo("vcard:vcard:document::name", "AB Label", "?");
            AddInfo("vcard:vcard:document::name", "AB Related Names", "?");
            AddInfo("vcard:vcard:document::name", "AB UID", "?");
            AddInfo("vcard:vcard:document::name", "AIM", "?");
            AddInfo("vcard:vcard:document::name", "ICQ", "?");
            AddInfo("vcard:vcard:document::name", "Social Profile", "?");
        }


        static void InitTable810()
        {
            AddInfo("vcard:vcalendar:document::name", "Acknowledged", "?");
            AddInfo("vcard:vcalendar:document::name", "Action", "?");
            AddInfo("vcard:vcalendar:document::name", "Attachment", "?");
            AddInfo("vcard:vcalendar:document::name", "Attendee", "?");
            AddInfo("vcard:vcalendar:document::name", "Calendar Scale", "?");
            AddInfo("vcard:vcalendar:document::name", "Categories", "?");
            AddInfo("vcard:vcalendar:document::name", "Classification", "?");
            AddInfo("vcard:vcalendar:document::name", "Comment", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Time Completed", "?");
            AddInfo("vcard:vcalendar:document::name", "Contact", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Created", "?");
            AddInfo("vcard:vcalendar:document::name", "Description", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Time End", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Time Stamp", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Time Start", "?");
            AddInfo("vcard:vcalendar:document::name", "Date Time Due", "?");
            AddInfo("vcard:vcalendar:document::name", "Duration", "?");
            AddInfo("vcard:vcalendar:document::name", "Exception Date Times", "?");
            AddInfo("vcard:vcalendar:document::name", "Free Busy Time", "?");
            AddInfo("vcard:vcalendar:document::name", "Geolocation", "?");
            AddInfo("vcard:vcalendar:document::name", "Modify Date", "?");
            AddInfo("vcard:vcalendar:document::name", "Location", "?");
            AddInfo("vcard:vcalendar:document::name", "Method", "?");
            AddInfo("vcard:vcalendar:document::name", "Organizer", "?");
            AddInfo("vcard:vcalendar:document::name", "Percent Complete", "?");
            AddInfo("vcard:vcalendar:document::name", "Priority", "?");
            AddInfo("vcard:vcalendar:document::name", "Software", "?");
            AddInfo("vcard:vcalendar:document::name", "Recurrence Date Times", "?");
            AddInfo("vcard:vcalendar:document::name", "Recurrence ID", "?");
            AddInfo("vcard:vcalendar:document::name", "Related To", "?");
            AddInfo("vcard:vcalendar:document::name", "Repeat", "?");
            AddInfo("vcard:vcalendar:document::name", "Request Status", "?");
            AddInfo("vcard:vcalendar:document::name", "Resources", "?");
            AddInfo("vcard:vcalendar:document::name", "Recurrence Rule", "?");
            AddInfo("vcard:vcalendar:document::name", "Sequence Number", "?");
            AddInfo("vcard:vcalendar:document::name", "Status", "?");
            AddInfo("vcard:vcalendar:document::name", "Summary", "?");
            AddInfo("vcard:vcalendar:document::name", "Time Transparency", "?");
            AddInfo("vcard:vcalendar:document::name", "Trigger", "?");
            AddInfo("vcard:vcalendar:document::name", "Timezone ID", "?");
            AddInfo("vcard:vcalendar:document::name", "Timezone Name", "?");
            AddInfo("vcard:vcalendar:document::name", "Timezone Offset From", "?");
            AddInfo("vcard:vcalendar:document::name", "Timezone Offset To", "?");
            AddInfo("vcard:vcalendar:document::name", "Time Zone URL", "?");
            AddInfo("vcard:vcalendar:document::name", "UID", "?");
            AddInfo("vcard:vcalendar:document::name", "URL", "?");
            AddInfo("vcard:vcalendar:document::name", "VCalendar Version", "?");
        }


        static void InitTable811()
        {
            AddInfo("vorbis:vorbis:audio::name", "Actor", "?");
            AddInfo("vorbis:vorbis:audio::name", "Album", "?");
            AddInfo("vorbis:vorbis:audio::name", "Artist", "?");
            AddInfo("vorbis:vorbis:audio::name", "Comment", "?");
            AddInfo("vorbis:vorbis:audio::name", "Composer", "?");
            AddInfo("vorbis:vorbis:audio::name", "Contact", "?");
            AddInfo("vorbis:vorbis:audio::name", "Copyright", "?");
            AddInfo("vorbis:vorbis:audio::name", "Cover Art", "?");
            AddInfo("vorbis:vorbis:audio::name", "Cover Art MIME Type", "?");
            AddInfo("vorbis:vorbis:audio::name", "Date", "?");
            AddInfo("vorbis:vorbis:audio::name", "Description", "?");
            AddInfo("vorbis:vorbis:audio::name", "Director", "?");
            AddInfo("vorbis:vorbis:audio::name", "Encoded By", "?");
            AddInfo("vorbis:vorbis:audio::name", "Encoded Using", "?");
            AddInfo("vorbis:vorbis:audio::name", "Genre", "?");
            AddInfo("vorbis:vorbis:audio::name", "ISRC Number", "?");
            AddInfo("vorbis:vorbis:audio::name", "License", "?");
            AddInfo("vorbis:vorbis:audio::name", "Location", "?");
            AddInfo("vorbis:vorbis:audio::name", "Organization", "?");
            AddInfo("vorbis:vorbis:audio::name", "Performer", "?");
            AddInfo("vorbis:vorbis:audio::name", "Producer", "?");
            AddInfo("vorbis:vorbis:audio::name", "Replay Gain Album Gain", "?");
            AddInfo("vorbis:vorbis:audio::name", "Replay Gain Album Peak", "?");
            AddInfo("vorbis:vorbis:audio::name", "Replay Gain Track Gain", "?");
            AddInfo("vorbis:vorbis:audio::name", "Replay Gain Track Peak", "?");
            AddInfo("vorbis:vorbis:audio::name", "Title", "?");
            AddInfo("vorbis:vorbis:audio::name", "Track Number", "?");
            AddInfo("vorbis:vorbis:audio::name", "Version", "?");
            AddInfo("vorbis:vorbis:audio::name", "Vendor", "?");
        }


        static void InitTable812()
        {
            AddInfo("vorbis:vorbis:audio::name", "Vorbis Version", "int32u");
            AddInfo("vorbis:vorbis:audio::name", "Audio Channels", "int8u");
            AddInfo("vorbis:vorbis:audio::name", "Sample Rate", "int32u");
            AddInfo("vorbis:vorbis:audio::name", "Maximum Bitrate", "int32u");
            AddInfo("vorbis:vorbis:audio::name", "Nominal Bitrate", "int32u");
            AddInfo("vorbis:vorbis:audio::name", "Minimum Bitrate", "int32u");
        }


        static void InitTable813()
        {
            AddInfo("xmp:xmp-album:image::name", "Notes", "string");
        }


        static void InitTable814()
        {
            AddInfo("xmp:xmp-dicom:image::name", "Equipment Institution", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Equipment Manufacturer", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Patient Birth Date", "date");
            AddInfo("xmp:xmp-dicom:image::name", "Patient ID", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Patient Name", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Patient Sex", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Series Date Time", "date");
            AddInfo("xmp:xmp-dicom:image::name", "Series Description", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Series Modality", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Series Number", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Study Date Time", "date");
            AddInfo("xmp:xmp-dicom:image::name", "Study Description", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Study ID", "string");
            AddInfo("xmp:xmp-dicom:image::name", "Study Physician", "string");
        }


        static void InitTable815()
        {
            AddInfo("xmp:xmp-expressionmedia:image::name", "Catalog Sets", "string");
            AddInfo("xmp:xmp-expressionmedia:image::name", "Event", "string");
            AddInfo("xmp:xmp-expressionmedia:image::name", "People", "string");
            AddInfo("xmp:xmp-expressionmedia:image::name", "Status", "string");
        }


        static void InitTable816()
        {
            AddInfo("xmp:xmp-gpano:image::name", "Capture Software", "string");
            AddInfo("xmp:xmp-gpano:image::name", "Cropped Area Image Height Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Cropped Area Image Width Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Cropped Area Left Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Cropped Area Top Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Exposure Lock Used", "boolean");
            AddInfo("xmp:xmp-gpano:image::name", "First Photo Date", "date");
            AddInfo("xmp:xmp-gpano:image::name", "Full Pano Height Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Full Pano Width Pixels", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Initial Horizontal FOV Degrees", "real");
            AddInfo("xmp:xmp-gpano:image::name", "Initial View Heading Degrees", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Initial View Pitch Degrees", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Initial View Roll Degrees", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Largest Valid Interior Rect Height", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Largest Valid Interior Rect Left", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Largest Valid Interior Rect Top", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Largest Valid Interior Rect Width", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Last Photo Date", "date");
            AddInfo("xmp:xmp-gpano:image::name", "Pose Heading Degrees", "real");
            AddInfo("xmp:xmp-gpano:image::name", "Pose Pitch Degrees", "real");
            AddInfo("xmp:xmp-gpano:image::name", "Pose Roll Degrees", "real");
            AddInfo("xmp:xmp-gpano:image::name", "Projection Type", "string");
            AddInfo("xmp:xmp-gpano:image::name", "Source Photos Count", "integer");
            AddInfo("xmp:xmp-gpano:image::name", "Stitching Software", "string");
            AddInfo("xmp:xmp-gpano:image::name", "Use Panorama Viewer", "boolean");
        }


        static void InitTable817()
        {
            AddInfo("xmp:xmp-getty:image::name", "Original File Name", "string");
            AddInfo("xmp:xmp-getty:image::name", "Parent MEID", "string");
            AddInfo("xmp:xmp-getty:image::name", "Personality", "string");
        }


        static void InitTable818()
        {
            AddInfo("xmp:xmp-lr:image::name", "Hierarchical Subject", "string");
            AddInfo("xmp:xmp-lr:image::name", "Private RTK Info", "string");
        }


        static void InitTable819()
        {
            AddInfo("xmp:xmp-mediapro:image::name", "Catalog Sets", "string");
            AddInfo("xmp:xmp-mediapro:image::name", "Event", "string");
            AddInfo("xmp:xmp-mediapro:image::name", "Location", "string");
            AddInfo("xmp:xmp-mediapro:image::name", "People", "string");
            AddInfo("xmp:xmp-mediapro:image::name", "Status", "string");
            AddInfo("xmp:xmp-mediapro:image::name", "User Fields", "string");
        }


        static void InitTable820()
        {
            AddInfo("xmp:xmp-pixellive:image::name", "Author", "?");
            AddInfo("xmp:xmp-pixellive:image::name", "Comments", "?");
            AddInfo("xmp:xmp-pixellive:image::name", "Copyright", "?");
            AddInfo("xmp:xmp-pixellive:image::name", "Date", "?");
            AddInfo("xmp:xmp-pixellive:image::name", "Genre", "?");
            AddInfo("xmp:xmp-pixellive:image::name", "Title", "?");
        }


        static void InitTable821()
        {
            AddInfo("svg:svg:image::name", "Image Height", "?");
            AddInfo("svg:svg:image::name", "ID", "?");
            AddInfo("svg:svg:image::name", "Metadata ID", "?");
            AddInfo("svg:svg:image::name", "SVG Version", "?");
            AddInfo("svg:svg:image::name", "Image Width", "?");
        }


        static void InitTable822()
        {
            AddInfo("xml:xml:unknown::name", "Last Update", "?");
        }


        static void InitTable823()
        {
            AddInfo("xmp:xmp-aas:image::name", "Affine A", "real");
            AddInfo("xmp:xmp-aas:image::name", "Affine B", "real");
            AddInfo("xmp:xmp-aas:image::name", "Affine C", "real");
            AddInfo("xmp:xmp-aas:image::name", "Affine D", "real");
            AddInfo("xmp:xmp-aas:image::name", "Affine X", "real");
            AddInfo("xmp:xmp-aas:image::name", "Affine Y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Crop H", "integer");
            AddInfo("xmp:xmp-aas:image::name", "Crop W", "integer");
            AddInfo("xmp:xmp-aas:image::name", "Crop X", "integer");
            AddInfo("xmp:xmp-aas:image::name", "Crop Y", "integer");
            AddInfo("xmp:xmp-aas:image::name", "Curve 0x", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 0y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 1x", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 1y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 2x", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 2y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 3x", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 3y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 4x", "real");
            AddInfo("xmp:xmp-aas:image::name", "Curve 4y", "real");
            AddInfo("xmp:xmp-aas:image::name", "Highlights", "real");
            AddInfo("xmp:xmp-aas:image::name", "Shadows", "real");
            AddInfo("xmp:xmp-aas:image::name", "Vibrance", "real");
        }


        static void InitTable824()
        {
            AddInfo("xmp:xmp-acdsee:image::name", "Author", "string");
            AddInfo("xmp:xmp-acdsee:image::name", "Caption", "string");
            AddInfo("xmp:xmp-acdsee:image::name", "Categories", "string");
            AddInfo("xmp:xmp-acdsee:image::name", "Date Time", "date");
            AddInfo("xmp:xmp-acdsee:image::name", "DPP", "lang-alt");
            AddInfo("xmp:xmp-acdsee:image::name", "Keywords", "string");
            AddInfo("xmp:xmp-acdsee:image::name", "Notes", "string");
            AddInfo("xmp:xmp-acdsee:image::name", "Rating", "real");
            AddInfo("xmp:xmp-acdsee:image::name", "Rawrppused", "boolean");
            AddInfo("xmp:xmp-acdsee:image::name", "RPP", "lang-alt");
            AddInfo("xmp:xmp-acdsee:image::name", "Tagged", "boolean");
        }


        static void InitTable825()
        {
            AddInfo("xmp:xmp-apple-fi:image::name", "Angle Info Roll", "integer");
            AddInfo("xmp:xmp-apple-fi:image::name", "Angle Info Yaw", "integer");
            AddInfo("xmp:xmp-apple-fi:image::name", "Confidence Level", "integer");
            AddInfo("xmp:xmp-apple-fi:image::name", "Face ID", "integer");
            AddInfo("xmp:xmp-apple-fi:image::name", "Time Stamp", "integer");
        }


        static void InitTable826()
        {
            AddInfo("xmp:xmp-aux:camera::name", "Approximate Focus Distance", "rational");
            AddInfo("xmp:xmp-aux:camera::name", "Distortion Correction Already Applied", "boolean");
            AddInfo("xmp:xmp-aux:camera::name", "Firmware", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Flash Compensation", "rational");
            AddInfo("xmp:xmp-aux:camera::name", "Image Number", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Is Merged HDR", "boolean");
            AddInfo("xmp:xmp-aux:camera::name", "Is Merged Panorama", "boolean");
            AddInfo("xmp:xmp-aux:camera::name", "Lateral Chromatic Aberration Correction Already Applied", "boolean");
            AddInfo("xmp:xmp-aux:camera::name", "Lens", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Lens ID", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Lens Info", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Lens Serial Number", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Owner Name", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Serial Number", "string");
            AddInfo("xmp:xmp-aux:camera::name", "Vignette Correction Already Applied", "boolean");
        }


        static void InitTable827()
        {
            AddInfo("xmp:xmp-cc:author::name", "Attribution Name", "string");
            AddInfo("xmp:xmp-cc:author::name", "Attribution URL", "string");
            AddInfo("xmp:xmp-cc:author::name", "Deprecated On", "date");
            AddInfo("xmp:xmp-cc:author::name", "Jurisdiction", "string");
            AddInfo("xmp:xmp-cc:author::name", "Legal Code", "string");
            AddInfo("xmp:xmp-cc:author::name", "License", "string");
            AddInfo("xmp:xmp-cc:author::name", "More Permissions", "string");
            AddInfo("xmp:xmp-cc:author::name", "Permits", "string");
            AddInfo("xmp:xmp-cc:author::name", "Prohibits", "string");
            AddInfo("xmp:xmp-cc:author::name", "Requires", "string");
            AddInfo("xmp:xmp-cc:author::name", "Use Guidelines", "string");
        }


        static void InitTable828()
        {
            AddInfo("xmp:xmp-cell:location::name", "Cell Tower ID", "string");
            AddInfo("xmp:xmp-cell:location::name", "Cell Global ID", "string");
            AddInfo("xmp:xmp-cell:location::name", "Location Area Code", "string");
            AddInfo("xmp:xmp-cell:location::name", "Mobile Country Code", "string");
            AddInfo("xmp:xmp-cell:location::name", "Mobile Network Code", "string");
            AddInfo("xmp:xmp-cell:location::name", "Cell R", "string");
        }


        static void InitTable829()
        {
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link", "struct");
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link Composition ID", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link Full Path", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link Render Output Module Index", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link Render Queue Item ID", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Ae Project Link Render Time Stamp", "integer");
            AddInfo("xmp:xmp-creatoratom:image::name", "Mac Atom", "struct");
            AddInfo("xmp:xmp-creatoratom:image::name", "Mac Atom Application Code", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Mac Atom Invocation Apple Event", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Mac Atom Posix Project Path", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Windows Atom", "struct");
            AddInfo("xmp:xmp-creatoratom:image::name", "Windows Atom Extension", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Windows Atom Invocation Flags", "string");
            AddInfo("xmp:xmp-creatoratom:image::name", "Windows Atom Unc Project Path", "string");
        }


        static void InitTable830()
        {
            AddInfo("xmp:xmp-crs:image::name", "Already Applied", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Auto Brightness", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Auto Contrast", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Auto Exposure", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Auto Lateral CA", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Auto Shadows", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Auto White Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Blacks 2012", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Blue Hue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Blue Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Brightness", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Camera Profile", "string");
            AddInfo("xmp:xmp-crs:image::name", "Camera Profile Digest", "string");
            AddInfo("xmp:xmp-crs:image::name", "Chromatic Aberration B", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Chromatic Aberration R", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Circular Gradient Based Corrections", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Active", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Amount", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Masks", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Alpha", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Angle", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Bottom", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Center Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Center Weight", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Dabs", "string");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Feather", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Flipped", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Flow", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Full X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Full Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Left", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Midpoint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Perimeter Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Radius", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Right", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Roundness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Size X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Size Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Top", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Zero X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Mask Zero Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Brightness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Clarity", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Clarity 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Contrast", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Contrast 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Defringe", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Exposure", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Exposure 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Highlights 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Luminance Noise", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Moire", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Shadows 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Sharpness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Temperature", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Tint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Hue", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Circ Grad Based Corr What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Clarity", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Clarity 2012", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Color Noise Reduction", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Color Noise Reduction Detail", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Color Noise Reduction Smoothness", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Contrast", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Contrast 2012", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Converter", "string");
            AddInfo("xmp:xmp-crs:image::name", "Convert To Grayscale", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Crop Angle", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Bottom", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Constrain To Warp", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Crop Height", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Left", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Right", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Top", "real");
            AddInfo("xmp:xmp-crs:image::name", "Crop Unit", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Crop Units", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Crop Width", "real");
            AddInfo("xmp:xmp-crs:image::name", "Defringe", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Green Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Green Hue Hi", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Green Hue Lo", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Purple Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Purple Hue Hi", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Defringe Purple Hue Lo", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Exposure", "real");
            AddInfo("xmp:xmp-crs:image::name", "Exposure 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Fill Light", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corrections", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Active", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Amount", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Masks", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Alpha", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Angle", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Bottom", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Center Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Center Weight", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Dabs", "string");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Feather", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Flipped", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Flow", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Full X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Full Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Left", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Midpoint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Perimeter Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Radius", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Right", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Roundness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Size X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Size Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Top", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Zero X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Mask Zero Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Brightness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Clarity", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Clarity 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Contrast", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Contrast 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Defringe", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Exposure", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Exposure 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Highlights 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Luminance Noise", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Moire", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Shadows 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Sharpness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Temperature", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Tint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Hue", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Gradient Based Corr What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Grain Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Grain Frequency", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Grain Size", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Aqua", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Blue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Green", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Magenta", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Orange", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Purple", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Red", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Gray Mixer Yellow", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Green Hue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Green Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Has Crop", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Has Settings", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Highlight Recovery", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Highlights 2012", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Aqua", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Blue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Green", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Magenta", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Orange", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Purple", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Red", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Hue Adjustment Yellow", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Incremental Temperature", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Incremental Tint", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Lens Manual Distortion Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Chromatic Aberration Scale", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Digest", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Distortion Scale", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Enable", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Filename", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Camera Model Name", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Exif Make", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Exif Model", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Is Raw", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Lens ID", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Lens Info", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Lens Name", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Match Key Sensor Format Factor", "real");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Name", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Setup", "string");
            AddInfo("xmp:xmp-crs:image::name", "Lens Profile Vignetting Scale", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Aqua", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Blue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Green", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Magenta", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Orange", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Purple", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Red", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Adjustment Yellow", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Noise Reduction Contrast", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Noise Reduction Detail", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Luminance Smoothing", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Moire Filter", "string");
            AddInfo("xmp:xmp-crs:image::name", "Paint Based Corrections", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Active", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Amount", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Based Correction Masks", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Alpha", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Angle", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Bottom", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Center Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Center Weight", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Dabs", "string");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Feather", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Flipped", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Flow", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Full X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Full Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Left", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Midpoint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Perimeter Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Radius", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Right", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Roundness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Size X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Size Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Top", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Zero X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Mask Zero Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Brightness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Clarity", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Clarity 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Contrast", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Contrast 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Defringe", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Exposure", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Exposure 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Highlights 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Luminance Noise", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Moire", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Shadows 2012", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Sharpness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Temperature", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Tint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Hue", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction Saturation", "real");
            AddInfo("xmp:xmp-crs:image::name", "Paint Correction What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Darks", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Highlights", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Highlight Split", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Lights", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Midtone Split", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Shadows", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Parametric Shadow Split", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Aspect", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Horizontal", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Rotate", "real");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Scale", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Upright", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Perspective Vertical", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Feather", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Highlight Contrast", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Midpoint", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Roundness", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Post Crop Vignette Style", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Process Version", "string");
            AddInfo("xmp:xmp-crs:image::name", "Raw File Name", "string");
            AddInfo("xmp:xmp-crs:image::name", "Red Eye Info", "string");
            AddInfo("xmp:xmp-crs:image::name", "Red Hue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Red Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Areas", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Feather", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Masks", "struct");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Alpha", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Angle", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Bottom", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Center Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Center Weight", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Dabs", "string");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Feather", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Flipped", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Flow", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Full X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Full Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Left", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Midpoint", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Perimeter Value", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Radius", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Right", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Roundness", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Size X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Size Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Top", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask What", "string");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Zero X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Mask Zero Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Method", "string");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Offset Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Opacity", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Seed", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Source State", "string");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Source X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Area Spot Type", "string");
            AddInfo("xmp:xmp-crs:image::name", "Retouch Info", "string");
            AddInfo("xmp:xmp-crs:image::name", "Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Aqua", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Blue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Green", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Magenta", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Orange", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Purple", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Red", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Saturation Adjustment Yellow", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Shadows", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Shadows 2012", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Shadow Tint", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Sharpen Detail", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Sharpen Edge Masking", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Sharpen Radius", "real");
            AddInfo("xmp:xmp-crs:image::name", "Sharpness", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Smoothness", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Split Toning Balance", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Split Toning Highlight Hue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Split Toning Highlight Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Split Toning Shadow Hue", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Split Toning Shadow Saturation", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Color Temperature", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Tint", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve Blue", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve Green", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve Name", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve Name 2012", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve PV2012", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve PV2012 Blue", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve PV2012 Green", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve PV2012 Red", "string");
            AddInfo("xmp:xmp-crs:image::name", "Tone Curve Red", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Center Mode", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Upright Center Norm X", "real");
            AddInfo("xmp:xmp-crs:image::name", "Upright Center Norm Y", "real");
            AddInfo("xmp:xmp-crs:image::name", "Upright Dependent Digest", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Focal Length 35mm", "real");
            AddInfo("xmp:xmp-crs:image::name", "Upright Focal Mode", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Upright Preview", "boolean");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform 0", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform 1", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform 2", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform 3", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform 4", "string");
            AddInfo("xmp:xmp-crs:image::name", "Upright Transform Count", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Upright Version", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Version", "string");
            AddInfo("xmp:xmp-crs:image::name", "Vibrance", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Vignette Amount", "integer");
            AddInfo("xmp:xmp-crs:image::name", "Vignette Midpoint", "integer");
            AddInfo("xmp:xmp-crs:image::name", "What", "string");
            AddInfo("xmp:xmp-crs:image::name", "White Balance", "string");
            AddInfo("xmp:xmp-crs:image::name", "Whites 2012", "integer");
        }


        static void InitTable831()
        {
            AddInfo("xmp:xmp-dc:other::name", "Contributor", "string");
            AddInfo("xmp:xmp-dc:other::name", "Coverage", "string");
            AddInfo("xmp:xmp-dc:other::name", "Creator", "string");
            AddInfo("xmp:xmp-dc:other::name", "Date", "date");
            AddInfo("xmp:xmp-dc:other::name", "Description", "lang-alt");
            AddInfo("xmp:xmp-dc:other::name", "Format", "string");
            AddInfo("xmp:xmp-dc:other::name", "Identifier", "string");
            AddInfo("xmp:xmp-dc:other::name", "Language", "string");
            AddInfo("xmp:xmp-dc:other::name", "Publisher", "string");
            AddInfo("xmp:xmp-dc:other::name", "Relation", "string");
            AddInfo("xmp:xmp-dc:other::name", "Rights", "lang-alt");
            AddInfo("xmp:xmp-dc:other::name", "Source", "string");
            AddInfo("xmp:xmp-dc:other::name", "Subject", "string");
            AddInfo("xmp:xmp-dc:other::name", "Title", "lang-alt");
            AddInfo("xmp:xmp-dc:other::name", "Type", "string");
        }


        static void InitTable832()
        {
            AddInfo("xmp:xmp-dex:image::name", "CRC32", "integer");
            AddInfo("xmp:xmp-dex:image::name", "FFID", "string");
            AddInfo("xmp:xmp-dex:image::name", "License Type", "string");
            AddInfo("xmp:xmp-dex:image::name", "OS", "integer");
            AddInfo("xmp:xmp-dex:image::name", "Rating", "string");
            AddInfo("xmp:xmp-dex:image::name", "Revision", "string");
            AddInfo("xmp:xmp-dex:image::name", "Short Description", "lang-alt");
            AddInfo("xmp:xmp-dex:image::name", "Source", "string");
        }


        static void InitTable833()
        {
            AddInfo("xmp:xmp-digikam:image::name", "Captions Author Names", "lang-alt");
            AddInfo("xmp:xmp-digikam:image::name", "Captions Date Time Stamps", "lang-alt");
            AddInfo("xmp:xmp-digikam:image::name", "Color Label", "string");
            AddInfo("xmp:xmp-digikam:image::name", "Pick Label", "string");
            AddInfo("xmp:xmp-digikam:image::name", "Tags List", "string");
        }


        static void InitTable834()
        {
            AddInfo("xmp:xmp-exif:image::name", "Aperture Value", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Brightness Value", "rational");
            AddInfo("xmp:xmp-exif:image::name", "CFA Pattern", "struct");
            AddInfo("xmp:xmp-exif:image::name", "CFA Pattern Columns", "integer");
            AddInfo("xmp:xmp-exif:image::name", "CFA Pattern Rows", "integer");
            AddInfo("xmp:xmp-exif:image::name", "CFA Pattern Values", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Color Space", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Components Configuration", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Compressed Bits Per Pixel", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Contrast", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Custom Rendered", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Date/Time Digitized", "date");
            AddInfo("xmp:xmp-exif:image::name", "Date/Time Original", "date");
            AddInfo("xmp:xmp-exif:image::name", "Device Setting Description", "struct");
            AddInfo("xmp:xmp-exif:image::name", "Device Setting Description Columns", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Device Setting Description Rows", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Device Setting Description Settings", "string");
            AddInfo("xmp:xmp-exif:image::name", "Digital Zoom Ratio", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Exif Version", "string");
            AddInfo("xmp:xmp-exif:image::name", "Exposure Compensation", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Exposure Index", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Exposure Mode", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Exposure Program", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Exposure Time", "rational");
            AddInfo("xmp:xmp-exif:image::name", "File Source", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Flash", "struct");
            AddInfo("xmp:xmp-exif:image::name", "Flash Energy", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Flash Fired", "boolean");
            AddInfo("xmp:xmp-exif:image::name", "Flash Function", "boolean");
            AddInfo("xmp:xmp-exif:image::name", "Flash Mode", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Flashpix Version", "string");
            AddInfo("xmp:xmp-exif:image::name", "Flash Red Eye Mode", "boolean");
            AddInfo("xmp:xmp-exif:image::name", "Flash Return", "integer");
            AddInfo("xmp:xmp-exif:image::name", "F Number", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Focal Length", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Focal Length In 35mm Format", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Focal Plane Resolution Unit", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Focal Plane X Resolution", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Focal Plane Y Resolution", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Gain Control", "integer");
            AddInfo("xmp:xmp-exif:image::name", "GPS Altitude", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Altitude Ref", "integer");
            AddInfo("xmp:xmp-exif:image::name", "GPS Area Information", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Bearing", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Bearing Ref", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Distance", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Distance Ref", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Latitude", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Dest Longitude", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Differential", "integer");
            AddInfo("xmp:xmp-exif:image::name", "GPSDOP", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Horizontal Positioning Error", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Img Direction", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Img Direction Ref", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Latitude", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Longitude", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Map Datum", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Measure Mode", "integer");
            AddInfo("xmp:xmp-exif:image::name", "GPS Processing Method", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Satellites", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Speed", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Speed Ref", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Status", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Date/Time", "date");
            AddInfo("xmp:xmp-exif:image::name", "GPS Track", "rational");
            AddInfo("xmp:xmp-exif:image::name", "GPS Track Ref", "string");
            AddInfo("xmp:xmp-exif:image::name", "GPS Version ID", "string");
            AddInfo("xmp:xmp-exif:image::name", "Image Unique ID", "string");
            AddInfo("xmp:xmp-exif:image::name", "ISO", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Light Source", "string");
            AddInfo("xmp:xmp-exif:image::name", "Maker Note", "string");
            AddInfo("xmp:xmp-exif:image::name", "Max Aperture Value", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Metering Mode", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Native Digest", "string");
            AddInfo("xmp:xmp-exif:image::name", "Opto-Electric Conv Factor", "struct");
            AddInfo("xmp:xmp-exif:image::name", "OECF Columns", "integer");
            AddInfo("xmp:xmp-exif:image::name", "OECF Names", "string");
            AddInfo("xmp:xmp-exif:image::name", "OECF Rows", "integer");
            AddInfo("xmp:xmp-exif:image::name", "OECF Values", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Exif Image Width", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Exif Image Height", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Related Sound File", "string");
            AddInfo("xmp:xmp-exif:image::name", "Saturation", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Scene Capture Type", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Scene Type", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Sensing Method", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Sharpness", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Shutter Speed Value", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Spatial Frequency Response", "struct");
            AddInfo("xmp:xmp-exif:image::name", "Spatial Frequency Response Columns", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Spatial Frequency Response Names", "string");
            AddInfo("xmp:xmp-exif:image::name", "Spatial Frequency Response Rows", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Spatial Frequency Response Values", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Spectral Sensitivity", "string");
            AddInfo("xmp:xmp-exif:image::name", "Subject Area", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Subject Distance", "rational");
            AddInfo("xmp:xmp-exif:image::name", "Subject Distance Range", "integer");
            AddInfo("xmp:xmp-exif:image::name", "Subject Location", "integer");
            AddInfo("xmp:xmp-exif:image::name", "User Comment", "lang-alt");
            AddInfo("xmp:xmp-exif:image::name", "White Balance", "integer");
        }


        static void InitTable835()
        {
            AddInfo("xmp:xmp-exifex:image::name", "Serial Number", "string");
            AddInfo("xmp:xmp-exifex:image::name", "Owner Name", "string");
            AddInfo("xmp:xmp-exifex:image::name", "Gamma", "rational");
            AddInfo("xmp:xmp-exifex:image::name", "Interoperability Index", "string");
            AddInfo("xmp:xmp-exifex:image::name", "ISO Speed", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "ISO Speed Latitude yyy", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "ISO Speed Latitude zzz", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "Lens Make", "string");
            AddInfo("xmp:xmp-exifex:image::name", "Lens Model", "string");
            AddInfo("xmp:xmp-exifex:image::name", "Lens Serial Number", "string");
            AddInfo("xmp:xmp-exifex:image::name", "Lens Info", "rational");
            AddInfo("xmp:xmp-exifex:image::name", "Photographic Sensitivity", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "Recommended Exposure Index", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "Sensitivity Type", "integer");
            AddInfo("xmp:xmp-exifex:image::name", "Standard Output Sensitivity", "integer");
        }


        static void InitTable836()
        {
            AddInfo("xmp:xmp-extensis:image::name", "Approved", "boolean");
            AddInfo("xmp:xmp-extensis:image::name", "Approved By", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Client Name", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Job Name", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Job Status", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Routed To", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Routing Notes", "string");
            AddInfo("xmp:xmp-extensis:image::name", "Work To Do", "string");
        }


        static void InitTable837()
        {
            AddInfo("xmp:xmp-fpv:image::name", "Rich Text Comment", "string");
        }


        static void InitTable838()
        {
            AddInfo("xmp:xmp-ics:image::name", "Image Ref", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Versions", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Sub Version File Name", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Version Reference", "string");
            AddInfo("xmp:xmp-ics:image::name", "Tag Structure", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 1", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 1", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 1", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Lables 1", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 2", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 2", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 2", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Lables 2", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 3", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 3", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 3", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Lables 3", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 4", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 4", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 4", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Labels 4", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 5", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 5", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 5", "string");
            AddInfo("xmp:xmp-ics:image::name", "Sub Labels 5", "struct");
            AddInfo("xmp:xmp-ics:image::name", "Label Name 6", "string");
            AddInfo("xmp:xmp-ics:image::name", "Parent Reference 6", "string");
            AddInfo("xmp:xmp-ics:image::name", "Reference 6", "string");
        }


        static void InitTable839()
        {
            AddInfo("xmp:xmp-iptccore:author::name", "Country Code", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Contact Info", "struct");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator City", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Country", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Address", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Postal Code", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Region", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Work Email", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Work Telephone", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Creator Work URL", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Intellectual Genre", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Location", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Scene", "string");
            AddInfo("xmp:xmp-iptccore:author::name", "Subject Code", "string");
        }


        static void InitTable840()
        {
            AddInfo("xmp:xmp-iptcext:author::name", "About Cv Term", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "About Cv Term Cv Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "About Cv Term Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "About Cv Term Name", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "About Cv Term Refined About", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Additional Model Information", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Or Object", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Circa Date Created", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork S Content Description", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Contribution Description", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Copyright Notice", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Creator", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Creator ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Copyright Owner ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Copyright Owner Name", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Licensor ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Licensor Name", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Date Created", "date");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Physical Description", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Source", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Source Inventory No", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Source Inv URL", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Style Period", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Artwork Title", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Controlled Vocabulary Term", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Digital Image GUID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Digital Source File Type", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Digital Source Type", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Embd Enc Rights Expr", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Embedded Encoded Rights Expr", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Embedded Encoded Rights Expr Type", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Embedded Encoded Rights Expr Lang ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Event", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "IPTC Last Edited", "date");
            AddInfo("xmp:xmp-iptcext:author::name", "Linked Enc Rights Expr", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Linked Encoded Rights Expr", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Linked Encoded Rights Expr Type", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Linked Encoded Rights Expr Lang ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created City", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created Country Code", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created Country Name", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created Location Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created Province State", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created Sublocation", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Created World Region", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown City", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown Country Code", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown Country Name", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown Location Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown Province State", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown Sublocation", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Location Shown World Region", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Max Avail Height", "integer");
            AddInfo("xmp:xmp-iptcext:author::name", "Max Avail Width", "integer");
            AddInfo("xmp:xmp-iptcext:author::name", "Model Age", "integer");
            AddInfo("xmp:xmp-iptcext:author::name", "Organisation In Image Code", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Organisation In Image Name", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image W Details", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Characteristic", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Cv Term Cv Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Cv Term Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Cv Term Name", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Cv Term Refined About", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Description", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Id", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Person In Image Name", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Product In Image", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Product In Image Description", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Product In Image GTIN", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Product In Image Name", "lang-alt");
            AddInfo("xmp:xmp-iptcext:author::name", "Registry ID", "struct");
            AddInfo("xmp:xmp-iptcext:author::name", "Registry Item ID", "string");
            AddInfo("xmp:xmp-iptcext:author::name", "Registry Organisation ID", "string");
        }


        static void InitTable841()
        {
            AddInfo("xmp:xmp-pdf:image::name", "Author", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Copyright", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Creation Date", "date");
            AddInfo("xmp:xmp-pdf:image::name", "Creator", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Keywords", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Marked", "boolean");
            AddInfo("xmp:xmp-pdf:image::name", "Mod Date", "date");
            AddInfo("xmp:xmp-pdf:image::name", "PDF Version", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Producer", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Subject", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Title", "string");
            AddInfo("xmp:xmp-pdf:image::name", "Trapped", "string");
        }


        static void InitTable842()
        {
            AddInfo("xmp:xmp-photoshop:image::name", "Authors Position", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Caption Writer", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Category", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "City", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Color Mode", "integer");
            AddInfo("xmp:xmp-photoshop:image::name", "Country", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Credit", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Date Created", "date");
            AddInfo("xmp:xmp-photoshop:image::name", "Document Ancestors", "struct");
            AddInfo("xmp:xmp-photoshop:image::name", "Document Ancestor ID", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Embedded XMP Digest", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Headline", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "History", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "ICC Profile Name", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Instructions", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Legacy IPTC Digest", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Sidecar For Extension", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Source", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "State", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Supplemental Categories", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Text Layers", "struct");
            AddInfo("xmp:xmp-photoshop:image::name", "Text Layer Name", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Text Layer Text", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Transmission Reference", "string");
            AddInfo("xmp:xmp-photoshop:image::name", "Urgency", "integer");
        }


        static void InitTable843()
        {
            AddInfo("xmp:xmp-plus:author::name", "Adult Content Warning", "string");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Owner", "struct");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Owner ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Owner Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Owner Image ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Registration Number", "string");
            AddInfo("xmp:xmp-plus:author::name", "Copyright Status", "string");
            AddInfo("xmp:xmp-plus:author::name", "Credit Line Required", "string");
            AddInfo("xmp:xmp-plus:author::name", "Custom 1", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 10", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 2", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 3", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 4", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 5", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 6", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 7", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 8", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Custom 9", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "End User", "struct");
            AddInfo("xmp:xmp-plus:author::name", "End User ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "End User Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "File Name As Delivered", "string");
            AddInfo("xmp:xmp-plus:author::name", "First Publication Date", "date");
            AddInfo("xmp:xmp-plus:author::name", "Image Alteration Constraints", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Creator", "struct");
            AddInfo("xmp:xmp-plus:author::name", "Image Creator ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Creator Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Creator Image ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Duplication Constraints", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image File Constraints", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image File Format As Delivered", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image File Size As Delivered", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Supplier", "struct");
            AddInfo("xmp:xmp-plus:author::name", "Image Supplier Image ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Supplier ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Supplier Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "Image Type", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensee", "struct");
            AddInfo("xmp:xmp-plus:author::name", "Licensee Image ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensee Image Notes", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Licensee ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensee Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "License End Date", "date");
            AddInfo("xmp:xmp-plus:author::name", "Licensee Project Reference", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensee Transaction ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "License ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "License Start Date", "date");
            AddInfo("xmp:xmp-plus:author::name", "License Transaction Date", "date");
            AddInfo("xmp:xmp-plus:author::name", "Licensor", "struct");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Image ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor City", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Country", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Email", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Extended Address", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Name", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Postal Code", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Region", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Street Address", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Telephone 1", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Telephone 2", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Telephone Type 1", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Telephone Type 2", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor URL", "string");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Notes", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Licensor Transaction ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Media Constraints", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Media Summary Code", "string");
            AddInfo("xmp:xmp-plus:author::name", "Minor Model Age Disclosure", "string");
            AddInfo("xmp:xmp-plus:author::name", "Model Release ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Model Release Status", "string");
            AddInfo("xmp:xmp-plus:author::name", "Other Conditions", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Other Constraints", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Other Image Info", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Other License Documents", "string");
            AddInfo("xmp:xmp-plus:author::name", "Other License Info", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Other License Requirements", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Product Or Service Constraints", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Property Release ID", "string");
            AddInfo("xmp:xmp-plus:author::name", "Property Release Status", "string");
            AddInfo("xmp:xmp-plus:author::name", "Region Constraints", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Reuse", "string");
            AddInfo("xmp:xmp-plus:author::name", "Terms And Conditions Text", "lang-alt");
            AddInfo("xmp:xmp-plus:author::name", "Terms And Conditions URL", "string");
            AddInfo("xmp:xmp-plus:author::name", "PLUS Version", "string");
        }


        static void InitTable844()
        {
            AddInfo("xmp:xmp-pmi:image::name", "Color", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Contact Info", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Display Name", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Distributor Product ID", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Event Alias", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Event End", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Event Start", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Event Subtype", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Event Type", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Field", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Framing", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Location", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Make", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Manufacturer", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Model", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Model Year", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Object Description", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Object Subtype", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Object Type", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Orientation", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Position Descriptor", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Product ID", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Product ID Type", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Season", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Sequence Name", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Sequence Number", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Sequence Total Number", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Setting", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Shoot ID", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Slideshow Name", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Slideshow Number", "integer");
            AddInfo("xmp:xmp-pmi:image::name", "Slideshow Total Number", "integer");
            AddInfo("xmp:xmp-pmi:image::name", "Viewpoint", "string");
            AddInfo("xmp:xmp-pmi:image::name", "Visual Technique", "string");
        }


        static void InitTable845()
        {
            AddInfo("xmp:xmp-prism:document::name", "Acedemic Field", "string");
            AddInfo("xmp:xmp-prism:document::name", "Aggregate Issue Number", "integer");
            AddInfo("xmp:xmp-prism:document::name", "Aggregation Type", "string");
            AddInfo("xmp:xmp-prism:document::name", "Alternate Title", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Alternate Title A-lang", "string");
            AddInfo("xmp:xmp-prism:document::name", "Alternate Title A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Alternate Title Text", "string");
            AddInfo("xmp:xmp-prism:document::name", "Blog Title", "string");
            AddInfo("xmp:xmp-prism:document::name", "Blog URL", "string");
            AddInfo("xmp:xmp-prism:document::name", "Book Edition", "string");
            AddInfo("xmp:xmp-prism:document::name", "Byte Count", "integer");
            AddInfo("xmp:xmp-prism:document::name", "Channel", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Channel A-lang", "string");
            AddInfo("xmp:xmp-prism:document::name", "Channel Channel", "string");
            AddInfo("xmp:xmp-prism:document::name", "Channel Subchannel 1", "string");
            AddInfo("xmp:xmp-prism:document::name", "Channel Subchannel 2", "string");
            AddInfo("xmp:xmp-prism:document::name", "Channel Subchannel 3", "string");
            AddInfo("xmp:xmp-prism:document::name", "Channel Subchannel 4", "string");
            AddInfo("xmp:xmp-prism:document::name", "Compliance Profile", "string");
            AddInfo("xmp:xmp-prism:document::name", "Content Type", "string");
            AddInfo("xmp:xmp-prism:document::name", "Copyright Year", "string");
            AddInfo("xmp:xmp-prism:document::name", "Corporate Entity", "string");
            AddInfo("xmp:xmp-prism:document::name", "Cover Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "Cover Display Date", "string");
            AddInfo("xmp:xmp-prism:document::name", "Creation Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "Date Recieved", "date");
            AddInfo("xmp:xmp-prism:document::name", "Device", "string");
            AddInfo("xmp:xmp-prism:document::name", "Distributor", "string");
            AddInfo("xmp:xmp-prism:document::name", "Digital Object Identifier", "string");
            AddInfo("xmp:xmp-prism:document::name", "Edition", "string");
            AddInfo("xmp:xmp-prism:document::name", "E Issn", "string");
            AddInfo("xmp:xmp-prism:document::name", "Ending Page", "string");
            AddInfo("xmp:xmp-prism:document::name", "Event", "string");
            AddInfo("xmp:xmp-prism:document::name", "Genre", "string");
            AddInfo("xmp:xmp-prism:document::name", "Has Alternative", "string");
            AddInfo("xmp:xmp-prism:document::name", "Has Correction", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Has Correction A-lang", "string");
            AddInfo("xmp:xmp-prism:document::name", "Has Correction A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Has Correction Text", "string");
            AddInfo("xmp:xmp-prism:document::name", "Has Translation", "string");
            AddInfo("xmp:xmp-prism:document::name", "Industry", "string");
            AddInfo("xmp:xmp-prism:document::name", "Is Alternative Of", "string");
            AddInfo("xmp:xmp-prism:document::name", "ISBN", "string");
            AddInfo("xmp:xmp-prism:document::name", "Is Correction Of", "string");
            AddInfo("xmp:xmp-prism:document::name", "ISSN", "string");
            AddInfo("xmp:xmp-prism:document::name", "Issue Identifier", "string");
            AddInfo("xmp:xmp-prism:document::name", "Issue Name", "string");
            AddInfo("xmp:xmp-prism:document::name", "Issue Teaser", "string");
            AddInfo("xmp:xmp-prism:document::name", "Issue Type", "string");
            AddInfo("xmp:xmp-prism:document::name", "Is Translation Of", "string");
            AddInfo("xmp:xmp-prism:document::name", "Keyword", "string");
            AddInfo("xmp:xmp-prism:document::name", "Kill Date", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Kill Date A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Kill Date Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "Link", "string");
            AddInfo("xmp:xmp-prism:document::name", "Location", "string");
            AddInfo("xmp:xmp-prism:document::name", "Modification Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "National Catalog Number", "string");
            AddInfo("xmp:xmp-prism:document::name", "Number", "string");
            AddInfo("xmp:xmp-prism:document::name", "Object", "string");
            AddInfo("xmp:xmp-prism:document::name", "Off Sale Date", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Off Sale Date A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Off Sale Date Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Date", "struct");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Date A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Date Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Day", "struct");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Day A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "On Sale Day Day", "string");
            AddInfo("xmp:xmp-prism:document::name", "Organization", "string");
            AddInfo("xmp:xmp-prism:document::name", "Origin Platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Page Count", "integer");
            AddInfo("xmp:xmp-prism:document::name", "Page Progression Direction", "string");
            AddInfo("xmp:xmp-prism:document::name", "Page Range", "string");
            AddInfo("xmp:xmp-prism:document::name", "Person", "string");
            AddInfo("xmp:xmp-prism:document::name", "Platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Product Code", "string");
            AddInfo("xmp:xmp-prism:document::name", "Profession", "string");
            AddInfo("xmp:xmp-prism:document::name", "Publication Date", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Publication Date A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Publication Date Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "Publication Display Date", "struct");
            AddInfo("xmp:xmp-prism:document::name", "Publication Display Date A-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "Publication Display Date Date", "date");
            AddInfo("xmp:xmp-prism:document::name", "Publication Name", "string");
            AddInfo("xmp:xmp-prism:document::name", "Publishing Frequency", "string");
            AddInfo("xmp:xmp-prism:document::name", "Rating", "string");
            AddInfo("xmp:xmp-prism:document::name", "Sample Page Range", "string");
            AddInfo("xmp:xmp-prism:document::name", "Section", "string");
            AddInfo("xmp:xmp-prism:document::name", "Selling Agency", "string");
            AddInfo("xmp:xmp-prism:document::name", "Series Number", "integer");
            AddInfo("xmp:xmp-prism:document::name", "Series Title", "string");
            AddInfo("xmp:xmp-prism:document::name", "Sport", "string");
            AddInfo("xmp:xmp-prism:document::name", "Starting Page", "string");
            AddInfo("xmp:xmp-prism:document::name", "Subsection 1", "string");
            AddInfo("xmp:xmp-prism:document::name", "Subsection 2", "string");
            AddInfo("xmp:xmp-prism:document::name", "Subsection 3", "string");
            AddInfo("xmp:xmp-prism:document::name", "Subsection 4", "string");
            AddInfo("xmp:xmp-prism:document::name", "Subtitle", "string");
            AddInfo("xmp:xmp-prism:document::name", "Supplement Display ID", "string");
            AddInfo("xmp:xmp-prism:document::name", "Supplement Starting Page", "string");
            AddInfo("xmp:xmp-prism:document::name", "Supplement Title", "string");
            AddInfo("xmp:xmp-prism:document::name", "Teaser", "string");
            AddInfo("xmp:xmp-prism:document::name", "Ticker", "string");
            AddInfo("xmp:xmp-prism:document::name", "Time Period", "string");
            AddInfo("xmp:xmp-prism:document::name", "URL", "struct");
            AddInfo("xmp:xmp-prism:document::name", "URLA-platform", "string");
            AddInfo("xmp:xmp-prism:document::name", "URL Url", "string");
            AddInfo("xmp:xmp-prism:document::name", "Usps Number", "string");
            AddInfo("xmp:xmp-prism:document::name", "Version Identifier", "string");
            AddInfo("xmp:xmp-prism:document::name", "Volume", "string");
            AddInfo("xmp:xmp-prism:document::name", "Word Count", "integer");
        }


        static void InitTable846()
        {
            AddInfo("xmp:xmp-prl:document::name", "Geography", "string");
            AddInfo("xmp:xmp-prl:document::name", "Industry", "string");
            AddInfo("xmp:xmp-prl:document::name", "Usage", "string");
        }


        static void InitTable847()
        {
            AddInfo("xmp:xmp-prm:document::name", "Cooking Equipment", "string");
            AddInfo("xmp:xmp-prm:document::name", "Cooking Method", "string");
            AddInfo("xmp:xmp-prm:document::name", "Course", "string");
            AddInfo("xmp:xmp-prm:document::name", "Cuisine", "string");
            AddInfo("xmp:xmp-prm:document::name", "Dietary Needs", "string");
            AddInfo("xmp:xmp-prm:document::name", "Dish Type", "string");
            AddInfo("xmp:xmp-prm:document::name", "Duration", "string");
            AddInfo("xmp:xmp-prm:document::name", "Ingredient Exclusion", "string");
            AddInfo("xmp:xmp-prm:document::name", "Main Ingredient", "string");
            AddInfo("xmp:xmp-prm:document::name", "Meal", "string");
            AddInfo("xmp:xmp-prm:document::name", "Recipe Ending Page", "string");
            AddInfo("xmp:xmp-prm:document::name", "Recipe Page Range", "string");
            AddInfo("xmp:xmp-prm:document::name", "Recipe Source", "string");
            AddInfo("xmp:xmp-prm:document::name", "Recipe Starting Page", "string");
            AddInfo("xmp:xmp-prm:document::name", "Recipe Title", "string");
            AddInfo("xmp:xmp-prm:document::name", "Serving Size", "string");
            AddInfo("xmp:xmp-prm:document::name", "Skill Level", "string");
            AddInfo("xmp:xmp-prm:document::name", "Special Occasion", "string");
            AddInfo("xmp:xmp-prm:document::name", "Yield", "string");
        }


        static void InitTable848()
        {
            AddInfo("xmp:xmp-pur:document::name", "Adult Content Warning", "string");
            AddInfo("xmp:xmp-pur:document::name", "Agreement", "string");
            AddInfo("xmp:xmp-pur:document::name", "Copyright", "lang-alt");
            AddInfo("xmp:xmp-pur:document::name", "Credit Line", "string");
            AddInfo("xmp:xmp-pur:document::name", "Embargo Date", "date");
            AddInfo("xmp:xmp-pur:document::name", "Exclusivity End Date", "date");
            AddInfo("xmp:xmp-pur:document::name", "Expiration Date", "date");
            AddInfo("xmp:xmp-pur:document::name", "Image Size Restriction", "string");
            AddInfo("xmp:xmp-pur:document::name", "Option End Date", "date");
            AddInfo("xmp:xmp-pur:document::name", "Permissions", "string");
            AddInfo("xmp:xmp-pur:document::name", "Restrictions", "string");
            AddInfo("xmp:xmp-pur:document::name", "Reuse Prohibited", "boolean");
            AddInfo("xmp:xmp-pur:document::name", "Rights Agent", "string");
            AddInfo("xmp:xmp-pur:document::name", "Rights Owner", "string");
        }


        static void InitTable849()
        {
            AddInfo("xmp:xmp-rdf:document::name", "About", "string");
        }


        static void InitTable850()
        {
            AddInfo("xmp:xmp-swf:image::name", "Background Alpha", "integer");
            AddInfo("xmp:xmp-swf:image::name", "Forward Lock", "boolean");
            AddInfo("xmp:xmp-swf:image::name", "Max Storage", "integer");
            AddInfo("xmp:xmp-swf:image::name", "Type", "string");
        }


        static void InitTable851()
        {
            AddInfo("xmp:xmp-tiff:image::name", "Artist", "string");
            AddInfo("xmp:xmp-tiff:image::name", "Bits Per Sample", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Compression", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Copyright", "lang-alt");
            AddInfo("xmp:xmp-tiff:image::name", "Date/Time Modified", "date");
            AddInfo("xmp:xmp-tiff:image::name", "Image Description", "lang-alt");
            AddInfo("xmp:xmp-tiff:image::name", "Image Height", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Image Width", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Make", "string");
            AddInfo("xmp:xmp-tiff:image::name", "Camera Model Name", "string");
            AddInfo("xmp:xmp-tiff:image::name", "Native Digest", "string");
            AddInfo("xmp:xmp-tiff:image::name", "Orientation", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Photometric Interpretation", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Planar Configuration", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Primary Chromaticities", "rational");
            AddInfo("xmp:xmp-tiff:image::name", "Reference Black White", "rational");
            AddInfo("xmp:xmp-tiff:image::name", "Resolution Unit", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Samples Per Pixel", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Software", "string");
            AddInfo("xmp:xmp-tiff:image::name", "Transfer Function", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "White Point", "rational");
            AddInfo("xmp:xmp-tiff:image::name", "X Resolution", "rational");
            AddInfo("xmp:xmp-tiff:image::name", "Y Cb Cr Coefficients", "rational");
            AddInfo("xmp:xmp-tiff:image::name", "Y Cb Cr Positioning", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Y Cb Cr Sub Sampling", "integer");
            AddInfo("xmp:xmp-tiff:image::name", "Y Resolution", "rational");
        }


        static void InitTable852()
        {
            AddInfo("xmp:xmp-x:document::name", "XMP Toolkit", "string");
        }


        static void InitTable853()
        {
            AddInfo("xmp:xmp-xmp:image::name", "Advisory", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Author", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Base URL", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Create Date", "date");
            AddInfo("xmp:xmp-xmp:image::name", "Creator Tool", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Description", "lang-alt");
            AddInfo("xmp:xmp-xmp:image::name", "Format", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Identifier", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Keywords", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Label", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Metadata Date", "date");
            AddInfo("xmp:xmp-xmp:image::name", "Modify Date", "date");
            AddInfo("xmp:xmp-xmp:image::name", "Nickname", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Page Info", "struct");
            AddInfo("xmp:xmp-xmp:image::name", "Page Image Format", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Page Image Height", "integer");
            AddInfo("xmp:xmp-xmp:image::name", "Page Image", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Page Image Page Number", "integer");
            AddInfo("xmp:xmp-xmp:image::name", "Page Image Width", "integer");
            AddInfo("xmp:xmp-xmp:image::name", "Rating", "real");
            AddInfo("xmp:xmp-xmp:image::name", "Thumbnails", "struct");
            AddInfo("xmp:xmp-xmp:image::name", "Thumbnail Format", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Thumbnail Height", "integer");
            AddInfo("xmp:xmp-xmp:image::name", "Thumbnail Image", "string");
            AddInfo("xmp:xmp-xmp:image::name", "Thumbnail Width", "integer");
            AddInfo("xmp:xmp-xmp:image::name", "Title", "lang-alt");
        }


        static void InitTable854()
        {
            AddInfo("xmp:xmp-xmpbj:other::name", "Job Ref", "struct");
            AddInfo("xmp:xmp-xmpbj:other::name", "Job Ref Id", "string");
            AddInfo("xmp:xmp-xmpbj:other::name", "Job Ref Name", "string");
            AddInfo("xmp:xmp-xmpbj:other::name", "Job Ref Url", "string");
        }


        static void InitTable855()
        {
            AddInfo("xmp:xmp-xmpdm:image::name", "Abs Peak Audio File Path", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Album", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Alt Tape Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Alt Timecode", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Alt Timecode Time Format", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Alt Timecode Time Value", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Alt Timecode Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Artist", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Audio Channel Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Audio Compressor", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Audio Mod Date", "date");
            AddInfo("xmp:xmp-xmpdm:image::name", "Audio Sample Rate", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Audio Sample Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params Rise In Decibel", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params Rise In Time Duration", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params Rise In Time Duration Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params Rise In Time Duration Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Beat Splice Params Use File Beats Marker", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Camera Angle", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Camera Label", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Camera Model", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Camera Move", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Client", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "DM Comment", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Composer", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Duration", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Duration Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Duration Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Managed", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Path", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Start Time", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Start Time Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Start Time Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Track", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Contributed Media Web Statement", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Copyright", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Director", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Director Photography", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Disc Number", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Duration", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Duration Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Duration Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Engineer", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "File Data Rate", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Genre", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Good", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Instrument", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Intro Time", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Intro Time Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Intro Time Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Key", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Log Comment", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Loop", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Lyrics", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Comment", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Cue Point Params", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Cue Point Params Key", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Cue Point Params Value", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Cue Point Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Duration", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Location", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Probability", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Speaker", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Start Time", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Target", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Markers Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Metadata Mod Date", "date");
            AddInfo("xmp:xmp-xmpdm:image::name", "Number Of Beats", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Out Cue", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Out Cue Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Out Cue Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Part Of Compilation", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Project Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Project Ref", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Project Ref Path", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Project Ref Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Pull Down", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Relative Peak Audio File Path", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Relative Timestamp", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Relative Timestamp Scale", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Relative Timestamp Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Release Date", "date");
            AddInfo("xmp:xmp-xmpdm:image::name", "Resample Params", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Resample Params Quality", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Scale Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Scene", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Date", "date");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Day", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Location", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Number", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Shot Size", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Speaker Placement", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Timecode", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Timecode Time Format", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Timecode Time Value", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Timecode Value", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Time Sample Size", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Start Time Scale", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Stretch Mode", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Take Number", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tape Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tempo", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Time Scale Params", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Time Scale Params Frame Overlapping Percentage", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Time Scale Params Frame Size", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Time Scale Params Quality", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Time Signature", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Track Number", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Frame Rate", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Comment", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Cue Point Params", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Cue Point Params Key", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Cue Point Params Value", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Cue Point Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Duration", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Location", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Probability", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Speaker", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Start Time", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Target", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Markers Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Track Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Tracks Track Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Mode", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color A", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color B", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Black", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Blue", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Cyan", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Green", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color L", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Magenta", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Mode", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Red", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Swatch Name", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Tint", "integer");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Type", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Premultiple Color Yellow", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Alpha Unity Is Transparent", "boolean");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Color Space", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Compressor", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Field Order", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Frame Rate", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Frame Size", "struct");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Frame Size H", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Frame Size Unit", "string");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Frame Size W", "real");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Mod Date", "date");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Pixel Aspect Ratio", "rational");
            AddInfo("xmp:xmp-xmpdm:image::name", "Video Pixel Depth", "string");
        }


        static void InitTable856()
        {
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Alternate Paths", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From File Path", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From From Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Last Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Mask Markers", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Part Mapping", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From To Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Derived From Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "History Action", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History Changed", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History Parameters", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History Software Agent", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "History When", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Alternate Paths", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients File Path", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients From Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Last Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Mask Markers", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Part Mapping", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients To Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Ingredients Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Last URL", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Alternate Paths", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From File Path", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From From Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Last Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Mask Markers", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Part Mapping", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From To Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Managed From Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Link Form", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Placed Resolution Unit", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Placed X Resolution", "real");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Placed Y Resolution", "real");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Alternate Paths", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference File Path", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference From Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Last Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Mask Markers", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Part Mapping", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference To Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Manifest Reference Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Pantry", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Preserved File Name", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Alternate Paths", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of File Path", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of From Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Last Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Manager", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Manager Variant", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Manage To", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Manage UI", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Mask Markers", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Original Document ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Part Mapping", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Rendition Class", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of To Part", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Of Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Rendition Params", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Save ID", "integer");
            AddInfo("xmp:xmp-xmpmm:other::name", "Subject", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Version ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Comments", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event", "struct");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event Action", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event Changed", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event Instance ID", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event Parameters", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event Software Agent", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Event When", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Modifier", "string");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Modify Date", "date");
            AddInfo("xmp:xmp-xmpmm:other::name", "Versions Version", "string");
        }


        static void InitTable857()
        {
            AddInfo("xmp:xmp-xmpnote:other::name", "Has Extended XMP", "string");
        }


        static void InitTable858()
        {
            AddInfo("xmp:xmp-xmpplus:author::name", "Credit Line Req", "boolean");
            AddInfo("xmp:xmp-xmpplus:author::name", "Reuse Allowed", "boolean");
        }


        static void InitTable859()
        {
            AddInfo("xmp:xmp-xmprights:author::name", "Certificate", "string");
            AddInfo("xmp:xmp-xmprights:author::name", "Marked", "boolean");
            AddInfo("xmp:xmp-xmprights:author::name", "Owner", "string");
            AddInfo("xmp:xmp-xmprights:author::name", "Usage Terms", "lang-alt");
            AddInfo("xmp:xmp-xmprights:author::name", "Web Statement", "string");
        }


        static void InitTable860()
        {
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorants", "struct");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant A", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant B", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Black", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Blue", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Cyan", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Green", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant L", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Magenta", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Mode", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Red", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Swatch Name", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Tint", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Type", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Colorant Yellow", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Fonts", "struct");
            AddInfo("xmp:xmp-xmptpg:image::name", "Child Font Files", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Composite", "boolean");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Face", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Family", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font File Name", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Name", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Type", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Font Version", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Max Page Size", "struct");
            AddInfo("xmp:xmp-xmptpg:image::name", "Max Page Size H", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "Max Page Size Unit", "string");
            AddInfo("xmp:xmp-xmptpg:image::name", "Max Page Size W", "real");
            AddInfo("xmp:xmp-xmptpg:image::name", "N Pages", "integer");
            AddInfo("xmp:xmp-xmptpg:image::name", "Plate Names", "string");
        }


        static void InitTable861()
        {
            AddInfo("zip:zip:other::name", "Compression", "int8u");
            AddInfo("zip:zip:other::name", "Flags", "int8u");
            AddInfo("zip:zip:other::name", "Modify Date", "int32u");
            AddInfo("zip:zip:other::name", "Extra Flags", "int8u");
            AddInfo("zip:zip:other::name", "Operating System", "int8u");
            AddInfo("zip:zip:other::name", "Archived File Name", "int8u");
            AddInfo("zip:zip:other::name", "Comment", "int8u");
        }


        static void InitTable862()
        {
            AddInfo("zip:zip:other::name", "Zip Required Version", "int16u");
            AddInfo("zip:zip:other::name", "Zip Bit Flag", "int16u");
            AddInfo("zip:zip:other::name", "Zip Compression", "int16u");
            AddInfo("zip:zip:other::name", "Zip Modify Date", "int32u");
            AddInfo("zip:zip:other::name", "Zip CRC", "int32u");
            AddInfo("zip:zip:other::name", "Zip Compressed Size", "int32u");
            AddInfo("zip:zip:other::name", "Zip Uncompressed Size", "int32u");
            AddInfo("zip:zip:other::name", "Zip File Name Length", "int16u");
            AddInfo("zip:zip:other::name", "Zip File Name", "string");
        }


        static void InitTable863()
        {
            AddInfo("zip:zip:other::name", "Compressed Size", "int32u");
            AddInfo("zip:zip:other::name", "Uncompressed Size", "int32u");
            AddInfo("zip:zip:other::name", "Operating System", "int8u");
            AddInfo("zip:zip:other::name", "Modify Date", "int32u");
            AddInfo("zip:zip:other::name", "Packing Method", "int8u");
            AddInfo("zip:zip:other::name", "File Name Length", "int16u");
            AddInfo("zip:zip:other::name", "Archived File Name", "string");
        }


        static void InitTable864()
        {
            AddInfo("xml:xml:document::name", "Author", "?");
            AddInfo("xml:xml:document::name", "Comment", "?");
            AddInfo("xml:xml:document::name", "Copyright", "?");
            AddInfo("xml:xml:document::name", "Keywords", "?");
            AddInfo("xml:xml:document::name", "Projects", "?");
            AddInfo("xml:xml:document::name", "Title", "?");
        }


        static ExifToolLookup()
        {
            InitTable1();
            InitTable2();
            InitTable3();
            InitTable4();
            InitTable5();
            InitTable6();
            InitTable7();
            InitTable8();
            InitTable9();
            InitTable10();
            InitTable11();
            InitTable12();
            InitTable13();
            InitTable14();
            InitTable15();
            InitTable16();
            InitTable17();
            InitTable18();
            InitTable19();
            InitTable20();
            InitTable21();
            InitTable22();
            InitTable23();
            InitTable24();
            InitTable25();
            InitTable26();
            InitTable27();
            InitTable28();
            InitTable29();
            InitTable30();
            InitTable31();
            InitTable32();
            InitTable33();
            InitTable34();
            InitTable35();
            InitTable36();
            InitTable37();
            InitTable38();
            InitTable39();
            InitTable40();
            InitTable41();
            InitTable42();
            InitTable43();
            InitTable44();
            InitTable45();
            InitTable46();
            InitTable47();
            InitTable48();
            InitTable49();
            InitTable50();
            InitTable51();
            InitTable52();
            InitTable53();
            InitTable54();
            InitTable55();
            InitTable56();
            InitTable57();
            InitTable58();
            InitTable59();
            InitTable60();
            InitTable61();
            InitTable62();
            InitTable63();
            InitTable64();
            InitTable65();
            InitTable66();
            InitTable67();
            InitTable68();
            InitTable69();
            InitTable70();
            InitTable71();
            InitTable72();
            InitTable73();
            InitTable74();
            InitTable75();
            InitTable76();
            InitTable77();
            InitTable78();
            InitTable79();
            InitTable80();
            InitTable81();
            InitTable82();
            InitTable83();
            InitTable84();
            InitTable85();
            InitTable86();
            InitTable87();
            InitTable88();
            InitTable89();
            InitTable90();
            InitTable91();
            InitTable92();
            InitTable93();
            InitTable94();
            InitTable95();
            InitTable96();
            InitTable97();
            InitTable98();
            InitTable99();
            InitTable100();
            InitTable101();
            InitTable102();
            InitTable103();
            InitTable104();
            InitTable105();
            InitTable106();
            InitTable107();
            InitTable108();
            InitTable109();
            InitTable110();
            InitTable111();
            InitTable112();
            InitTable113();
            InitTable114();
            InitTable115();
            InitTable116();
            InitTable117();
            InitTable118();
            InitTable119();
            InitTable120();
            InitTable121();
            InitTable122();
            InitTable123();
            InitTable124();
            InitTable125();
            InitTable126();
            InitTable127();
            InitTable128();
            InitTable129();
            InitTable130();
            InitTable131();
            InitTable132();
            InitTable133();
            InitTable134();
            InitTable135();
            InitTable136();
            InitTable137();
            InitTable138();
            InitTable139();
            InitTable140();
            InitTable141();
            InitTable142();
            InitTable143();
            InitTable144();
            InitTable145();
            InitTable146();
            InitTable147();
            InitTable148();
            InitTable149();
            InitTable150();
            InitTable151();
            InitTable152();
            InitTable153();
            InitTable154();
            InitTable155();
            InitTable156();
            InitTable157();
            InitTable158();
            InitTable159();
            InitTable160();
            InitTable161();
            InitTable162();
            InitTable163();
            InitTable164();
            InitTable165();
            InitTable166();
            InitTable167();
            InitTable168();
            InitTable169();
            InitTable170();
            InitTable171();
            InitTable172();
            InitTable173();
            InitTable174();
            InitTable175();
            InitTable176();
            InitTable177();
            InitTable178();
            InitTable179();
            InitTable180();
            InitTable181();
            InitTable182();
            InitTable183();
            InitTable184();
            InitTable185();
            InitTable186();
            InitTable187();
            InitTable188();
            InitTable189();
            InitTable190();
            InitTable191();
            InitTable192();
            InitTable193();
            InitTable194();
            InitTable195();
            InitTable196();
            InitTable197();
            InitTable198();
            InitTable199();
            InitTable200();
            InitTable201();
            InitTable202();
            InitTable203();
            InitTable204();
            InitTable205();
            InitTable206();
            InitTable207();
            InitTable208();
            InitTable209();
            InitTable210();
            InitTable211();
            InitTable212();
            InitTable213();
            InitTable214();
            InitTable215();
            InitTable216();
            InitTable217();
            InitTable218();
            InitTable219();
            InitTable220();
            InitTable221();
            InitTable222();
            InitTable223();
            InitTable224();
            InitTable225();
            InitTable226();
            InitTable227();
            InitTable228();
            InitTable229();
            InitTable230();
            InitTable231();
            InitTable232();
            InitTable233();
            InitTable234();
            InitTable235();
            InitTable236();
            InitTable237();
            InitTable238();
            InitTable239();
            InitTable240();
            InitTable241();
            InitTable242();
            InitTable243();
            InitTable244();
            InitTable245();
            InitTable246();
            InitTable247();
            InitTable248();
            InitTable249();
            InitTable250();
            InitTable251();
            InitTable252();
            InitTable253();
            InitTable254();
            InitTable255();
            InitTable256();
            InitTable257();
            InitTable258();
            InitTable259();
            InitTable260();
            InitTable261();
            InitTable262();
            InitTable263();
            InitTable264();
            InitTable265();
            InitTable266();
            InitTable267();
            InitTable268();
            InitTable269();
            InitTable270();
            InitTable271();
            InitTable272();
            InitTable273();
            InitTable274();
            InitTable275();
            InitTable276();
            InitTable277();
            InitTable278();
            InitTable279();
            InitTable280();
            InitTable281();
            InitTable282();
            InitTable283();
            InitTable284();
            InitTable285();
            InitTable286();
            InitTable287();
            InitTable288();
            InitTable289();
            InitTable290();
            InitTable291();
            InitTable292();
            InitTable293();
            InitTable294();
            InitTable295();
            InitTable296();
            InitTable297();
            InitTable298();
            InitTable299();
            InitTable300();
            InitTable301();
            InitTable302();
            InitTable303();
            InitTable304();
            InitTable305();
            InitTable306();
            InitTable307();
            InitTable308();
            InitTable309();
            InitTable310();
            InitTable311();
            InitTable312();
            InitTable313();
            InitTable314();
            InitTable315();
            InitTable316();
            InitTable317();
            InitTable318();
            InitTable319();
            InitTable320();
            InitTable321();
            InitTable322();
            InitTable323();
            InitTable324();
            InitTable325();
            InitTable326();
            InitTable327();
            InitTable328();
            InitTable329();
            InitTable330();
            InitTable331();
            InitTable332();
            InitTable333();
            InitTable334();
            InitTable335();
            InitTable336();
            InitTable337();
            InitTable338();
            InitTable339();
            InitTable340();
            InitTable341();
            InitTable342();
            InitTable343();
            InitTable344();
            InitTable345();
            InitTable346();
            InitTable347();
            InitTable348();
            InitTable349();
            InitTable350();
            InitTable351();
            InitTable352();
            InitTable353();
            InitTable354();
            InitTable355();
            InitTable356();
            InitTable357();
            InitTable358();
            InitTable359();
            InitTable360();
            InitTable361();
            InitTable362();
            InitTable363();
            InitTable364();
            InitTable365();
            InitTable366();
            InitTable367();
            InitTable368();
            InitTable369();
            InitTable370();
            InitTable371();
            InitTable372();
            InitTable373();
            InitTable374();
            InitTable375();
            InitTable376();
            InitTable377();
            InitTable378();
            InitTable379();
            InitTable380();
            InitTable381();
            InitTable382();
            InitTable383();
            InitTable384();
            InitTable385();
            InitTable386();
            InitTable387();
            InitTable388();
            InitTable389();
            InitTable390();
            InitTable391();
            InitTable392();
            InitTable393();
            InitTable394();
            InitTable395();
            InitTable396();
            InitTable397();
            InitTable398();
            InitTable399();
            InitTable400();
            InitTable401();
            InitTable402();
            InitTable403();
            InitTable404();
            InitTable405();
            InitTable406();
            InitTable407();
            InitTable408();
            InitTable409();
            InitTable410();
            InitTable411();
            InitTable412();
            InitTable413();
            InitTable414();
            InitTable415();
            InitTable416();
            InitTable417();
            InitTable418();
            InitTable419();
            InitTable420();
            InitTable421();
            InitTable422();
            InitTable423();
            InitTable424();
            InitTable425();
            InitTable426();
            InitTable427();
            InitTable428();
            InitTable429();
            InitTable430();
            InitTable431();
            InitTable432();
            InitTable433();
            InitTable434();
            InitTable435();
            InitTable436();
            InitTable437();
            InitTable438();
            InitTable439();
            InitTable440();
            InitTable441();
            InitTable442();
            InitTable443();
            InitTable444();
            InitTable445();
            InitTable446();
            InitTable447();
            InitTable448();
            InitTable449();
            InitTable450();
            InitTable451();
            InitTable452();
            InitTable453();
            InitTable454();
            InitTable455();
            InitTable456();
            InitTable457();
            InitTable458();
            InitTable459();
            InitTable460();
            InitTable461();
            InitTable462();
            InitTable463();
            InitTable464();
            InitTable465();
            InitTable466();
            InitTable467();
            InitTable468();
            InitTable469();
            InitTable470();
            InitTable471();
            InitTable472();
            InitTable473();
            InitTable474();
            InitTable475();
            InitTable476();
            InitTable477();
            InitTable478();
            InitTable479();
            InitTable480();
            InitTable481();
            InitTable482();
            InitTable483();
            InitTable484();
            InitTable485();
            InitTable486();
            InitTable487();
            InitTable488();
            InitTable489();
            InitTable490();
            InitTable491();
            InitTable492();
            InitTable493();
            InitTable494();
            InitTable495();
            InitTable496();
            InitTable497();
            InitTable498();
            InitTable499();
            InitTable500();
            InitTable501();
            InitTable502();
            InitTable503();
            InitTable504();
            InitTable505();
            InitTable506();
            InitTable507();
            InitTable508();
            InitTable509();
            InitTable510();
            InitTable511();
            InitTable512();
            InitTable513();
            InitTable514();
            InitTable515();
            InitTable516();
            InitTable517();
            InitTable518();
            InitTable519();
            InitTable520();
            InitTable521();
            InitTable522();
            InitTable523();
            InitTable524();
            InitTable525();
            InitTable526();
            InitTable527();
            InitTable528();
            InitTable529();
            InitTable530();
            InitTable531();
            InitTable532();
            InitTable533();
            InitTable534();
            InitTable535();
            InitTable536();
            InitTable537();
            InitTable538();
            InitTable539();
            InitTable540();
            InitTable541();
            InitTable542();
            InitTable543();
            InitTable544();
            InitTable545();
            InitTable546();
            InitTable547();
            InitTable548();
            InitTable549();
            InitTable550();
            InitTable551();
            InitTable552();
            InitTable553();
            InitTable554();
            InitTable555();
            InitTable556();
            InitTable557();
            InitTable558();
            InitTable559();
            InitTable560();
            InitTable561();
            InitTable562();
            InitTable563();
            InitTable564();
            InitTable565();
            InitTable566();
            InitTable567();
            InitTable568();
            InitTable569();
            InitTable570();
            InitTable571();
            InitTable572();
            InitTable573();
            InitTable574();
            InitTable575();
            InitTable576();
            InitTable577();
            InitTable578();
            InitTable579();
            InitTable580();
            InitTable581();
            InitTable582();
            InitTable583();
            InitTable584();
            InitTable585();
            InitTable586();
            InitTable587();
            InitTable588();
            InitTable589();
            InitTable590();
            InitTable591();
            InitTable592();
            InitTable593();
            InitTable594();
            InitTable595();
            InitTable596();
            InitTable597();
            InitTable598();
            InitTable599();
            InitTable600();
            InitTable601();
            InitTable602();
            InitTable603();
            InitTable604();
            InitTable605();
            InitTable606();
            InitTable607();
            InitTable608();
            InitTable609();
            InitTable610();
            InitTable611();
            InitTable612();
            InitTable613();
            InitTable614();
            InitTable615();
            InitTable616();
            InitTable617();
            InitTable618();
            InitTable619();
            InitTable620();
            InitTable621();
            InitTable622();
            InitTable623();
            InitTable624();
            InitTable625();
            InitTable626();
            InitTable627();
            InitTable628();
            InitTable629();
            InitTable630();
            InitTable631();
            InitTable632();
            InitTable633();
            InitTable634();
            InitTable635();
            InitTable636();
            InitTable637();
            InitTable638();
            InitTable639();
            InitTable640();
            InitTable641();
            InitTable642();
            InitTable643();
            InitTable644();
            InitTable645();
            InitTable646();
            InitTable647();
            InitTable648();
            InitTable649();
            InitTable650();
            InitTable651();
            InitTable652();
            InitTable653();
            InitTable654();
            InitTable655();
            InitTable656();
            InitTable657();
            InitTable658();
            InitTable659();
            InitTable660();
            InitTable661();
            InitTable662();
            InitTable663();
            InitTable664();
            InitTable665();
            InitTable666();
            InitTable667();
            InitTable668();
            InitTable669();
            InitTable670();
            InitTable671();
            InitTable672();
            InitTable673();
            InitTable674();
            InitTable675();
            InitTable676();
            InitTable677();
            InitTable678();
            InitTable679();
            InitTable680();
            InitTable681();
            InitTable682();
            InitTable683();
            InitTable684();
            InitTable685();
            InitTable686();
            InitTable687();
            InitTable688();
            InitTable689();
            InitTable690();
            InitTable691();
            InitTable692();
            InitTable693();
            InitTable694();
            InitTable695();
            InitTable696();
            InitTable697();
            InitTable698();
            InitTable699();
            InitTable700();
            InitTable701();
            InitTable702();
            InitTable703();
            InitTable704();
            InitTable705();
            InitTable706();
            InitTable707();
            InitTable708();
            InitTable709();
            InitTable710();
            InitTable711();
            InitTable712();
            InitTable713();
            InitTable714();
            InitTable715();
            InitTable716();
            InitTable717();
            InitTable718();
            InitTable719();
            InitTable720();
            InitTable721();
            InitTable722();
            InitTable723();
            InitTable724();
            InitTable725();
            InitTable726();
            InitTable727();
            InitTable728();
            InitTable729();
            InitTable730();
            InitTable731();
            InitTable732();
            InitTable733();
            InitTable734();
            InitTable735();
            InitTable736();
            InitTable737();
            InitTable738();
            InitTable739();
            InitTable740();
            InitTable741();
            InitTable742();
            InitTable743();
            InitTable744();
            InitTable745();
            InitTable746();
            InitTable747();
            InitTable748();
            InitTable749();
            InitTable750();
            InitTable751();
            InitTable752();
            InitTable753();
            InitTable754();
            InitTable755();
            InitTable756();
            InitTable757();
            InitTable758();
            InitTable759();
            InitTable760();
            InitTable761();
            InitTable762();
            InitTable763();
            InitTable764();
            InitTable765();
            InitTable766();
            InitTable767();
            InitTable768();
            InitTable769();
            InitTable770();
            InitTable771();
            InitTable772();
            InitTable773();
            InitTable774();
            InitTable775();
            InitTable776();
            InitTable777();
            InitTable778();
            InitTable779();
            InitTable780();
            InitTable781();
            InitTable782();
            InitTable783();
            InitTable784();
            InitTable785();
            InitTable786();
            InitTable787();
            InitTable788();
            InitTable789();
            InitTable790();
            InitTable791();
            InitTable792();
            InitTable793();
            InitTable794();
            InitTable795();
            InitTable796();
            InitTable797();
            InitTable798();
            InitTable799();
            InitTable800();
            InitTable801();
            InitTable802();
            InitTable803();
            InitTable804();
            InitTable805();
            InitTable806();
            InitTable807();
            InitTable808();
            InitTable809();
            InitTable810();
            InitTable811();
            InitTable812();
            InitTable813();
            InitTable814();
            InitTable815();
            InitTable816();
            InitTable817();
            InitTable818();
            InitTable819();
            InitTable820();
            InitTable821();
            InitTable822();
            InitTable823();
            InitTable824();
            InitTable825();
            InitTable826();
            InitTable827();
            InitTable828();
            InitTable829();
            InitTable830();
            InitTable831();
            InitTable832();
            InitTable833();
            InitTable834();
            InitTable835();
            InitTable836();
            InitTable837();
            InitTable838();
            InitTable839();
            InitTable840();
            InitTable841();
            InitTable842();
            InitTable843();
            InitTable844();
            InitTable845();
            InitTable846();
            InitTable847();
            InitTable848();
            InitTable849();
            InitTable850();
            InitTable851();
            InitTable852();
            InitTable853();
            InitTable854();
            InitTable855();
            InitTable856();
            InitTable857();
            InitTable858();
            InitTable859();
            InitTable860();
            InitTable861();
            InitTable862();
            InitTable863();
            InitTable864();
        }


        static void AddInfo(string name, string description, string type)
        {
            if(!Details.ContainsKey(name))
            {
                Details.Add(name, new TagInfo { Name = name, Description = description, ValueType = type });
            }
            //else
            //{
                //Console.WriteLine($"duplicate: {name}");
            //}
        }
    }
}

